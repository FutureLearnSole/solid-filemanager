{"version":3,"sources":["../node_modules/n3/lib sync /^/.//N3.*$","Reducers/MainReducer.js","serviceWorker.js","config.js","Api/folderUtils.js","Api/Api.js","Api/ApiHandler.js","Actions/Actions.js","Components/File/File.jsx","Components/FileList/FileListEmptyMessage.jsx","Components/Loader/Loader.jsx","Components/FileList/FileList.jsx","Components/ContextMenu/ContextMenuActions/CreateFolderAction.jsx","Components/ContextMenu/ContextMenuActions/CreateFileAction.jsx","Components/ContextMenu/ContextMenuActions/UploadFileAction.jsx","Components/ContextMenu/ContextMenuActions/SolidLogoutAction.jsx","Components/Navbar/ThreeDotsMenu.jsx","Components/Breadcrumb/BreadcrumbText.jsx","Components/Navbar/Navbar.jsx","Components/ContextMenu/ContextMenuActions/OpenAction.jsx","Components/ContextMenu/ContextMenuActions/RemoveAction.jsx","Components/ContextMenu/ContextMenuActions/MoveAction.jsx","Components/ContextMenu/ContextMenuActions/CopyAction.jsx","Components/ContextMenu/ContextMenuActions/EditAction.jsx","Components/ContextMenu/ContextMenuActions/RenameAction.jsx","Components/ContextMenu/ContextMenuActions/DownloadAction.jsx","Components/ContextMenu/ContextMenuActions/OpenInNewTabAction.jsx","Components/ContextMenu/ContextMenu.jsx","Components/Dialogs/SolidLogin/SolidLogin.jsx","Components/Dialogs/SolidLogout/SolidLogout.jsx","Components/Dialogs/Content/Content.jsx","Components/Dialogs/Edit/Edit.jsx","Components/Dialogs/CreateFolder/CreateFolder.jsx","Components/Dialogs/CreateFile/CreateFile.jsx","Components/Dialogs/Rename/Rename.jsx","Components/File/FileSublist/FileSublist.jsx","Components/FileList/FileListSublist/FileListSublist.jsx","Components/Dialogs/Move/Move.jsx","Components/Dialogs/Copy/Copy.jsx","Components/FileUploader/UploadFileList.jsx","Components/FileUploader/FileUploader.jsx","Components/Dialogs/UploadFile/UploadFile.jsx","Components/Dialogs/Dialogs.jsx","Components/Notification/DynamicSnackbar.jsx","App.js","index.js"],"names":["map","./N3Lexer","./N3Lexer.js","./N3Parser","./N3Parser.js","./N3Store","./N3Store.js","./N3StreamParser","./N3StreamParser.js","./N3StreamWriter","./N3StreamWriter.js","./N3Util","./N3Util.js","./N3Writer","./N3Writer.js","webpackContext","req","id","webpackContextResolve","__webpack_require__","e","Error","code","keys","Object","resolve","module","exports","defaultState","path","pathSublist","host","isLoggedIn","webId","fileList","fileListSublist","fileListFilter","contextMenuVisible","contextMenuPosition","contextMenuPositionElement","selectedFiles","selectedFolderSublist","loading","loadingSublist","errorMsg","visibleDialogSolidLogin","visibleDialogSolidLogout","visibleDialogCreateFolder","visibleDialogCreateFile","visibleDialogUploadFile","visibleDialogContent","visibleDialogEdit","visibleDialogMove","visibleDialogCopy","visibleDialogRename","fileContentBlobUrl","fileUploadProgress","fileUploadList","MainReducer","state","arguments","length","undefined","action","type","assign","value","concat","toConsumableArray","sort","a","b","name","toLowerCase","filter","f","i","self","ff","indexOf","find","parseInt","URL","revokeObjectURL","createObjectURL","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","getHost","setHost","newHost","slice","isEditableFilePattern","isImageFilePattern","isExtractableFilePattern","actions","create_folder","move","copy","copy_folder","compress","extract","edit","remove","upload","upload_by_chunks","preview_images","folderType","fileType","getFolderItems","graph","subj","files","folders","each","rdflib","forEach","item","newItem","url","folderNode","isAnInstanceOfClass","types","index","getFileType","stats","subjectName","subjectNode","mod","size","mtime","modified","any","getStats","label","decodeURIComponent","replace","push","text2graph","_x","_x2","_x3","_text2graph","apply","this","_callee","text","contentType","regenerator_default","wrap","_context","prev","next","abrupt","Promise","reject","guessFileType","err","stop","ext","fetchFile","_fetchFile","fileName","_args","buildFileUrl","solidAuth","assertSuccessfulResponse","fetchFolder","_fetchFolder","_callee2","folderName","_args2","_context2","buildFolderUrl","readFolder","_readFolder","_callee3","response","folderRDF","folderItems","_args3","_context3","sent","folderUtils","_callee4","destination","itemNames","_context4","copyItems","removeItems","_callee5","oldName","newName","_context5","copyFile","removeItem","_callee6","oldFolderName","newFolderName","_context6","copyFolder","removeFolderRecursively","_x13","_x14","_x15","_copyItems","_callee7","_ref","promises","_context7","_ref2","includes","_ref3","_ref4","_ref5","all","Response","_x16","_x17","_x18","_x19","_copyFile","_callee8","originPath","originName","destinationPath","destinationName","destinationUrl","fileResponse","content","_context8","headers","get","t0","blob","method","body","_x20","_x21","_x22","_x23","_copyFolder","_callee9","_ref6","_context9","createFolder","_ref7","_ref8","_callee10","_context10","Array","from","file","updateItem","_x26","_x27","_createFolder","_callee11","_context11","folderExists","createItem","_x28","_x29","_x30","_x31","_updateItem","_callee12","itemName","_context12","_callee13","baseUrl","request","_context13","link","slug","Content-Type","_x36","_x37","_removeItems","_callee14","_context14","_x38","_x39","_removeItem","_callee15","_context15","status","_x40","_x41","_removeFolderRecursively","_callee16","_context16","removeFolderContents","_x42","_x43","_removeFolderContents","_callee17","folderPath","_ref9","_context17","_ref10","_ref11","_x44","_x45","_folderExists","_callee18","_context18","ok","logFetchError","asyncToGenerator","mark","errorMessage","group","message","stack","JSON","stringify","groupEnd","fixPath","getItemList","API","getFileBlob","filename","renameFile","newFileName","_x7","_x8","_x9","_renameFile","renameFolder","_x10","_x11","_x12","_renameFolder","moveItems","filenames","_x4","_x5","_x6","_moveItems","uploadFiles","_x24","_x25","_upload","updateTextFile","getActionsByMultipleFiles","acts","fileActs","compressible","test","editable","extractable","getActionsByFile","removeAction","splice","getHumanFileSize","bytes","Math","pow","toFixed","solidLogin","dispatch","getState","setLoading","solidPopupLogin","setWebId","setIsLoggedIn","r","toString","session","popupUri","refreshFileList","setSelectedFiles","APIHandler","join","setFileList","refreshFileListSublist","setLoadingSublist","setSelectedFolderSublist","setFileListSublist","downloadFile","msSaveOrOpenBlob","document","createElement","href","download","appendChild","click","setTimeout","removeChild","promptDownload","getFileContent","setFileContent","setVisibleDialogEdit","createNewFolder","createFolderName","folder","trim","setVisibleDialogCreateFolder","_getState14","setVisibleDialogCopy","setSelectedFileFromLastTo","lastFile","_getState15","lastPreviouslySelected","pop","lastPreviouslySelectedIndex","lastSelectedIndex","toAdd","element","initSubList","setPathSublist","resetFileUploader","setFileUploadProgress","setVisibleDialogUploadFile","setFileUploadList","enterToPreviousDirectorySublist","setPath","enterToDirectory","directory","setFileListFilter","search","setContextMenuVisible","visible","setVisibleDialogSolidLogin","setVisibleDialogSolidLogout","setVisibleDialogCreateFile","setVisibleDialogRename","setVisibleDialogMove","setVisibleDialogContent","percentage","File","_this$props","props","isSelected","handleClick","handleDoubleClick","handleContextMenu","avatarStyle","backgroundColor","blue","realSize","react_default","className","onClick","onDoubleClick","onContextMenu","data-selected","ListItem_default","ListItemAvatar_default","Avatar_default","style","Folder_default","InsertDriveFile_default","ListItemText_default","primary","decodeURI","secondary","Component","connect","ownProps","filePath","event","preventDefault","stopPropagation","x","clientX","touches","pageX","y","clientY","pageY","shiftKey","setContextMenuPosition","ctrlKey","FileListEmptyMessage","withStyles","theme","progress","margin","spacing","unit","classes","Grid_default","container","justify","CircularProgress_default","color","FileList","fileListComponent","key","Components_File_File","Loader_Loader","Components_FileList_FileListEmptyMessage","toLocaleLowerCase","callback","handleClose","MenuItem_default","ListItemIcon_default","CreateNewFolder_default","Typography_default","variant","CloudUpload_default","Clear_default","ThreeDotsMenu","anchorEl","_this","setState","currentTarget","marginLeft","IconButton_default","aria-label","aria-owns","aria-haspopup","MoreVert_default","Menu_default","open","onClose","ContextMenuActions_CreateFolderAction","ContextMenuActions_CreateFileAction","ContextMenuActions_UploadFileAction","ContextMenuActions_SolidLogoutAction","React","BreadcrumbText","handleClickPath","rootTitle","handleGoBack","canGoBack","separator","rootPath","data-index","lastPath","directories","dir","Button_default","display","KeyboardArrowLeft_default","paths","defineProperty","breakpoints","up","root","width","marginBottom","grow","flexGrow","menuButton","marginRight","title","position","borderRadius","shape","fade","palette","common","white","&:hover","searchIcon","height","pointerEvents","alignItems","justifyContent","inputRoot","inputInput","paddingTop","paddingRight","paddingBottom","paddingLeft","transition","transitions","create","&:focus","handleChange","newPath","enterToPreviousDirectoryByIndex","AppBar_default","Toolbar_default","noWrap","Components_Breadcrumb_BreadcrumbText","Search_default","InputBase_default","placeholder","onChange","input","Navbar_ThreeDotsMenu","OpenInBrowser_default","Delete_default","HowToVote_default","FileCopy_default","WrapText_default","CloudDownload_default","Link_default","ContextMenu","anchorReference","anchorPosition","top","left","transformOrigin","vertical","horizontal","PaperProps","ContextMenuActions_OpenAction","ContextMenuActions_OpenInNewTabAction","ContextMenuActions_DownloadAction","EditAction","ContextMenuActions_CopyAction","ContextMenuActions_MoveAction","RenameAction","ContextMenuActions_RemoveAction","FormDialog","storageLocation","origin","form","querySelector","handleSubmit","handleLogin","Dialog_default","aria-labelledby","fullWidth","maxWidth","DialogTitle_default","DialogContent_default","TextField_default","autoFocus","bind","DialogActions_default","handleLogout","lastBlobUrl","blobUrl","src","alt","handleOpen","_this2","fetch","t","handleSave","textArea","minHeight","defaultValue","DialogContentText_default","handleCreate","itemList","encodeURI","createFile","realName","FileSublist","FileListSublist","File_FileSublist_FileSublist","selectedPath","canMove","FileList_FileListSublist_FileListSublist","disabled","_getState13","canCopy","UploadFileList","list","dense","List_default","component","FileUploader","refs","inputfile","handleReset","handleSelectedFiles","styles","inputreset","htmlFor","ref","multiple","FileUploader_UploadFileList","handleUpload","canUpload","Components_FileUploader_FileUploader","LinearProgress_default","target","Dialogs","SolidLogin","SolidLogout","Content","Edit","CreateFolder","CreateFile","Move","Copy","Rename","UploadFile","DynamicSnackbar","notificationDuration","Snackbar_default","anchorOrigin","autoHideDuration","ContentProps","aria-describedby","close","Close_default","padding","createMuiTheme","typography","useNextVariants","App","init","core_styles","handleHideContextMenu","Navbar","Components_FileList_FileList","Components_ContextMenu_ContextMenu","Notification_DynamicSnackbar","Dialogs_Dialogs","tagName","store","createStore","applyMiddleware","thunk","ReactDOM","render","react_redux_es","src_App","getElementById","process","addEventListener","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.3a35a7c7.chunk.js","sourcesContent":["var map = {\n\t\"./N3Lexer\": 104,\n\t\"./N3Lexer.js\": 104,\n\t\"./N3Parser\": 105,\n\t\"./N3Parser.js\": 105,\n\t\"./N3Store\": 135,\n\t\"./N3Store.js\": 135,\n\t\"./N3StreamParser\": 136,\n\t\"./N3StreamParser.js\": 136,\n\t\"./N3StreamWriter\": 146,\n\t\"./N3StreamWriter.js\": 146,\n\t\"./N3Util\": 106,\n\t\"./N3Util.js\": 106,\n\t\"./N3Writer\": 110,\n\t\"./N3Writer.js\": 110\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 223;","export const defaultState = {\n    path: [],\n    pathSublist: [],\n    host: null,\n    isLoggedIn: false,\n    webId: null,\n    fileList: [],\n    fileListSublist: [],\n    fileListFilter: null,\n    contextMenuVisible: null,\n    contextMenuPosition: [],\n    contextMenuPositionElement: null,\n    selectedFiles: [],\n    selectedFolderSublist: null,\n    loading: false,\n    loadingSublist: false,\n    errorMsg: null,\n    visibleDialogSolidLogin: true,\n    visibleDialogSolidLogout: false,\n    visibleDialogCreateFolder: false,\n    visibleDialogCreateFile: false,\n    visibleDialogUploadFile: false,\n    visibleDialogContent: false,\n    visibleDialogEdit: false,\n    visibleDialogMove: false,\n    visibleDialogCopy: false,\n    visibleDialogRename: false,\n    fileContentBlobUrl: null,\n    fileUploadProgress: 0,\n    fileUploadList: []\n};\n\n/**\n * Main content reducer\n * @param {Object} state\n * @param {Object} action\n * @returns {Object}\n */\nconst MainReducer = (state = defaultState, action) => {\n    switch (action.type) {\n        case 'SET_PATH':\n            return Object.assign({}, state, {\n                path: action.value\n            });\n        case 'SET_PATH_SUB_LIST':\n            return Object.assign({}, state, {\n                pathSublist: action.value\n            });\n        case 'SET_HOST':\n            return Object.assign({}, state, {\n                host: action.value\n            });\n        case 'SET_IS_LOGGED_IN':\n            return Object.assign({}, state, {\n                isLoggedIn: action.value\n            });\n        case 'SET_WEB_ID':\n            return Object.assign({}, state, {\n                webId: action.value\n            });\n        case 'ENTER_TO_DIRECTORY':\n            return Object.assign({}, state, {\n                path: [...state.path, action.value]\n            });\n        case 'ENTER_TO_DIRECTORY_SUB_LIST':\n            return Object.assign({}, state, {\n                pathSublist: [...state.pathSublist, action.value]\n            });\n        case 'SET_FILE_LIST':\n            return Object.assign({}, state, {\n                fileList: action.value.sort((a, b) => a.type < b.type ? -1 : a.name.toLowerCase() > b.name.toLowerCase())\n            });\n        case 'SET_FILE_LIST_SUB_LIST':\n            return Object.assign({}, state, {\n                fileListSublist: action.value.sort((a, b) => a.type < b.type ? -1 : a.name.toLowerCase() > b.name.toLowerCase())\n            });\n        case 'SET_FILE_LIST_FILTER':\n            return Object.assign({}, state, { \n                fileListFilter: action.value\n            });\n        case 'SET_CONTEXT_MENU_VISIBLE':\n            return Object.assign({}, state, { \n                contextMenuVisible: action.value\n            });\n        case 'SET_CONTEXT_MENU_POSITION':\n            return Object.assign({}, state, { \n                contextMenuPosition: action.value\n            });\n        case 'SET_CONTEXT_MENU_POSITION_ELEMENT':\n            return Object.assign({}, state, { \n                contextMenuPositionElement: action.value\n            });\n        case 'SET_SELECTED_FILES':\n            return Object.assign({}, state, {\n                selectedFiles: (action.value).filter((f, i, self) => self.map(ff => ff.name).indexOf(f.name) === i)\n            });\n        case 'SET_SELECTED_FOLDER_SUB_LIST':\n            return Object.assign({}, state, {\n                selectedFolderSublist: action.value\n            });\n\n        case 'TOGGLE_SELECTED_FILE':\n            return Object.assign({}, state, {\n                selectedFiles: state.selectedFiles.find(f => f.name === action.value.name) ?\n                    state.selectedFiles.filter(f => f.name !== action.value.name) :\n                    [...state.selectedFiles, action.value]\n            });\n        case 'SET_FILE_UPLOAD_PROGRESS':\n            return Object.assign({}, state, {\n                fileUploadProgress: parseInt(action.value || 0)\n            });\n        case 'SET_LOADING':\n            return Object.assign({}, state, { \n                loading: action.value\n            });\n        case 'SET_LOADING_SUB_LIST':\n            return Object.assign({}, state, { \n                loadingSublist: action.value\n            });\n        case 'SET_ERROR_MSG':\n            return Object.assign({}, state, { \n                errorMsg: action.value\n            });\n\n        case 'SET_VISIBLE_DIALOG_SOLID_LOGIN':\n            return Object.assign({}, state, { \n                visibleDialogSolidLogin: !!action.value\n            });\n\n        case 'SET_VISIBLE_DIALOG_SOLID_LOGOUT':\n            return Object.assign({}, state, { \n                visibleDialogSolidLogout: !!action.value\n            });\n\n        case 'SET_VISIBLE_DIALOG_CREATE_FOLDER':\n            return Object.assign({}, state, { \n                visibleDialogCreateFolder: !!action.value\n            });\n\n        case 'SET_VISIBLE_DIALOG_CREATE_FILE':\n            return Object.assign({}, state, { \n                visibleDialogCreateFile: !!action.value\n            });\n            \n        case 'SET_VISIBLE_DIALOG_UPLOAD_FILE':\n            return Object.assign({}, state, { \n                visibleDialogUploadFile: !!action.value\n            });\n\n        case 'SET_VISIBLE_DIALOG_CONTENT':\n            return Object.assign({}, state, { \n                visibleDialogContent: !!action.value\n            });\n\n        case 'SET_VISIBLE_DIALOG_EDIT':\n            return Object.assign({}, state, { \n                visibleDialogEdit: !!action.value\n            });\n\n        case 'SET_VISIBLE_DIALOG_MOVE':\n            return Object.assign({}, state, { \n                visibleDialogMove: !!action.value\n            });\n        case 'SET_VISIBLE_DIALOG_COPY':\n            return Object.assign({}, state, { \n                visibleDialogCopy: !!action.value\n            });\n        case 'SET_VISIBLE_DIALOG_RENAME':\n            return Object.assign({}, state, { \n                visibleDialogRename: !!action.value\n            });\n        case 'SET_FILE_UPLOAD_LIST':\n            return Object.assign({}, state, {\n                fileUploadList: action.value\n            });\n\n        case 'SET_FILE_CONTENT':\n            /**\n             * Removing old blob url\n             */\n            state.fileContentBlobUrl && URL.revokeObjectURL(state.fileContentBlobUrl);\n            return Object.assign({}, state, { \n                fileContentBlobUrl: action.value ? URL.createObjectURL(action.value) : null\n            });\n\n        default:\n            return state;\n    }\n};\n\nexport default MainReducer;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","let host = null;\n\nexport default {\n    getHost() {\n        return host;\n    },\n    setHost(newHost) {\n        host = newHost;\n        while (host.slice(-1) === '/')\n            host = host.slice(0, -1);\n    },\n\n    isEditableFilePattern: /\\.(txt|diff?|patch|svg|asc|cnf|cfg|conf|html?|cfm|cgi|aspx?|ini|pl|py|md|css|cs|jsx?|jsp|log|htaccess|htpasswd|gitignore|gitattributes|env|json|atom|eml|rss|markdown|sql|xml|xslt?|sh|rb|as|bat|cmd|cob|for|ftn|frm|frx|inc|lisp|scm|coffee|php[3-6]?|java|c|cbl|go|h|scala|vb|tmpl|lock|go|yml|yaml|tsv|lst|ttl)$/i,\n    isImageFilePattern: /\\.(jpe?g|gif|bmp|png|svg|tiff?)$/i,\n    isExtractableFilePattern: /\\.(gz|tar|rar|g?zip)$/i,\n\n    actions: {\n        create_folder: true,\n        move: true,\n        copy: true,\n        copy_folder: true,\n        compress: true,\n        extract: true,\n        edit: true,\n        remove: true,\n        upload: true,\n        upload_by_chunks: true,\n        preview_images: true,\n    }\n};\n","// Based on https://github.com/jeff-zucker/solid-file-client/blob/master/src/folderUtils.js\nimport * as rdflib from 'rdflib';\n\nconst folderType = 'dir';\nconst fileType = 'file';\n\nexport function getStats(graph, subjectName) {\n    const subjectNode = rdflib.sym(subjectName);\n    const mod = rdflib.sym('http://purl.org/dc/terms/modified');\n    const size = rdflib.sym('http://www.w3.org/ns/posix/stat#size');\n    const mtime = rdflib.sym('http://www.w3.org/ns/posix/stat#mtime');\n    let modified = graph.any(subjectNode, mod, undefined);\n    if (typeof (modified) === \"undefined\") return false;\n    else modified = modified.value;\n    return {\n        modified: modified,\n        size: graph.any(subjectNode, size, undefined).value,\n        mtime: graph.any(subjectNode, mtime, undefined).value,\n    };\n}\n\n/** A type used internally to indicate we are handling a folder */\n/**\n * @param {rdflib.IndexedFormula} graph a rdflib.graph() database instance\n * @param {string} url location of the folder\n * @returns {string} content mime-type of a file, If it's a folder, return 'folder', 'unknown' for not sure\n */\nexport function getFileType(graph, url) {\n    const folderNode = rdflib.sym(url);\n    const isAnInstanceOfClass = rdflib.sym('http://www.w3.org/1999/02/22-rdf-syntax-ns#type');\n    const types = graph.each(folderNode, isAnInstanceOfClass, undefined);\n    for (const index in types) {\n        const contentType = types[index].value;\n        if (contentType.match('ldp#BasicContainer'))\n            return folderType;\n        else\n            return fileType;\n    }\n    return 'unknown';\n}\nexport function getFolderItems(graph, subj) {\n    const files = [];\n    const folders = [];\n    graph.each(\n        rdflib.sym(subj),\n        rdflib.sym('http://www.w3.org/ns/ldp#contains'),\n        undefined\n    ).forEach(item => {\n        let newItem = {}\n        newItem.type = getFileType(graph, item.value)\n        const stats = getStats(graph, item.value)\n        newItem.modified = stats.modified\n        newItem.size = stats.size\n        newItem.mtime = stats.mtime\n        newItem.label = decodeURIComponent(item.value).replace(/.*\\//, '')\n\n        if (newItem.type === folderType) {\n            item.value = item.value.replace(/[/]+/g, '/');\n            item.value = item.value.replace(/https:/, 'https:/');\n            const name = item.value.replace(/\\/$/, '')\n            newItem.name = name.replace(/.*\\//, '')\n            newItem.url = item.value\n\n            folders.push(newItem);\n        }\n        else {\n            newItem.url = item.value\n            newItem.name = item.value.replace(/.*\\//, '')\n\n            files.push(newItem);\n        }\n    });\n\n    return { files, folders };\n}\n\n/**\n * @param {string} text RDF text that can be passed to $rdf.parse()\n * @param {*} content the request body\n * @param {string} contentType Content-Type of the request\n * @returns {$rdf.IndexedFormula} a $rdf.graph() database instance with parsed RDF\n */\nexport async function text2graph(text, url, contentType) {\n    return new Promise((resolve, reject) => {\n        contentType = contentType || guessFileType(url)\n        var graph = rdflib.graph();\n        try {\n            rdflib.parse(text, graph, url, contentType);\n            resolve(graph);\n        } catch (err) {\n            reject(err)\n        }\n    })\n}\n\n/*cjs*/ function guessFileType(url) {\n    const ext = url.replace(/.*\\./, '');\n    if (ext.match(/\\/$/)) return folderType;\n    if (ext.match(/(md|markdown)/)) return 'text/markdown';\n    if (ext.match(/html/)) return 'text/html';\n    if (ext.match(/xml/)) return 'text/xml';\n    if (ext.match(/ttl/)) return 'text/turtle';\n    if (ext.match(/n3/)) return 'text/n3';\n    if (ext.match(/rq/)) return 'application/sparql';\n    if (ext.match(/css/)) return 'text/css';\n    if (ext.match(/txt/)) return 'text/plain';\n    if (ext.match(/json/)) return 'application/json';\n    if (ext.match(/js/)) return 'application/javascript';\n    if (ext.match(/(png|gif|jpeg|tif)/)) return 'image';\n    if (ext.match(/(mp3|aif|ogg)/)) return 'audio';\n    if (ext.match(/(avi|mp4|mpeg)/)) return 'video';\n    /* default */ return 'text/turtle';\n}","import config from './../config.js';\nimport * as folderUtils from './folderUtils.js';\nimport * as solidAuth from 'solid-auth-client';\n\n/**\n * @typedef {Object} FolderItems\n * @property {Array<{Object}>} files\n * @property {Array<{Object}>} folders\n */\n\n\n/**\n * Fetch API to get item\n * @param {String} path\n * @param {String} fileName\n * @returns {Response}\n */\nexport async function fetchFile(path, fileName = '') {\n    const url = buildFileUrl(path, fileName);\n    return solidAuth.fetch(url)\n        .then(assertSuccessfulResponse);\n};\n\n\n/**\n * Fetch API to get folder\n * @param {String} path\n * @param {String} folderName\n * @returns {Response}\n */\nexport async function fetchFolder(path, folderName = '') {\n    const url = buildFolderUrl(path, folderName);\n    return solidAuth.fetch(url)\n        .then(assertSuccessfulResponse);\n};\n\n\n/**\n * Fetch API to retrieve object containing a files and folders array\n * @param {String} path\n * @param {String} folderName\n * @returns {Promise<FolderItems>}\n */\nexport async function readFolder(path, folderName = '') {\n    const url = buildFolderUrl(path, folderName);\n\n    const response = await fetchFolder(path, folderName);\n    const folderRDF = await response.text();\n    const graph = await folderUtils.text2graph(folderRDF, url, 'text/turtle');\n    const folderItems = folderUtils.getFolderItems(graph, url);\n\n    return folderItems;\n}\n\n\n/**\n * Fetch API to move items\n * @param {String} path\n * @param {String} destination\n * @param {Array<String>} itemNames\n * @returns {Response}\n */\nexport async function moveItems(path, destination, itemNames) {\n    await copyItems(path, destination, itemNames);\n    return removeItems(path, itemNames);\n};\n\n\n/**\n * Fetch API to rename a file\n * @param {String} path\n * @param {String} oldName\n * @param {String} newName\n * @returns {Response}\n */\nexport async function renameFile(path, oldName, newName) {\n    await copyFile(path, oldName, path, newName);\n    return removeItem(path, oldName);\n};\n\n\n/**\n * Fetch API to rename a folder\n * @param {String} path\n * @param {String} oldFolderName\n * @param {String} newFolderName\n * @returns {Response}\n */\nexport async function renameFolder(path, oldFolderName, newFolderName) {\n    await copyFolder(path, oldFolderName, path, newFolderName);\n    return removeFolderRecursively(path, oldFolderName);\n};\n\n\n/**\n * Fetch API to copy files\n * @param {String} path\n * @param {String} destination\n * @param {Array} itemNames\n * @returns {Response}\n */\nexport async function copyItems(path, destination, itemNames) {\n    let { files, folders } = await readFolder(path);\n\n    files = files.filter(({ name }) => itemNames.includes(name));\n    folders = folders.filter(({ name }) => itemNames.includes(name));\n\n    const promises = [\n        ...files.map(({ name }) => copyFile(path, name, destination, name)),\n        ...folders.map(({ name }) => copyFolder(path, name, destination, name))\n    ];\n\n    await Promise.all(promises);\n    return new Response();\n};\n\n\n/**\n * Fetch API to copy a file\n * @param {String} originPath\n * @param {String} originName\n * @param {String} destinationPath\n * @param {String} destinationName\n * @returns {Response}\n */\nexport async function copyFile(originPath, originName, destinationPath, destinationName) {\n    const destinationUrl = buildFileUrl(destinationPath, destinationName);\n\n    const fileResponse = await fetchFile(originPath, originName);\n    const content = (fileResponse.headers.get('Content-Type') === 'application/json') ?\n        await fileResponse.text()\n        : await fileResponse.blob();\n\n    return solidAuth.fetch(destinationUrl, {\n        method: 'PUT',\n        body: content\n    }).then(assertSuccessfulResponse);\n}\n\n\n/**\n * Fetch API to copy a folder recursively\n * @param {String} originPath \n * @param {String} originName \n * @param {String} destinationPath \n * @param {String} destinationName \n * @return {Response}\n */\nexport async function copyFolder(originPath, originName, destinationPath, destinationName) {\n    // TODO: Combine these two promises for better performance\n    await createFolder(destinationPath, destinationName);\n    const { files, folders } = await readFolder(originPath, originName);\n\n    const promises = [\n        ...files.map(({ name }) => copyFile(`${originPath}/${originName}`, name, `${destinationPath}/${destinationName}`, name)),\n        ...folders.map(({ name }) => copyFolder(`${originPath}/${originName}`, name, `${destinationPath}/${destinationName}`, name))\n    ];\n\n    await Promise.all(promises);\n    return new Response();\n}\n\n\n/**\n * Fetch API to upload files\n * @param {String} path\n * @param {FileList} fileList\n * @returns {Response}\n */\nexport async function upload(path, fileList) {\n    const promises = Array.from(fileList).map(file => updateItem(path, file.name, file));\n    await Promise.all(promises);\n    return new Response();\n};\n\n\n/**\n * Fetch API to create a folder\n * @param {String} path\n * @param {String} folderName\n * @returns {Response}\n */\nexport async function createFolder(path, folderName) {\n    if (await folderExists(path, folderName))\n        return new Response();\n\n    return createItem(path, folderName, '', 'dir');\n}\n\n\n/**\n * Fetch API to create update or create an item\n * @param {String} path\n * @param {String} itemName\n * @param {String} content\n * @param {String} contentType\n * @returns {Response}\n */\nexport async function updateItem(path, itemName, content, contentType) {\n    await removeItem(path, itemName);\n    return createItem(path, itemName, content, contentType);\n}\n\n\n/**\n * Fetch API to create create an item\n * @param {String} path\n * @param {String} itemName\n * @param {String} content\n * @param {String} contentType\n * @returns {Response}\n */\nasync function createItem(path, itemName, content, contentType) {\n    const baseUrl = `${config.getHost()}${path}`;\n    const link = (contentType === 'dir') ?\n        '<http://www.w3.org/ns/ldp#BasicContainer>; rel=\"type\"'\n        : '<http://www.w3.org/ns/ldp#Resource>; rel=\"type\"';\n\n    const request = {\n        method: 'POST',\n        headers: {\n            link,\n            slug: itemName,\n            'Content-Type': contentType\n        },\n        body: content\n    };\n\n    return solidAuth.fetch(baseUrl, request)\n        .then(assertSuccessfulResponse);\n}\n\n\n/**\n * Fetch API to remove multiple items\n * @param {String} path\n * @param {Array} itemNames\n * @returns {Response}\n */\nexport async function removeItems(path, itemNames) {\n    await Promise.all(itemNames.map(itemName => removeItem(path, itemName)));\n    return new Response();\n};\n\n\n/**\n * Fetch API to remove one item\n * @param {String} path \n * @param {String} itemName \n * @returns {Response}\n */\nexport async function removeItem(path, itemName) {\n    const url = buildFileUrl(path, itemName);\n\n    const response = await solidAuth.fetch(url, { method: 'DELETE' });\n    if (response.status === 409 || response.status === 301) {\n        // Solid pod returns 409 if the item is a folder and is not empty\n        // Solid pod returns 301 if is attempted to read a folder url without '/' at the end (from buildFileUrl)\n        return removeFolderRecursively(path, itemName);\n    }\n    else if (response.status === 404) {\n        // Don't throw if the item didn't exist\n        return response;\n    }\n    else {\n        assertSuccessfulResponse(response);\n        return response;\n    }\n}\n\n\n/**\n * Fetch API to remove contents and folder itself recursively\n * @param {String} path \n * @param {String} folderName\n * @returns {Response}\n */\nexport async function removeFolderRecursively(path, folderName) {\n    await removeFolderContents(path, folderName);\n    return removeItem(path, folderName);\n}\n\n\n/**\n * Fetch API to remove contents of one folder recursively\n * @param {String} path \n * @param {String} folderName\n * @returns {Response}\n */\nexport async function removeFolderContents(path, folderName) {\n    const folderPath = `${path}/${folderName}`;\n\n    const { files, folders } = await readFolder(path, folderName);\n    const promises = [\n        ...files.map(({ name }) => removeItem(folderPath, name)),\n        ...folders.map(({ name }) => removeFolderRecursively(folderPath, name))\n    ];\n    await Promise.all(promises);\n    return new Response();\n}\n\n\n/**\n * Fetch API to check if a folder exists\n * @param {String} path\n * @param {String} folderName\n * @returns {Promise<Boolean>}\n */\nexport async function folderExists(path, folderName) {\n    try {\n        await fetchFolder(path, folderName);\n        return true;\n    }\n    catch (error) {\n        if (error instanceof Response && error.status === 404)\n            return false;\n\n        throw error;\n    }\n}\n\n\n/**\n * Build up an url from a path relative to the storage location and a folder name\n * @param {String} path\n * @param {String} folderName\n * @return {String}\n */\nfunction buildFolderUrl(path, folderName = '') {\n    return buildFileUrl(path, folderName) + '/';\n}\n\n\n/**\n * Build up an url from a path relative to the storage location and a fileName\n * @param {String} path \n * @param {Sting} fileName \n * @return {String}\n */\nfunction buildFileUrl(path, fileName = '') {\n    let url = `${config.getHost()}${path}/${fileName}`;\n    while (url.slice(-1) === '/')\n        url = url.slice(0, -1);\n\n    return url;\n}\n\n\n/**\n * Throw response if fetch response was unsuccessful\n * @param {Response} response\n * @returns {Response}\n */\nconst assertSuccessfulResponse = (response) => {\n    if (!response.ok)\n        throw response;\n    return response;\n};","import * as API from './Api.js';\nimport config from './../config.js';\n\n\n/**\n * Log a fetch response error and throw it again\n * @param {*} error \n */\nconst logFetchError = async (error) => {\n    let errorMessage = '';\n\n    console.group('handleFetchError');\n    if (error instanceof Response) {\n        errorMessage = await error.text();\n\n        console.error(`url: ${error.url}`);\n        console.error(`status: ${error.status}`);\n    }\n    else if (error instanceof Error) {\n        errorMessage = error.message;\n        console.error(error.stack);\n    }\n    else if (typeof error === 'string') {\n        errorMessage = error;\n    }\n    else {\n        errorMessage = JSON.stringify(error);\n    }\n    console.error(`errorMessage: ${errorMessage}`);\n    console.error(`error: ${error}`);\n    console.groupEnd();\n\n    throw new Error(errorMessage);\n}\n\n/**\n * Clean path string removing double slashes and prepending a slash\n * @param {String} path\n * @returns {String}\n */\nconst fixPath = (path) => {\n    return ('/' + path).replace(/\\/\\//g, '/');\n};\n\n/**\n * Wrap API response for retrieving item list\n * @param {String} path\n * @returns {Promise<API.FolderItems>}\n */\nexport const getItemList = (path) => {\n    path = fixPath(path);\n    return API.readFolder(path)\n        .then(({ files, folders }) => [...files, ...folders])\n        .catch(logFetchError);\n};\n\n/**\n * Wrap API response for retrieving file content\n * @param {String} path\n * @param {String} filename\n * @returns {Promise<Blob>}\n */\nexport const getFileBlob = (path, filename) => {\n    path = fixPath(path);\n    return API.fetchFile(path, filename)\n        .then(response => response.blob())\n        .catch(logFetchError);\n};\n\n\n/**\n * Wrap API response for renaming a file\n * @param {String} path\n * @param {String} fileName\n * @param {String} newFileName\n * @returns {Promise<Response>}\n */\nexport const renameFile = (path, fileName, newFileName) => {\n    path = fixPath(path);\n    return API.renameFile(path, fileName, newFileName)\n        .catch(logFetchError)\n};\n\n\n/**\n * Wrap API response for renaming a folder\n * @param {String} path\n * @param {String} folderName\n * @param {String} newFolderName\n * @returns {Promise<Response>}\n */\nexport const renameFolder = (path, folderName, newFolderName) => {\n    path = fixPath(path);\n    return API.renameFolder(path, folderName, newFolderName)\n        .catch(logFetchError)\n};\n\n/**\n * Wrap API response for creating a folder\n * @param {String} path\n * @param {String} folder\n * @returns {Promise<Response>}\n */\nexport const createFolder = (path, folder) => {\n    path = fixPath(path);\n    if (!(folder || '').trim()) {\n        return Promise.reject('Invalid folder name');\n    }\n    return API.createFolder(path, folder)\n        .catch(logFetchError)\n};\n\n/**\n * Wrap API response for removing a file or folder\n * @param {String} path\n * @param {Array<String>} filenames\n * @returns {Promise<Response>}\n */\nexport const removeItems = (path, filenames) => {\n    path = fixPath(path);\n    if (!filenames.length) {\n        return Promise.reject('No files to remove');\n    }\n    return API.removeItems(path, filenames)\n        .catch(logFetchError)\n};\n\n/**\n * Wrap API response for moving a file or folder\n * @param {String} path\n * @param {String} destination\n * @param {Array<String>} filenames\n * @returns {Promise<Response>}\n */\nexport const moveItems = (path, destination, filenames) => {\n    path = fixPath(path);\n    destination = fixPath(destination);\n    if (!filenames.length) {\n        return Promise.reject('No files to move');\n    }\n    return API.moveItems(path, destination, filenames)\n        .catch(logFetchError)\n};\n\n/**\n * Wrap API response for copying a file or folder\n * @param {String} path\n * @param {String} destination\n * @param {Array<String>} filenames\n * @returns {Promise<Response>}\n */\nexport const copyItems = (path, destination, filenames) => {\n    path = fixPath(path);\n    destination = fixPath(destination);\n    if (!filenames.length) {\n        return Promise.reject('No files to copy');\n    }\n    return API.copyItems(path, destination, filenames)\n        .catch(logFetchError)\n};\n\n/**\n * Wrap API response for uploading files\n * @param {String} path\n * @param {Object<FileList>} fileList\n * @returns {Promise<Response>}\n */\nexport const uploadFiles = (path, fileList) => {\n    path = fixPath(path);\n\n    if (!fileList.length) {\n        return Promise.reject('No files to upload');\n    }\n    return API.upload(path, fileList)\n        .catch(logFetchError)\n};\n\n/**\n * Wrap API response for uploading a text file\n * @param {String} path\n * @param {String} fileName\n * @param {String} content\n * @returns {Promise<Response>}\n */\nexport const updateTextFile = (path, fileName, content) => {\n    path = fixPath(path);\n\n    return API.updateItem(path, fileName, content)\n        .catch(logFetchError);\n};\n\n\n/**\n * Calculate available actions for a file\n * @param {Object} file\n * @returns {Array<String>}\n */\nexport const getActionsByFile = (file, acts = []) => {\n    if (file.type === 'dir') {\n        acts.push('open');\n\n        typeof file.compressible !== 'undefined' ?\n            file.compressible && acts.push('compress') :\n            acts.push('compress');\n    }\n\n    if (file.type === 'file') {\n        acts.push('download');\n        config.isImageFilePattern.test(file.name) && acts.push('open');\n\n        typeof file.editable !== 'undefined' ?\n            file.editable && acts.push('edit') :\n            config.isEditableFilePattern.test(file.name) && acts.push('edit');\n\n        typeof file.extractable !== 'undefined' ?\n            file.extractable && acts.push('extract') :\n            config.isExtractableFilePattern.test(file.name) && acts.push('extract');\n    }\n\n    acts.push('openInNewTab');\n    acts.push('copy');\n    acts.push('move');\n    acts.push('rename');\n    acts.push('perms');\n    acts.push('remove');\n\n    return acts;\n}\n\n/**\n * Calculate available actions for selected files, only leaving common actions\n * @param {Array<Object>} files\n * @returns {Array<String>}\n */\nexport const getActionsByMultipleFiles = (files, acts = []) => {\n    files.forEach(file => {\n        const fileActs = getActionsByFile(file);\n        // intersects previous actions with the following to leave only common actions\n        acts = acts.length ?\n            acts.filter(value => -1 !== fileActs.indexOf(value)) \n            : fileActs;\n    });\n\n    if (files.length > 1) {\n        const removeAction = name => acts.splice(acts.indexOf(name), acts.indexOf(name) > -1);\n        removeAction('open');\n        removeAction('openInNewTab');\n        removeAction('edit');\n        removeAction('compress');\n        removeAction('download');\n        removeAction('rename');\n\n        acts.push('compress');\n    }\n    return acts;\n}\n\n/**\n * Calculate file size by bytes in human readable format\n * @param {Number} bytes\n * @returns {String}\n */\nexport const getHumanFileSize = (bytes) => {\n    const e = (Math.log(bytes) / Math.log(1e3)) | 0;\n    return +(bytes / Math.pow(1e3, e)).toFixed(2) + ' ' + ('kMGTPEZY'[e - 1] || '') + 'B';\n};","import * as APIHandler from '../Api/ApiHandler.js';\nimport * as solidAuth from 'solid-auth-client';\nimport config from '../config.js';\n\n\nexport const solidLogin = () => (dispatch, getState) => {\n    dispatch(setLoading(true));\n\n    solidPopupLogin().then(webId => {\n        dispatch(setWebId(webId));\n        dispatch(setIsLoggedIn(true));\n        dispatch(setLoading(false));\n    }).catch(r => {\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoading(false));\n    });\n};\n\nasync function solidPopupLogin() {\n    let session = await solidAuth.currentSession();\n    if (!session) {\n        let popupUri = 'https://solid.community/common/popup.html';\n        session = await solidAuth.popupLogin({ popupUri });\n    }\n    return(session.webId);\n}\n\n\nexport const solidLogout = () => (dispatch, getState) => {\n    dispatch(setLoading(true));\n\n    solidAuth.logout().then(() => {\n        dispatch(setPath([]));\n        dispatch(setPathSublist([]));\n        dispatch(setFileList([]));\n        dispatch(setSelectedFiles([]));\n        dispatch(setIsLoggedIn(false));\n        dispatch(setWebId(''));\n        dispatch(setVisibleDialogSolidLogout(false));\n        dispatch(setVisibleDialogSolidLogin(true));\n        dispatch(setLoading(false));\n    }).catch(r => {\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoading(false));\n    });\n};\n\n\n/**\n * Request API to get file list for the selected path then refresh UI\n * @returns {Function}\n */\nexport const uploadFiles = (fileList) => (dispatch, getState) => {\n    const { path } = getState();\n    dispatch(setLoading(true));\n    dispatch(setSelectedFiles([]));\n    dispatch(setFileUploadProgress(50));\n\n    APIHandler.uploadFiles(path.join('/'), fileList).then(r => {\n        dispatch(setFileUploadProgress(100));\n        setTimeout(f => {\n            dispatch(resetFileUploader());\n        }, 300);\n        dispatch(refreshFileList());\n    }).catch(r => {\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoading(false));\n    });\n};\n\n\nexport const createFile = (fileName) => (dispatch, getState) => {\n    const { path } = getState();\n    dispatch(setLoading(true));\n\n    APIHandler.updateTextFile(path.join('/'), fileName, '').then(r => {\n        dispatch(setVisibleDialogCreateFile(false));\n        dispatch(refreshFileList());\n\n        APIHandler.getItemList(path.join('/')).then(itemList => {\n            const file = itemList.find(item => item.name === fileName || item.name === encodeURI(fileName));\n            dispatch(setSelectedFiles([file]));\n            dispatch(getFileContent(file.name));\n            dispatch(setVisibleDialogEdit(true));\n        });\n    });\n};\n\n\nexport const updateTextFile = (fileName, content) => (dispatch, getState) => {\n    const { path } = getState();\n    dispatch(setLoading(true));\n\n    APIHandler.updateTextFile(path.join('/'), fileName, content).then(r => {\n        dispatch(setVisibleDialogEdit(false));\n        dispatch(refreshFileList());\n        dispatch(setLoading(false));\n    }).catch(r => {\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoading(false));\n    });\n}\n\n/**\n * Request API to get file list for the selected path then refresh UI\n * @returns {Function}\n */\nexport const refreshFileList = () => (dispatch, getState) => {\n    const { path } = getState();\n    dispatch(setLoading(true));\n    dispatch(setSelectedFiles([]));\n    APIHandler.getItemList(path.join('/')).then(r => {\n        dispatch(setLoading(false));\n        dispatch(setFileList(r));\n    }).catch(r => {\n        dispatch(setFileList([]));\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoading(false));\n    });\n};\n\n\n/**\n * Request API to get file list for the selected path then refresh UI\n * @returns {Function}\n */\nexport const refreshFileListSublist = () => (dispatch, getState) => {\n    const { pathSublist } = getState();\n    dispatch(setLoadingSublist(true));\n    dispatch(setSelectedFolderSublist(null));\n\n    APIHandler.getItemList(pathSublist.join('/')).then(r => {\n        dispatch(setLoadingSublist(false));\n        dispatch(setFileListSublist(r));\n    }).catch(r => {\n        dispatch(setFileListSublist([]));\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoadingSublist(false));\n    });\n};\n\n\n/**\n * Request API to rename file then dispatch defined events\n * @param {String} fileName\n * @returns {Function}\n */\nexport const renameFile = (fileName, newFileName) => (dispatch, getState) => {\n    const { path } = getState();\n    dispatch(setLoading(true));\n    APIHandler.renameFile(path.join('/'), fileName, newFileName).then(blob => {\n        dispatch(setVisibleDialogRename(false));\n        dispatch(setLoading(false));\n        dispatch(refreshFileList());\n    }).catch(r => {\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoading(false));\n    });\n};\n\n/**\n * Request API to rename file then dispatch defined events\n * @param {String} folderName\n * @param {String} newFolderName\n * @returns {Function}\n */\nexport const renameFolder = (folderName, newFolderName) => (dispatch, getState) => {\n    const { path } = getState();\n    dispatch(setLoading(true));\n    APIHandler.renameFolder(path.join('/'), folderName, newFolderName).then(blob => {\n        dispatch(setVisibleDialogRename(false));\n        dispatch(setLoading(false));\n        dispatch(refreshFileList());\n    }).catch(r => {\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoading(false));\n    });\n};\n\n/**\n * Request API to get download file then dispatch defined events\n * @param {String} fileName\n * @returns {Function}\n */\nexport const downloadFile = (fileName) => (dispatch, getState) => {\n    const { path } = getState();\n    dispatch(setLoading(true));\n    APIHandler.getFileBlob(path.join('/'), fileName).then(blob => {\n        promptDownload(blob, fileName);\n        dispatch(setLoading(false));\n    }).catch(r => {\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoading(false));\n    });\n};\n\n// code from https://stackoverflow.com/a/30832210/6548154\nfunction promptDownload(file, fileName) {\n    if (window.navigator.msSaveOrOpenBlob) // IE10+\n        window.navigator.msSaveOrOpenBlob(file, fileName);\n    else { // Others\n        const a = document.createElement(\"a\");\n        const url = URL.createObjectURL(file);\n        a.href = url;\n        a.download = fileName;\n        document.body.appendChild(a);\n        a.click();\n        setTimeout(() => {\n            document.body.removeChild(a);\n            window.URL.revokeObjectURL(url);  \n        }, 0);\n    }\n}\n\n\nexport const openInNewTab = (fileName) => (dispatch, getState) => {\n    const { path } = getState();\n    const url = `${config.getHost()}/${path.length ? (path.join('/') + '/') : ''}${fileName}`;\n    window.open(url, '_blank');\n};\n\n\n/**\n * Request API to get file content then dispatch defined events\n * @param {String} fileName\n * @returns {Function}\n */\nexport const getFileContent = (fileName) => (dispatch, getState) => {\n    const { path } = getState();\n    dispatch(setLoading(true));\n    dispatch(setFileContent(null));\n    dispatch(setVisibleDialogEdit(true));\n    APIHandler.getFileBlob(path.join('/'), fileName).then(blob => {\n        dispatch(setFileContent(blob));\n        dispatch(setLoading(false));\n    }).catch(r => {\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoading(false));\n    });\n};\n\n\n/**\n * Request API to create a folder then dispatch defined events\n * @param {String} createFolderName\n * @returns {Function}\n */\nexport const createNewFolder = (createFolderName) => (dispatch, getState) => {\n    const { path } = getState();\n    dispatch(setLoading(true));\n\n    APIHandler.createFolder(path.join('/'), createFolderName).then(r => {\n        dispatch(setVisibleDialogCreateFolder(false));\n        dispatch(setLoading(false));\n        dispatch(refreshFileList());\n    }).catch(r => {\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoading(false));\n    });\n};\n\n\n/**\n * Request API to remove an item then dispatch defined events\n * @param {Array} filenames\n * @returns {Function}\n */\nexport const removeItems = (files) => (dispatch, getState) => {\n    const { path } = getState();\n    const filenames = files.map(f => f.name);\n\n    dispatch(setLoading(true));\n    APIHandler.removeItems(path.join('/'), filenames).then(r => {\n        dispatch(setLoading(false));\n        dispatch(refreshFileList());\n    }).catch(r => {\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoading(false));\n    });\n};\n\n\n/**\n * Request API to move an item then dispatch defined events\n * @param {Array} filenames\n * @returns {Function}\n */\nexport const moveItems = (files) => (dispatch, getState) => {\n    const { path, pathSublist, selectedFolderSublist } = getState();\n    const destination = pathSublist.join('/') + '/' + selectedFolderSublist.name;\n    const filenames = files.map(f => f.name);\n\n    dispatch(setLoading(true));\n    APIHandler.moveItems(path.join('/'), destination, filenames).then(r => {\n        dispatch(setLoading(false));\n        dispatch(setVisibleDialogMove(false));\n        dispatch(refreshFileList());\n    }).catch(r => {\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoading(false));\n    });\n};\n\n\n/**\n * Request API to copy an item then dispatch defined events\n * @param {Array} filenames\n * @returns {Function}\n */\nexport const copyItems = (files) => (dispatch, getState) => {\n    const { path, pathSublist, selectedFolderSublist } = getState();\n    const destination = pathSublist.join('/') + '/' + selectedFolderSublist.name;\n    const filenames = files.map(f => f.name);\n\n    dispatch(setLoading(true));\n    APIHandler.copyItems(path.join('/'), destination, filenames).then(r => {\n        dispatch(setLoading(false));\n        dispatch(setVisibleDialogCopy(false));\n        dispatch(refreshFileList());\n    }).catch(r => {\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoading(false));\n    });\n};\n\n/**\n * This handles multiple selection by using shift key\n * @param {Object} lastFile\n * @returns {Function}\n */\nexport const setSelectedFileFromLastTo = (lastFile) => (dispatch, getState) => {\n    const { fileList, selectedFiles } = getState();\n\n    const lastPreviouslySelected = [...selectedFiles].pop();\n    const lastPreviouslySelectedIndex = fileList.indexOf(fileList.find(f => f.name === lastPreviouslySelected.name))\n    const lastSelectedIndex = fileList.indexOf(fileList.find(f => f.name === lastFile.name))\n\n    let toAdd = [];\n    if (lastSelectedIndex > lastPreviouslySelectedIndex) {\n        toAdd = fileList.filter((index, element) => {\n            return fileList.indexOf(index) <= lastSelectedIndex && fileList.indexOf(index) >= lastPreviouslySelectedIndex\n        });\n    } else {\n        toAdd = fileList.filter((index, element) => {\n            return fileList.indexOf(index) >= lastSelectedIndex && fileList.indexOf(index) <= lastPreviouslySelectedIndex\n        });\n    }\n    dispatch(setSelectedFiles([...selectedFiles, ...toAdd]));\n};\n\n\n/**\n * @returns {Function}\n */\nexport const initSubList = () => (dispatch, getState) => {\n    const { path } = getState();\n    dispatch(setSelectedFolderSublist(null));\n    dispatch(setFileListSublist([]));    \n    dispatch(setPathSublist([...path]));\n    dispatch(refreshFileListSublist());\n};\n\nexport const resetFileUploader = () => (dispatch, getState) => {\n    dispatch(setFileUploadProgress(0));\n    dispatch(setVisibleDialogUploadFile(false));\n    dispatch(setFileUploadList([]));\n};\n\nexport const enterToPreviousDirectory = () => (dispatch, getState) => {\n    const { path } = getState();\n    dispatch(setPath(path.slice(0, -1)));\n    dispatch(setFileListFilter(null));\n    dispatch(refreshFileList());\n};\n\nexport const enterToPreviousDirectoryByIndex = (index) => (dispatch, getState) => {\n    const { path } = getState();\n    const newPath = [...path].slice(0, ++index);\n    dispatch(setPath(newPath));\n    dispatch(refreshFileList());\n    dispatch(setFileListFilter(null));\n};\n\nexport const enterToPreviousDirectorySublist = () => (dispatch, getState) => {\n    const { pathSublist } = getState();\n    dispatch(setPathSublist(pathSublist.slice(0, -1)));\n    dispatch(refreshFileListSublist());\n};\n\nexport const setPath = (path) => {\n    return {\n        type: 'SET_PATH',\n        value: path\n    };\n};\n\nexport const setPathSublist = (path) => {\n    return {\n        type: 'SET_PATH_SUB_LIST',\n        value: path\n    };\n};\n\nexport const setHost = (host) => {\n    return {\n        type: 'SET_HOST',\n        value: host\n    };\n};\n\nexport const setIsLoggedIn = (isLoggedIn) => {\n    return {\n        type: 'SET_IS_LOGGED_IN',\n        value: isLoggedIn\n    };\n};\n\nexport const setWebId = (webId) => {\n    return {\n        type: 'SET_WEB_ID',\n        value: webId\n    };\n};\n\nexport const enterToDirectory = (directory) => (dispatch, getState) => {\n    dispatch({\n        type: 'ENTER_TO_DIRECTORY',\n        value: directory\n    });\n    dispatch(setFileListFilter(null));\n    dispatch(refreshFileList());\n};\n\nexport const enterToDirectorySublist = (directory) => (dispatch, getState) => {\n    dispatch({\n        type: 'ENTER_TO_DIRECTORY_SUB_LIST',\n        value: directory\n    });\n    dispatch(refreshFileListSublist());\n};\n\nexport const setFileList = (fileList) => {\n    return {\n        type: 'SET_FILE_LIST',\n        value: fileList\n    };\n};\n\nexport const setFileListSublist = (fileList) => {\n    return {\n        type: 'SET_FILE_LIST_SUB_LIST',\n        value: fileList\n    };\n};\n\nexport const setSelectedFiles = (files) => {\n    return {\n        type: 'SET_SELECTED_FILES',\n        value: files\n    };\n};\n\nexport const setSelectedFolderSublist = (file) => {\n    return {\n        type: 'SET_SELECTED_FOLDER_SUB_LIST',\n        value: file\n    };\n};\n\nexport const setFileListFilter = (search) => {\n    return {\n        type: 'SET_FILE_LIST_FILTER',\n        value: search\n    };\n};\n\nexport const setContextMenuVisible = (visible) => {\n    return {\n        type: 'SET_CONTEXT_MENU_VISIBLE',\n        value: !!visible\n    };\n};\n\nexport const setContextMenuPosition = (x, y) => {\n    return {\n        type: 'SET_CONTEXT_MENU_POSITION',\n        value: [x, y]\n    };\n};\n\nexport const setContextMenuPositionElement = (element) => {\n    return {\n        type: 'SET_CONTEXT_MENU_POSITION_ELEMENT',\n        value: element\n    };\n};\n\nexport const toggleSelectedFile = (file) => {\n    return {\n        type: 'TOGGLE_SELECTED_FILE',\n        value: file\n    };\n};\n\nexport const rightClickOnFile = (file) => (dispatch, getState) => {\n    const { selectedFiles } = getState();\n    const isSelected = selectedFiles.indexOf(selectedFiles.find(f => f.name === file.name)) !== -1;\n\n    !isSelected && dispatch(setSelectedFiles([file]));\n};\n\nexport const setLoading = (value) => {\n    return {\n        type: 'SET_LOADING',\n        value: value\n    };\n};\n\nexport const setLoadingSublist = (value) => {\n    return {\n        type: 'SET_LOADING_SUB_LIST',\n        value: value\n    };\n};\n\nexport const setVisibleDialogSolidLogin = (visible) => {\n    return {\n        type: 'SET_VISIBLE_DIALOG_SOLID_LOGIN',\n        value: !!visible\n    };\n};\n\nexport const setVisibleDialogSolidLogout = (visible) => {\n    return {\n        type: 'SET_VISIBLE_DIALOG_SOLID_LOGOUT',\n        value: !!visible\n    };\n};\n\nexport const setVisibleDialogCreateFolder = (visible) => {\n    return {\n        type: 'SET_VISIBLE_DIALOG_CREATE_FOLDER',\n        value: !!visible\n    };\n};\n\nexport const setVisibleDialogCreateFile = (visible) => {\n    return {\n        type: 'SET_VISIBLE_DIALOG_CREATE_FILE',\n        value: !!visible\n    };\n};\n\nexport const setVisibleDialogUploadFile = (visible) => {\n    return {\n        type: 'SET_VISIBLE_DIALOG_UPLOAD_FILE',\n        value: !!visible\n    };\n};\n\nexport const setVisibleDialogRename = (visible) => {\n    return {\n        type: 'SET_VISIBLE_DIALOG_RENAME',\n        value: !!visible\n    };\n};\n\nexport const setVisibleDialogMove = (visible) => {\n    return {\n        type: 'SET_VISIBLE_DIALOG_MOVE',\n        value: !!visible\n    };\n};\n\nexport const setVisibleDialogCopy = (visible) => {\n    return {\n        type: 'SET_VISIBLE_DIALOG_COPY',\n        value: !!visible\n    };\n};\n\nexport const setVisibleDialogContent = (visible) => {\n    return {\n        type: 'SET_VISIBLE_DIALOG_CONTENT',\n        value: !!visible\n    };\n};\n\nexport const setVisibleDialogEdit = (visible) => {\n    return {\n        type: 'SET_VISIBLE_DIALOG_EDIT',\n        value: !!visible\n    };\n};\n\nexport const setFileContent = (blob) => {\n   return {\n        type: 'SET_FILE_CONTENT',\n        value: blob\n    };\n};\n\nexport const setFileUploadProgress = (percentage) => {\n   return {\n        type: 'SET_FILE_UPLOAD_PROGRESS',\n        value: percentage\n    };\n};\n\nexport const setFileUploadList = (files) => {\n   return {\n        type: 'SET_FILE_UPLOAD_LIST',\n        value: files\n    };\n};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport {\n    enterToDirectory, setContextMenuVisible, toggleSelectedFile, setContextMenuPosition,\n    setSelectedFileFromLastTo, getFileContent, \n    rightClickOnFile, setSelectedFiles\n} from '../../Actions/Actions.js';\nimport './File.css';\n\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport FolderIcon from '@material-ui/icons/Folder';\nimport FileIcon from '@material-ui/icons/InsertDriveFile';\nimport blue from '@material-ui/core/colors/blue';\nimport config from '../../config.js';\nimport { getHumanFileSize } from '../../Api/ApiHandler';\n\nclass File extends Component {\n    render() {\n        const { isSelected, type, name, size, handleClick, handleDoubleClick, handleContextMenu } = this.props;\n        const avatarStyle = {\n            backgroundColor: isSelected ? blue['A200'] : null\n        };\n        const realSize = typeof size !== 'undefined' && type !== 'dir' ? getHumanFileSize(size) : null;\n        return (\n            <div className=\"File\" onClick={handleClick} onDoubleClick={handleDoubleClick} onContextMenu={handleContextMenu} data-selected={isSelected}>\n                <ListItem>\n                    <ListItemAvatar>\n                        <Avatar style={avatarStyle}>\n                            { type === 'dir' ? <FolderIcon /> : <FileIcon />}\n                        </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText className=\"filename\" primary={decodeURI(name)} secondary={realSize} />\n                </ListItem>\n            </div>\n        );\n    }\n}\n\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        filePath: [...state.path, ownProps.name],\n        isSelected: !!state.selectedFiles.find(f => f.name === ownProps.name)\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        /**\n         * @param {Object} event\n         * @returns {undefined}\n         */\n        handleDoubleClick: (event) => {\n            if (ownProps.type === 'file') {\n                if (config.isEditableFilePattern.test(ownProps.name) || ownProps.editable) {\n                    dispatch(getFileContent(ownProps.name));\n                } else if (config.isImageFilePattern.test(ownProps.name)) {\n                    dispatch(getFileContent(ownProps.name));\n                }\n                return;\n            }\n\n            dispatch(enterToDirectory(ownProps.name));\n        },\n\n        /**\n         * @param {Object} event\n         * @returns {undefined}\n         */\n        handleContextMenu: (event) => {\n            event.preventDefault();\n            event.stopPropagation();\n\n            const x = event.clientX || (event.touches && event.touches[0].pageX);\n            const y = event.clientY || (event.touches && event.touches[0].pageY);\n\n            if (event.shiftKey) {\n                dispatch(setSelectedFileFromLastTo(ownProps));\n            } else {\n                dispatch(rightClickOnFile(ownProps));\n            }\n            \n            dispatch(setContextMenuVisible(true));\n            dispatch(setContextMenuPosition(x, y));\n        },\n\n        /**\n         * @param {Object} event\n         * @returns {undefined}\n         */\n        handleClick: (event) => {\n            event.stopPropagation();\n\n            if (event.ctrlKey) {\n                dispatch(toggleSelectedFile(ownProps));\n            } else if (event.shiftKey) {\n                dispatch(setSelectedFileFromLastTo(ownProps));\n            } else {\n                dispatch(setSelectedFiles([ownProps]));\n            }\n        }\n    };\n};\n\nFile.propTypes = {\n    name: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    size: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number\n    ]),\n    editable: PropTypes.oneOfType([\n        PropTypes.bool, PropTypes.number\n    ])\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(File);\n\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './FileListEmptyMessage.css';\n\nclass FileListEmptyMessage extends Component {\n    render() {\n        return (\n            <div className=\"FileListEmptyMessage\">\n                No files in this folder\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n    };\n};\n\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FileListEmptyMessage);\n\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Grid from '@material-ui/core/Grid';\n\nconst styles = theme => ({\n  progress: {\n    margin: theme.spacing.unit * 10,\n  },\n});\n\nfunction Loader(props) {\n    const { classes } = props;\n    return (\n        <Grid container justify=\"center\">\n            <CircularProgress className={classes.progress} color=\"secondary\" />\n        </Grid>\n    );\n}\n\nLoader.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Loader);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport File from '../File/File.jsx'; \nimport FileListEmptyMessage from './FileListEmptyMessage';\nimport Loader from '../Loader/Loader.jsx'; \nimport './FileList.css';\n\nclass FileList extends Component {\n    render() {\n        const { fileList, loading } = this.props;\n        \n        const fileListComponent = fileList.map((file, key) => {\n            return <File type={file.type} name={file.name} editable={file.editable} size={file.size} key={key} />\n        });\n\n        return <div className=\"FileList\">\n            { loading ? \n                <Loader /> : \n                fileListComponent.length ? fileListComponent : <FileListEmptyMessage />\n            }\n        </div>\n    }\n}\n\n\nconst mapStateToProps = (state) => {\n    const filteredList = state.fileList.filter(\n        file => state.fileListFilter ? file.name.toLocaleLowerCase().match(state.fileListFilter.toLocaleLowerCase()) : true\n    );\n    return {\n        fileList: filteredList,\n        loading: state.loading\n    };\n};\n\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        handleClick: (event) => {\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FileList);\n\n\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { connect } from 'react-redux';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from '@material-ui/core/Typography';\nimport CreateNewFolderIcon from '@material-ui/icons/CreateNewFolder';\nimport { setVisibleDialogCreateFolder } from '../../../Actions/Actions.js';\n\nfunction CreateFolderAction(props) {\n    const {handleClick, handleClose} = props;\n\n    const handleCloseAfter = (callback) => (event) => {\n        callback();\n        handleClose();\n    };\n\n    return (\n        <MenuItem onClick={handleCloseAfter(handleClick)}>\n            <ListItemIcon>\n                <CreateNewFolderIcon />\n            </ListItemIcon>\n            <Typography variant=\"inherit\">\n                Create folder\n            </Typography>\n        </MenuItem>        \n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClick: (event) => {\n            dispatch(setVisibleDialogCreateFolder(true));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateFolderAction);\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { connect } from 'react-redux';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from '@material-ui/core/Typography';\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\nimport { setVisibleDialogCreateFile } from '../../../Actions/Actions.js';\n\nfunction CreateFileAction(props) {\n    const {handleClick, handleClose} = props;\n\n    const handleCloseAfter = (callback) => (event) => {\n        callback();\n        handleClose();\n    };\n\n    return (\n        <MenuItem onClick={handleCloseAfter(handleClick)}>\n            <ListItemIcon>\n                <InsertDriveFileIcon />\n            </ListItemIcon>\n            <Typography variant=\"inherit\">\n                Create file\n            </Typography>\n        </MenuItem>        \n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClick: (event) => {\n            dispatch(setVisibleDialogCreateFile(true));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateFileAction);\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { connect } from 'react-redux';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from '@material-ui/core/Typography';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport { setVisibleDialogUploadFile } from '../../../Actions/Actions.js';\n\nfunction UploadFileAction(props) {\n    const {handleClick, handleClose} = props;\n\n    const handleCloseAfter = (callback) => (event) => {\n        callback();\n        handleClose();\n    };\n\n    return (\n        <MenuItem onClick={handleCloseAfter(handleClick)}>\n            <ListItemIcon>\n                <CloudUploadIcon />\n            </ListItemIcon>\n            <Typography variant=\"inherit\">\n                Upload files\n            </Typography>\n        </MenuItem>        \n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClick: (event) => {\n            dispatch(setVisibleDialogUploadFile(true));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UploadFileAction);\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { connect } from 'react-redux';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from '@material-ui/core/Typography';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport { setVisibleDialogSolidLogout } from '../../../Actions/Actions.js';\n\nfunction SolidLogoutAction(props) {\n    const {handleClick, handleClose} = props;\n\n    const handleCloseAfter = (callback) => (event) => {\n        callback();\n        handleClose();\n    };\n\n    return (\n        <MenuItem onClick={handleCloseAfter(handleClick)}>\n            <ListItemIcon>\n                <ClearIcon />\n            </ListItemIcon>\n            <Typography variant=\"inherit\">\n                Logout\n            </Typography>\n        </MenuItem>        \n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClick: (event) => {\n            dispatch(setVisibleDialogSolidLogout(true));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SolidLogoutAction);\n","import React from 'react';\nimport Menu from '@material-ui/core/Menu';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport { connect } from 'react-redux';\nimport CreateFolderAction from '../ContextMenu/ContextMenuActions/CreateFolderAction.jsx';\nimport CreateFileAction from '../ContextMenu/ContextMenuActions/CreateFileAction.jsx';\nimport UploadFileAction from '../ContextMenu/ContextMenuActions/UploadFileAction.jsx';\nimport SolidLogoutAction from '../ContextMenu/ContextMenuActions/SolidLogoutAction.jsx';\n\nclass ThreeDotsMenu extends React.Component {\n  state = {\n    anchorEl: null,\n  };\n\n  handleClick = event => {\n    this.setState({ anchorEl: event.currentTarget });\n  };\n\n  handleClose = () => {\n    this.setState({ anchorEl: null });\n  };\n\n  render() {\n    const { anchorEl } = this.state;\n    return (\n      <div style={{marginLeft:'1em'}}>\n        <IconButton color=\"inherit\" \n          aria-label=\"More\"\n          aria-owns={Boolean(anchorEl) ? 'long-menu' : undefined}\n          aria-haspopup=\"true\"\n          onClick={this.handleClick}>\n          <MoreVertIcon />\n        </IconButton>\n\n        <Menu anchorEl={anchorEl} open={Boolean(anchorEl)} onClose={this.handleClose}>\n          <CreateFolderAction handleClose={this.handleClose} />\n          <CreateFileAction handleClose={this.handleClose} />\n          <UploadFileAction handleClose={this.handleClose} />\n          <SolidLogoutAction handleClose={this.handleClose} />\n        </Menu>\n      </div>\n    );\n  }\n}\n\n\nconst mapStateToProps = (state) => {\n    return {\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ThreeDotsMenu);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport KeyboardArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft';\nimport Button from '@material-ui/core/Button';\nimport './BreadcrumbText.css';\n\nconst styles = theme => ({\n  lastPath: {\n    display: 'block',\n    [theme.breakpoints.up('sm')]: {\n      display: 'none'\n    }\n  },\n  paths: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    }\n  }\n});\n\nclass BreadcrumbText extends Component {\n\n    render() {\n        const { classes, handleClickPath, path, rootTitle, handleGoBack, canGoBack } = this.props;\n\n        const separator = <span>&gt;</span>;\n        const rootPath = <span onClick={(e) => handleClickPath(e, -1, path)} data-index={0}>\n            { rootTitle } { path.length ? separator : '' }\n        </span>;\n        const lastPath = [...path].pop() || rootTitle;\n\n        const directories = path.map((dir, index) => {\n            return <span key={index} data-index={index} onClick={(e) => handleClickPath(e, index, path)}>\n                <span>{dir}</span> { path.length -1 !== index ? separator : '' }&nbsp;\n            </span>\n        });\n\n        return (\n            <div className=\"BreadcrumbText\">\n                <div className={classes.lastPath}>\n                    <Button onClick={handleGoBack} color=\"inherit\" type=\"button\" style={{display: canGoBack ? 'inline-flex' : 'none'}}>\n                        <KeyboardArrowLeftIcon />\n                    </Button>\n                    {lastPath}\n                </div>\n                <div className={classes.paths}>{rootPath} {directories}</div>\n            </div>\n        );\n    }\n}\n\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n    };\n};\n\nconst mapStateToProps = (state) => {\n    return {\n    };\n};\n\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(BreadcrumbText));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport { fade } from '@material-ui/core/styles/colorManipulator';\nimport { withStyles } from '@material-ui/core/styles';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { connect } from 'react-redux';\nimport { setFileListFilter, enterToPreviousDirectoryByIndex } from '../../Actions/Actions.js';\nimport ThreeDotsMenu from './ThreeDotsMenu.jsx';\nimport BreadcrumbText from '../Breadcrumb/BreadcrumbText.jsx';\nimport { enterToPreviousDirectory } from '../../Actions/Actions.js';\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    marginBottom: '4.3em'\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20,\n  },\n  title: {\n    display: 'block', // was none\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginLeft: 0,\n    width: '100%',\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing.unit,\n      width: 'auto',\n      display: 'block'\n    },\n  },\n  searchIcon: {\n    width: theme.spacing.unit * 9,\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n    width: '100%',\n  },\n  inputInput: {\n    paddingTop: theme.spacing.unit,\n    paddingRight: theme.spacing.unit,\n    paddingBottom: theme.spacing.unit,\n    paddingLeft: theme.spacing.unit * 10,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: 100,\n      '&:focus': {\n        width: 200,\n      },\n    },\n  },\n});\n\nfunction SearchAppBar(props) {\n  const { classes, path, handleClickPath, handleGoBack, canGoBack } = props;\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"fixed\">\n        <Toolbar>\n          <Typography className={classes.title} variant=\"h6\" color=\"inherit\" noWrap>\n            <BreadcrumbText \n                path={path} \n                handleClickPath={handleClickPath} \n                handleGoBack={handleGoBack}\n                canGoBack={canGoBack}\n                rootTitle=\"Solid Filemanager\"\n            />\n          </Typography>\n          <div className={classes.grow} />\n\n          <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <InputBase\n              placeholder=\"Search…\"\n              value={props.value}\n              onChange={props.handleChange}\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n            />\n          </div>\n          <ThreeDotsMenu />\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\nSearchAppBar.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\n\nconst mapStateToProps = (state) => {\n    return {\n        value: state.fileListFilter || '',\n        path: state.path,\n        canGoBack: state.path.length\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        handleChange: (event) => {\n            dispatch(setFileListFilter(event.currentTarget.value));\n        },\n        handleGoBack: (event) => {\n            dispatch(enterToPreviousDirectory());\n        },\n        /**\n         * @param {Object} event\n         * @param {Number} index\n         * @param {Array} path\n         * @returns {undefined}\n         */        \n        handleClickPath: (event, index) => {\n            dispatch(enterToPreviousDirectoryByIndex(index));\n            event.preventDefault();\n        }\n    };\n};\n\n\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(SearchAppBar));\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { connect } from 'react-redux';\nimport { getFileContent, enterToDirectory } from '../../../Actions/Actions.js';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from '@material-ui/core/Typography';\nimport OpenInBrowserIcon from '@material-ui/icons/OpenInBrowser';\n\nfunction OpenAction(props) {\n    const {handleClick, selectedFiles} = props;\n    return (\n        <MenuItem onClick={(e) => handleClick(e, selectedFiles)}>\n            <ListItemIcon>\n                <OpenInBrowserIcon />\n            </ListItemIcon>\n            <Typography variant=\"inherit\">\n                Open\n            </Typography>\n        </MenuItem>        \n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        selectedFiles: state.selectedFiles\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClick: (event, selectedFiles) => {\n            if (selectedFiles[0].type === 'dir') {\n                dispatch(enterToDirectory(selectedFiles[0].name));\n                return;\n            }\n            dispatch(getFileContent(selectedFiles[0].name));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OpenAction);\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { connect } from 'react-redux';\nimport { removeItems } from '../../../Actions/Actions.js';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from '@material-ui/core/Typography';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nfunction RemoveAction(props) {\n    const {handleClick, selectedFiles} = props;\n    return (\n        <MenuItem onClick={(e) => handleClick(e, selectedFiles)}>\n            <ListItemIcon>\n                <DeleteIcon />\n            </ListItemIcon>\n            <Typography variant=\"inherit\">\n                Remove\n            </Typography>\n        </MenuItem>        \n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        selectedFiles: state.selectedFiles\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClick: (event, selectedFiles) => {\n            dispatch(removeItems(selectedFiles));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RemoveAction);\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { connect } from 'react-redux';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from '@material-ui/core/Typography';\nimport HowToVoteIcon from '@material-ui/icons/HowToVote';\nimport { initSubList, setVisibleDialogMove } from '../../../Actions/Actions.js';\n\nfunction MoveAction(props) {\n    const {handleClick, selectedFiles} = props;\n\n    return (\n        <MenuItem onClick={(e) => handleClick(e, selectedFiles)}>\n            <ListItemIcon>\n                <HowToVoteIcon />\n            </ListItemIcon>\n            <Typography variant=\"inherit\">\n                Move\n            </Typography>\n        </MenuItem>        \n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        selectedFiles: state.selectedFiles\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClick: (event, selectedFiles) => {\n            dispatch(initSubList());\n            dispatch(setVisibleDialogMove(true));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MoveAction);\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { connect } from 'react-redux';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from '@material-ui/core/Typography';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport { initSubList, setVisibleDialogCopy } from '../../../Actions/Actions.js';\n\nfunction CopyAction(props) {\n    const {handleClick, selectedFiles} = props;\n\n    return (\n        <MenuItem onClick={(e) => handleClick(e, selectedFiles)}>\n            <ListItemIcon>\n                <FileCopyIcon />\n            </ListItemIcon>\n            <Typography variant=\"inherit\">\n                Copy\n            </Typography>\n        </MenuItem>        \n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        selectedFiles: state.selectedFiles\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClick: (event, selectedFiles) => {\n            dispatch(initSubList());\n            dispatch(setVisibleDialogCopy(true));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CopyAction);\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { connect } from 'react-redux';\nimport { getFileContent } from '../../../Actions/Actions.js';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from '@material-ui/core/Typography';\nimport OpenInBrowserIcon from '@material-ui/icons/OpenInBrowser';\n\nfunction OpenAction(props) {\n    const {handleClick, selectedFiles} = props;\n    return (\n        <MenuItem onClick={(e) => handleClick(e, selectedFiles)}>\n            <ListItemIcon>\n                <OpenInBrowserIcon />\n            </ListItemIcon>\n            <Typography variant=\"inherit\">\n                Edit\n            </Typography>\n        </MenuItem>        \n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        selectedFiles: state.selectedFiles\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClick: (event, selectedFiles) => {\n            dispatch(getFileContent(selectedFiles[0].name));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OpenAction);\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { connect } from 'react-redux';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from '@material-ui/core/Typography';\nimport WrapTextIcon from '@material-ui/icons/WrapText';\nimport { setVisibleDialogRename } from '../../../Actions/Actions.js';\n\nfunction MoveAction(props) {\n    const {handleClick, selectedFiles} = props;\n\n    return (\n        <MenuItem onClick={(e) => handleClick(e, selectedFiles)}>\n            <ListItemIcon>\n                <WrapTextIcon />\n            </ListItemIcon>\n            <Typography variant=\"inherit\">\n                Rename\n            </Typography>\n        </MenuItem>        \n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        selectedFiles: state.selectedFiles\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClick: (event, selectedFiles) => {\n            dispatch(setVisibleDialogRename(true));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MoveAction);\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { connect } from 'react-redux';\nimport { downloadFile } from '../../../Actions/Actions.js';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from '@material-ui/core/Typography';\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\n\nfunction DownloadAction(props) {\n    const {handleClick, selectedFiles} = props;\n    return (\n        <MenuItem onClick={(e) => handleClick(e, selectedFiles)}>\n            <ListItemIcon>\n                <CloudDownloadIcon   />\n            </ListItemIcon>\n            <Typography variant=\"inherit\">\n                Download\n            </Typography>\n        </MenuItem>        \n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        selectedFiles: state.selectedFiles\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClick: (event, selectedFiles) => {\n            dispatch(downloadFile(selectedFiles[0].name));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DownloadAction);\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { connect } from 'react-redux';\nimport { openInNewTab } from '../../../Actions/Actions.js';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from '@material-ui/core/Typography';\nimport LinkIcon from '@material-ui/icons/Link';\n\nfunction OpenInNewTabAction(props) {\n    const {handleClick, selectedFiles} = props;\n    return (\n        <MenuItem onClick={(e) => handleClick(e, selectedFiles)}>\n            <ListItemIcon>\n                <LinkIcon   />\n            </ListItemIcon>\n            <Typography variant=\"inherit\">\n                Open in new Tab\n            </Typography>\n        </MenuItem>        \n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        selectedFiles: state.selectedFiles\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClick: (event, selectedFiles) => {\n            dispatch(openInNewTab(selectedFiles[0].name));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OpenInNewTabAction);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './ContextMenu.css';\nimport Menu from '@material-ui/core/Menu';\nimport { getActionsByMultipleFiles } from '../../Api/ApiHandler.js';\nimport OpenAction from './ContextMenuActions/OpenAction.jsx';\nimport RemoveAction from './ContextMenuActions/RemoveAction.jsx';\nimport MoveAction from './ContextMenuActions/MoveAction.jsx';\nimport CopyAction from './ContextMenuActions/CopyAction.jsx';\nimport EditAction from './ContextMenuActions/EditAction.jsx';\nimport RenameAction from './ContextMenuActions/RenameAction.jsx';\nimport DownloadAction from './ContextMenuActions/DownloadAction.jsx';\nimport OpenInNewTabAction from './ContextMenuActions/OpenInNewTabAction.jsx';\n\nclass ContextMenu extends Component {\n\n    render() {\n        const { acts, visible, x, y } = this.props;\n\n        return (\n            <div>\n                <Menu\n                    anchorReference=\"anchorPosition\"\n                    anchorPosition={{ top: y, left: x }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left',\n                    }}\n                    open={visible}\n                    onClose={() => { }}\n                    PaperProps={{ style: { width: 190 } }}>\n                    {acts.includes('open') && <OpenAction />}\n                    {acts.includes('openInNewTab') && <OpenInNewTabAction />}\n                    {acts.includes('download') && <DownloadAction />}\n                    {acts.includes('edit') && <EditAction />}\n                    {acts.includes('copy') && <CopyAction />}\n                    {acts.includes('move') && <MoveAction />}\n                    {acts.includes('rename') && <RenameAction />}\n                    {acts.includes('remove') && <RemoveAction />}\n                </Menu>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        x: state.contextMenuPosition[0] || 0,\n        y: state.contextMenuPosition[1] || 0,\n        visible: !!state.contextMenuVisible,\n        acts: getActionsByMultipleFiles(state.selectedFiles),\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContextMenu);\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport { connect } from 'react-redux';\nimport { solidLogin, setVisibleDialogSolidLogin, refreshFileList } from '../../../Actions/Actions.js';\nimport config from '../../../config.js';\n\nclass FormDialog extends Component {\n    state = {\n      storageLocation: null,\n    };\n\n    componentWillReceiveProps(props) {\n      const { isLoggedIn, webId } = props;\n      if (isLoggedIn) {\n        const storageLocation = (new URL(webId)).origin;\n        this.setState({ storageLocation });\n      }\n    }\n\n    handleChange (event) {\n      const storageLocation = event.currentTarget.form.querySelector('input').value;\n      this.setState({ storageLocation });\n    }\n\n    handleSubmit (event) {\n        this.props.handleSubmit(event)(this.state.storageLocation);\n    }\n\n    render() {\n        let { storageLocation } = this.state;\n        const { handleClose, handleLogin, open, isLoggedIn } = this.props;\n\n        return (\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-solid-login\" fullWidth={true} maxWidth={'sm'}>\n                <form>\n                  <DialogTitle id=\"form-dialog-solid-login\">Login to your Solid pod</DialogTitle>\n                  <DialogContent>\n                    <p>Please login to your solid pod to access this app by clicking the login button below.</p>\n                    <Button color=\"primary\" type=\"submit\" onClick={handleLogin}>\n                      Login\n                    </Button>\n                    {\n                      isLoggedIn && (\n                        <div>\n                          <p>Please enter your pods storage location</p>\n                          <TextField autoFocus fullWidth margin=\"dense\" label=\"Storage Location\" type=\"text\" onChange={this.handleChange.bind(this)} value={storageLocation} />\n                        </div>\n                      )\n                    }\n                  </DialogContent>\n                  <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\" type=\"button\">\n                      Cancel\n                    </Button>\n                    <Button color=\"primary\" type=\"submit\" onClick={this.handleSubmit.bind(this)}>\n                      Enter your Pod\n                    </Button>\n                  </DialogActions>\n                </form>\n            </Dialog>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        open: state.visibleDialogSolidLogin,\n        webId: state.webId,\n        isLoggedIn: state.isLoggedIn\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClose: event => {\n            dispatch(setVisibleDialogSolidLogin(false));\n        },\n        handleLogin: event => {\n            event.preventDefault();\n            dispatch(solidLogin());\n        },\n        handleSubmit: event => (storageLocation) => {\n            event.preventDefault();\n            config.setHost(storageLocation);\n            dispatch(setVisibleDialogSolidLogin(false));\n            dispatch(refreshFileList());\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog);\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { connect } from 'react-redux';\nimport { solidLogout, setVisibleDialogSolidLogout } from '../../../Actions/Actions.js';\n\nclass FormDialog extends Component {\n\n    render() {\n        const { handleClose, handleLogout, open } = this.props;\n\n        return (\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-solid-logout\" fullWidth={true} maxWidth={'sm'}>\n                <form>\n                  <DialogTitle id=\"form-dialog-solid-logout\">Logout from your Solid pod</DialogTitle>\n                  <DialogContent>\n                    <p>Please confirm logging out by clicking the Logout button below</p>\n                  </DialogContent>\n                  <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\" type=\"button\">\n                      Cancel\n                    </Button>\n                    <Button color=\"primary\" type=\"submit\" onClick={handleLogout}>\n                      Logout\n                    </Button>\n                  </DialogActions>\n                </form>\n            </Dialog>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        open: state.visibleDialogSolidLogout\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClose: event => {\n            dispatch(setVisibleDialogSolidLogout(false));\n        },\n        handleLogout: event => {\n            event.preventDefault();\n            dispatch(solidLogout());\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog);\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { connect } from 'react-redux';\nimport { setVisibleDialogContent } from '../../../Actions/Actions.js';\n\nclass FormDialog extends Component {\n\n    state = {\n        lastBlobUrl: null,\n        content: '...',\n        loading: false\n    };\n\n    componentDidUpdate() {\n        if (this.props.blobUrl !== this.state.lastBlobUrl) {\n            this.setState({\n                lastBlobUrl: this.props.blobUrl\n            });\n            this.setState({\n                loading: true\n            });\n        }\n    }\n\n    render() {\n        const { handleClose, open } = this.props;\n        return (\n          <div style={{marginLeft:'1em'}}>\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-content\" fullWidth={true} maxWidth={'sm'}>\n              <DialogTitle id=\"form-dialog-content\">Viewing file </DialogTitle>\n              <DialogContent>\n                <img src={this.props.blobUrl} alt=\"\" style={{maxWidth: '100%'}}/>\n              </DialogContent>\n              <DialogActions>\n                <Button onClick={handleClose} color=\"primary\" type=\"button\">\n                  Close\n                </Button>\n              </DialogActions>\n            </Dialog>\n          </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        open: state.visibleDialogContent,\n        blobUrl: state.fileContentBlobUrl\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClose: (event) => {\n            dispatch(setVisibleDialogContent(false));\n        },\n        handleOpen: (event) => {\n            dispatch(setVisibleDialogContent(true));\n        },\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog);\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { connect } from 'react-redux';\nimport { setVisibleDialogEdit, updateTextFile } from '../../../Actions/Actions.js';\n\nclass FormDialog extends Component {\n\n    state = {\n        lastBlobUrl: null,\n        content: null,\n        loading: false\n    };\n\n    componentDidUpdate() {\n        if (this.props.blobUrl !== this.state.lastBlobUrl) {\n            this.setState({\n                lastBlobUrl: this.props.blobUrl\n            });\n            this.setState({\n                loading: true\n            });\n\n            this.props.blobUrl && fetch(this.props.blobUrl).then(r => {\n                return r.text();\n            }).then(t => {\n                this.setState({\n                    content: t\n                });\n                this.setState({\n                    loading: false\n                });\n            });\n        }\n    }\n\n    handleSave (event) {\n        event.preventDefault();\n        const content = event.currentTarget.form.querySelector('textarea').value;\n\n        this.props.handleSave(event)(this.props.fileName, content);\n    }\n\n    render() {\n        const { handleClose, open } = this.props;\n        const textAreaStyle = {\n            width: '100%',\n            minHeight: '300px'\n        };\n        const textArea = <textarea style={textAreaStyle} defaultValue={this.state.content || ''} />;\n\n        return (\n            <div>\n              <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-edit\" fullWidth={true} maxWidth={'sm'}>\n                <form>\n                  <DialogTitle id=\"form-dialog-edit\">Editing file </DialogTitle>\n                  <DialogContent>\n                    <DialogContentText>\n                      {this.state.loading ? 'Loading...' : textArea}\n                    </DialogContentText>\n                  </DialogContent>\n                  <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\" type=\"button\">\n                      Close\n                    </Button>\n                    <Button color=\"primary\" onClick={this.handleSave.bind(this)} type=\"submit\">\n                      Update\n                    </Button>\n                  </DialogActions>\n                </form>\n              </Dialog>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        open: state.visibleDialogEdit,\n        fileName: state.selectedFiles.length ? state.selectedFiles[0].name : '',\n        blobUrl: state.fileContentBlobUrl\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClose: (event) => {\n            dispatch(setVisibleDialogEdit(false));\n        },\n        handleOpen: (event) => {\n            dispatch(setVisibleDialogEdit(true));\n        },\n        handleSave: (event) => (fileName, content) => {\n            dispatch(updateTextFile(fileName, content));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog);\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { connect } from 'react-redux';\nimport { createNewFolder, setVisibleDialogCreateFolder } from '../../../Actions/Actions.js';\n\nclass FormDialog extends Component {\n\n    render() {\n        const { handleClose, handleSave, value, open } = this.props;\n\n        return (\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-create-folder\" fullWidth={true} maxWidth={'sm'}>\n                <form>\n                  <DialogTitle id=\"form-dialog-create-folder\">Create folder</DialogTitle>\n                  <DialogContent>\n                    <TextField autoFocus fullWidth margin=\"dense\" label=\"Folder name\" type=\"text\" value={value} />\n                  </DialogContent>\n                  <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\" type=\"button\">\n                      Cancel\n                    </Button>\n                    <Button color=\"primary\" type=\"submit\" onClick={handleSave}>\n                      Save\n                    </Button>\n                  </DialogActions>\n                </form>\n            </Dialog>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        open: state.visibleDialogCreateFolder\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClose: event => {\n            dispatch(setVisibleDialogCreateFolder(false));\n        },\n        handleSave: event => {\n            event.preventDefault();\n            const folderName = event.currentTarget.form.querySelector('input').value;\n            dispatch(createNewFolder(folderName));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog);\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { connect } from 'react-redux';\nimport { createFile, setVisibleDialogCreateFile } from '../../../Actions/Actions.js';\n\nclass FormDialog extends Component {\n\n    render() {\n        const { handleClose, handleCreate, value, open } = this.props;\n\n        return (\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-create-file\" fullWidth={true} maxWidth={'sm'}>\n                <form>\n                  <DialogTitle id=\"form-dialog-create-file\">Create file</DialogTitle>\n                  <DialogContent>\n                    <TextField autoFocus fullWidth margin=\"dense\" label=\"File name\" type=\"text\" value={value} />\n                  </DialogContent>\n                  <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\" type=\"button\">\n                      Cancel\n                    </Button>\n                    <Button color=\"primary\" type=\"submit\" onClick={handleCreate}>\n                      Create\n                    </Button>\n                  </DialogActions>\n                </form>\n            </Dialog>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        open: state.visibleDialogCreateFile\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClose: event => {\n            dispatch(setVisibleDialogCreateFile(false));\n        },\n        handleCreate: event => {\n            event.preventDefault();\n            const fileName = event.currentTarget.form.querySelector('input').value;\n            dispatch(createFile(fileName));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog);\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { connect } from 'react-redux';\nimport { renameFile, renameFolder, setVisibleDialogRename } from '../../../Actions/Actions.js';\n\nclass FormDialog extends Component {\n\n    state = {\n        value: ''\n    };\n\n    componentWillReceiveProps (props) {\n        this.setState({value: props.realName});\n    }\n\n    handleChange (event) {\n        this.setState({value: event.currentTarget.form.querySelector('input').value});\n    }\n\n    handleSave (event) {\n        this.props.handleSave(event)(this.props.realName, this.state.value, this.props.type);\n    }\n\n    render() {\n        const { value } = this.state;\n        const { handleClose, open } = this.props;\n\n        return (\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-create-folder\" fullWidth={true} maxWidth={'sm'}>\n                <form>\n                  <DialogTitle id=\"form-dialog-create-folder\">Rename</DialogTitle>\n                  <DialogContent>\n                    <TextField autoFocus fullWidth margin=\"dense\" label=\"Item name\" type=\"text\" onChange={this.handleChange.bind(this)} value={value} />\n                  </DialogContent>\n                  <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\" type=\"button\">\n                      Cancel\n                    </Button>\n                    <Button color=\"primary\" type=\"submit\" onClick={this.handleSave.bind(this)}>\n                      Save\n                    </Button>\n                  </DialogActions>\n                </form>\n            </Dialog>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        open: state.visibleDialogRename,\n        realName: state.selectedFiles.length ? state.selectedFiles[0].name : '',\n        type: state.selectedFiles.length ? state.selectedFiles[0].type : ''\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClose: event => {\n            dispatch(setVisibleDialogRename(false));\n        },\n        handleSave: event => (realName, newName, type) => {\n            event.preventDefault();\n            if (type === 'dir')\n                dispatch(renameFolder(realName, newName));\n            else\n               dispatch(renameFile(realName, newName));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { \n    setSelectedFolderSublist, enterToDirectorySublist \n} from '../../../Actions/Actions.js';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport FolderIcon from '@material-ui/icons/Folder';\nimport FileIcon from '@material-ui/icons/InsertDriveFile';\nimport blue from '@material-ui/core/colors/blue';\nimport '../File.css';\n\nconst styles = theme => ({\n});\n\n\nclass FileSublist extends Component {\n    render() {\n        const { type, name, handleClick, isSelected, handleDoubleClick } = this.props;\n        const avatarStyle = {\n            backgroundColor: isSelected ? blue['A200'] : null\n        };\n        return (\n            <div className=\"File\" onClick={handleClick} data-selected={isSelected} onDoubleClick={handleDoubleClick}>\n                <ListItem>\n                    <ListItemAvatar>\n                        <Avatar style={avatarStyle}>\n                            { type === 'dir' ? <FolderIcon /> : <FileIcon />}\n                        </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText primary={name} secondary=\"\" />\n                </ListItem>\n            </div>\n        );\n    }\n}\n\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        filePath: [...state.path, ownProps.name],\n        isSelected: state.selectedFolderSublist && (state.selectedFolderSublist.name === ownProps.name)\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        /**\n         * @param {Object} event\n         * @returns {undefined}\n         */\n        handleDoubleClick: (event) => {\n            dispatch(enterToDirectorySublist(ownProps.name));\n            dispatch(setSelectedFolderSublist(null));\n        },\n\n        /**\n         * @param {Object} event\n         * @returns {undefined}\n         */\n        handleClick: (event) => {\n            event.stopPropagation(); \n            dispatch(setSelectedFolderSublist(ownProps));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(FileSublist));\n\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport FileSublist from '../../File//FileSublist/FileSublist.jsx'; \nimport Loader from '../../Loader/Loader.jsx'; \nimport FileListEmptyMessage from '../FileListEmptyMessage';\nimport './FileListSublist.css'; \n\nclass FileListSublist extends Component {\n    render() {\n        const { fileList, loadingSublist } = this.props;\n        \n        const fileListComponent = fileList.map((file, key) => {\n            return <FileSublist type={file.type} name={file.name} key={key} />\n        });\n\n        return <div className=\"FileListSublist\">\n            { loadingSublist ? \n                <Loader /> : \n                fileListComponent.length ? fileListComponent : <FileListEmptyMessage />\n            }\n        </div>\n    }\n}\n\nconst mapStateToProps = (state) => {\n    const filteredList = state.fileListSublist\n        .filter(file => file.type === 'dir')\n        .filter(file => state.path.join('').trim() === state.pathSublist.join('').trim() ? \n            !state.selectedFiles.find(f => f.name === file.name) : true\n        );\n    return {\n        fileList: filteredList,\n        loadingSublist: state.loadingSublist,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FileListSublist);","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { connect } from 'react-redux';\nimport { setVisibleDialogMove, setSelectedFolderSublist, enterToPreviousDirectorySublist, moveItems } from '../../../Actions/Actions.js';\nimport FileListSublist from '../../FileList/FileListSublist/FileListSublist.jsx'; \nimport KeyboardArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft';\n\nclass FormDialog extends Component {\n\n    render() {\n        const { \n            selectedPath, handleClose, handleSave, open, \n            selectedFiles, canGoBack, canMove, handleGoBack \n        } = this.props;\n\n        return (\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-move\" fullWidth={true} maxWidth={'sm'}>\n                <form>\n                    <DialogTitle id=\"form-dialog-move\">\n                        Move files to <small style={{color: 'grey'}}>{ selectedPath.join('/') }</small>\n                    </DialogTitle>\n                    <DialogContent>\n                        <FileListSublist />\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={handleGoBack} color=\"primary\" type=\"button\" disabled={!canGoBack}>\n                            <KeyboardArrowLeftIcon /> Go back directory\n                        </Button>\n\n                        <Button onClick={handleClose} color=\"primary\" type=\"button\">\n                            Cancel\n                        </Button>\n                        <Button color=\"primary\" onClick={(e) => handleSave(e, selectedFiles)} disabled={!canMove} type=\"submit\">\n                            Move\n                        </Button>\n                    </DialogActions>\n                </form>\n            </Dialog>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    // prevent moving to same folder\n    const canMove = state.path.join('') !== state.pathSublist.join('') + (state.selectedFolderSublist ? state.selectedFolderSublist.name : '');\n\n    return {\n        open: state.visibleDialogMove,\n        selectedFolderSublist: state.selectedFolderSublist,\n        selectedPath: state.selectedFolderSublist ? [...state.pathSublist, state.selectedFolderSublist.name] : [],\n        selectedFiles: state.selectedFiles,\n        pathSublist: state.pathSublist,\n        canGoBack: state.pathSublist.length,\n        canMove: state.selectedFolderSublist && canMove\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClose: (event) => {\n            dispatch(setSelectedFolderSublist(null));\n            dispatch(setVisibleDialogMove(false));\n        },\n        handleSave: (event, selectedFiles) => {\n            dispatch(moveItems(selectedFiles));\n        },\n        handleGoBack: (event) => {\n            dispatch(setSelectedFolderSublist(null));\n            dispatch(enterToPreviousDirectorySublist());\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog);\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { connect } from 'react-redux';\nimport { setVisibleDialogCopy, setSelectedFolderSublist, enterToPreviousDirectorySublist, copyItems } from '../../../Actions/Actions.js';\nimport FileListSublist from '../../FileList/FileListSublist/FileListSublist.jsx'; \nimport KeyboardArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft';\n\nclass FormDialog extends Component {\n\n    render() {\n        const { \n            selectedPath, handleClose, handleSave, open, \n            canGoBack, canCopy, selectedFiles, handleGoBack \n        } = this.props;\n\n        return (\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-copy\" fullWidth={true} maxWidth={'sm'}>\n                <form>\n                    <DialogTitle id=\"form-dialog-copy\">\n                        Copy files to <small style={{color: 'grey'}}>{ selectedPath.join('/') }</small>\n                    </DialogTitle>\n                    <DialogContent>\n                        <FileListSublist />\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={handleGoBack} color=\"primary\" type=\"button\" disabled={!canGoBack}>\n                            <KeyboardArrowLeftIcon /> Go back directory\n                        </Button>\n\n                        <Button onClick={handleClose} color=\"primary\" type=\"button\">\n                            Cancel\n                        </Button>\n                        <Button color=\"primary\" onClick={(e) => handleSave(e, selectedFiles)} disabled={!canCopy} type=\"submit\">\n                            Copy\n                        </Button>\n                    </DialogActions>\n                </form>\n            </Dialog>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    // prevent copying to same folder\n    const canCopy = state.path.join('') !== state.pathSublist.join('') + (state.selectedFolderSublist ? state.selectedFolderSublist.name : '');\n\n    return {\n        open: state.visibleDialogCopy,\n        selectedFolderSublist: state.selectedFolderSublist,\n        selectedPath: state.selectedFolderSublist ? [...state.pathSublist, state.selectedFolderSublist.name] : [],\n        canGoBack: state.pathSublist.length,\n        canCopy: state.selectedFolderSublist && canCopy,\n        selectedFiles: state.selectedFiles\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClose: (event) => {\n            dispatch(setSelectedFolderSublist(null));\n            dispatch(setVisibleDialogCopy(false));\n        },\n        handleSave: (event, selectedFiles) => {\n            dispatch(copyItems(selectedFiles));\n        },\n        handleGoBack: (event) => {\n            dispatch(setSelectedFolderSublist(null));\n            dispatch(enterToPreviousDirectorySublist());\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport FileIcon from '@material-ui/icons/InsertDriveFile';\nimport { getHumanFileSize } from '../../Api/ApiHandler';\n\nfunction UploadFileList(props) {\n    const { files } = props;\n    const list = files.map((f, i) =>\n        <ListItem dense key={i}>\n            <ListItemIcon>\n                <FileIcon />\n            </ListItemIcon>\n            <ListItemText primary={`${f.name} (${getHumanFileSize(f.size)})`} />\n        </ListItem>\n    );\n\n    return (\n        <div>\n            <List component=\"nav\">\n                {list}\n            </List>\n        </div>\n    );\n}\n\nUploadFileList.propTypes = {\n    files: PropTypes.array.isRequired\n};\n\nexport default UploadFileList;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport UploadFileList from './UploadFileList';\n\nclass FileUploader extends Component {\n\n    handleReset(event) {\n        this.refs.inputfile.value = '';\n        this.props.handleReset(event);\n    }\n\n    render() {\n        const { fileUploadList, handleSelectedFiles } = this.props;\n        const styles = {\n            inputfile: {\n                // TODO: Change this to display none as soon, as the label button works\n                // display: 'none'\n            }, inputreset: {\n                display: fileUploadList.length ? 'inline-flex' : 'none'\n            }\n        }\n\n        return (\n            <div>\n                <label htmlFor=\"button-file\">\n                    <input style={styles.inputfile} id=\"button-file\" ref=\"inputfile\" multiple type=\"file\" onChange={handleSelectedFiles} />\n                    {/*<Button component=\"span\" variant=\"contained\" color=\"primary\">\n                        Select Files\n                    </Button>*/}\n                </label>\n\n                <Button style={styles.inputreset} component=\"span\" type=\"reset\" onClick={this.handleReset.bind(this)}>\n                    Clear\n                </Button>\n\n                <UploadFileList files={fileUploadList} />\n            </div>\n        );\n    }\n}\n\nFileUploader.propTypes = {\n    fileUploadList: PropTypes.array.isRequired,\n    handleReset: PropTypes.func.isRequired,\n    handleSelectedFiles: PropTypes.func.isRequired,\n};\n\nexport default FileUploader;\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { connect } from 'react-redux';\nimport { resetFileUploader, uploadFiles, setFileUploadList } from '../../../Actions/Actions.js';\nimport FileUploader from '../../FileUploader/FileUploader.jsx';\n\nclass FormDialog extends Component {\n\n    render() {\n        const { handleClose, handleReset, handleUpload, open, canUpload, fileUploadProgress, fileUploadList, handleSelectedFiles } = this.props;\n\n        return (\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-upload\" fullWidth={true} maxWidth={'sm'}>\n                <form>\n                    <DialogTitle id=\"form-dialog-upload\">\n                        Upload files\n                    </DialogTitle>\n                    <DialogContent>\n                        <FileUploader handleUpload={handleUpload} fileUploadList={fileUploadList} handleSelectedFiles={handleSelectedFiles} handleReset={handleReset}/>\n                        {canUpload ? <LinearProgress variant=\"determinate\" value={fileUploadProgress} /> : null }\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={handleClose} color=\"primary\" type=\"button\">\n                            Cancel\n                        </Button>\n                        <Button color=\"primary\" onClick={handleUpload} disabled={!canUpload} type=\"submit\">\n                            Upload\n                        </Button>\n                    </DialogActions>\n                </form>\n            </Dialog>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        open: state.visibleDialogUploadFile,\n        canUpload: state.fileUploadList.length,\n        fileUploadList: state.fileUploadList,\n        fileUploadProgress: state.fileUploadProgress\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClose: (event) => {\n            dispatch(resetFileUploader());\n        },\n        handleUpload: (event) => {\n            event.preventDefault();\n            const files = event.currentTarget.form.querySelector('input[type=file]').files;\n            dispatch(uploadFiles(files));\n        },\n        handleSelectedFiles: (event) => {\n            dispatch(setFileUploadList(\n                [...event.target.files].map(f => ({name: f.name, size: f.size}))\n            ));\n        },\n        handleReset: (event) => {\n            dispatch(setFileUploadList([]));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog);\n","import React from 'react';\nimport DialogSolidLogin from './SolidLogin/SolidLogin.jsx';\nimport DialogSolidLogout from './SolidLogout/SolidLogout.jsx';\nimport DialogContent from './Content/Content.jsx';\nimport DialogEdit from './Edit/Edit.jsx';\nimport DialogCreateFolder from './CreateFolder/CreateFolder.jsx';\nimport DialogCreateFile from './CreateFile/CreateFile.jsx';\nimport DialogRename from './Rename/Rename.jsx';\nimport DialogMove from './Move/Move.jsx';\nimport DialogCopy from './Copy/Copy.jsx';\nimport DialogUploadFile from './UploadFile/UploadFile.jsx';\n\nfunction Dialogs(props) {\n    return (\n        <div className=\"Dialogs\">\n            <DialogSolidLogin />\n            <DialogSolidLogout />\n            <DialogContent />\n            <DialogEdit />\n            <DialogCreateFolder />\n            <DialogCreateFile />\n            <DialogMove />\n            <DialogCopy />\n            <DialogRename />\n            <DialogUploadFile />\n        </div>\n    );\n}\n\nexport default Dialogs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { connect } from 'react-redux';\n\nconst styles = theme => ({\n  close: {\n    padding: theme.spacing.unit / 2,\n  },\n});\n\nclass DynamicSnackbar extends React.Component {\n  render() {\n    const { classes, errorMsg, handleClose, open, notificationDuration } = this.props;\n    return (\n      <div>\n        <Snackbar\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'left',\n          }}\n          open={open}\n          autoHideDuration={notificationDuration}\n          onClose={handleClose}\n          ContentProps={{\n            'aria-describedby': 'message-id',\n          }}\n          message={<span id=\"message-id\">{errorMsg}</span>}\n          action={[\n            <IconButton key=\"close\" aria-label=\"Close\" color=\"inherit\" className={classes.close} onClick={handleClose} >\n              <CloseIcon />\n            </IconButton>,\n          ]}\n        />\n      </div>\n    );\n  }\n}\n\nDynamicSnackbar.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        open: !!state.errorMsg,\n        errorMsg: state.errorMsg,\n        notificationDuration: state.notificationDuration || 60000\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClose: (event) => {\n            dispatch({\n                type: 'SET_ERROR_MSG',\n                value: null\n            });\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(DynamicSnackbar));\n\n","import React, { Component } from 'react';\nimport FileList from './Components/FileList/FileList.jsx';\nimport Navbar from './Components/Navbar/Navbar.jsx';\nimport ContextMenu from './Components/ContextMenu/ContextMenu.jsx';\nimport Dialogs from './Components/Dialogs/Dialogs.jsx';\n\nimport { MuiThemeProvider as MaterialUI, createMuiTheme } from '@material-ui/core/styles';\nimport blue from '@material-ui/core/colors/blue';\nimport { connect } from 'react-redux';\nimport { setContextMenuVisible, refreshFileList } from './Actions/Actions.js';\nimport DynamicSnackbar from './Components/Notification/DynamicSnackbar.jsx'; \n\nconst theme = createMuiTheme({\n    palette: {\n        primary: blue,\n    },\n    typography: {\n        useNextVariants: true,\n    }\n});\n\nclass App extends Component {\n\n    componentDidMount() {\n        this.props.init();\n    };\n\n    render() {\n        return (\n            <MaterialUI theme={theme}>\n                <div onClick={this.props.handleHideContextMenu} onContextMenu={this.props.handleHideContextMenu}>\n                    <Navbar />\n                    <FileList />\n                    <ContextMenu />\n                    <DynamicSnackbar />\n                    <Dialogs />\n                </div>\n            </MaterialUI>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        init: () => {\n            // dispatch(refreshFileList());\n        },\n\n        handleHideContextMenu: (event) => {\n            if (! (event.target.tagName === 'INPUT' || /label/i.test(event.target.className))) {\n                event.preventDefault();\n            }\n            dispatch(setContextMenuVisible(false));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport thunk from 'redux-thunk';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux'\nimport MainReducer from './Reducers/MainReducer'\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\nimport './index.css';\n\nconst store = createStore(MainReducer, applyMiddleware(thunk));\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>, \n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}