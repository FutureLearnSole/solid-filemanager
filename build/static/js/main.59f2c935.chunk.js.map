{"version":3,"sources":["../node_modules/n3/lib sync /^/.//N3.*$","Reducers/MainReducer.js","serviceWorker.js","config.js","Api/Api.js","Api/folderUtils.js","Api/ApiHandler.js","Actions/Actions.js","Components/File/File.jsx","Components/FileList/FileListEmptyMessage.jsx","Components/Loader/Loader.jsx","Components/FileList/FileList.jsx","Components/ContextMenu/ContextMenuActions/CreateFolderAction.jsx","Components/ContextMenu/ContextMenuActions/CreateFileAction.jsx","Components/ContextMenu/ContextMenuActions/UploadFileAction.jsx","Components/ContextMenu/ContextMenuActions/SolidLogoutAction.jsx","Components/Navbar/ThreeDotsMenu.jsx","Components/Breadcrumb/BreadcrumbText.jsx","Components/Navbar/Navbar.jsx","Components/ContextMenu/ContextMenuActions/OpenAction.jsx","Components/ContextMenu/ContextMenuActions/RemoveAction.jsx","Components/ContextMenu/ContextMenuActions/MoveAction.jsx","Components/ContextMenu/ContextMenuActions/CopyAction.jsx","Components/ContextMenu/ContextMenuActions/EditAction.jsx","Components/ContextMenu/ContextMenuActions/RenameAction.jsx","Components/ContextMenu/ContextMenuActions/DownloadAction.jsx","Components/ContextMenu/ContextMenuActions/OpenInNewTabAction.jsx","Components/ContextMenu/ContextMenu.jsx","Components/Dialogs/SolidLogin/SolidLogin.jsx","Components/Dialogs/SolidLogout/SolidLogout.jsx","Components/Dialogs/Content/Content.jsx","Components/Dialogs/Edit/Edit.jsx","Components/Dialogs/CreateFolder/CreateFolder.jsx","Components/Dialogs/CreateFile/CreateFile.jsx","Components/Dialogs/Rename/Rename.jsx","Components/File/FileSublist/FileSublist.jsx","Components/FileList/FileListSublist/FileListSublist.jsx","Components/Dialogs/Move/Move.jsx","Components/Dialogs/Copy/Copy.jsx","Components/FileUploader/UploadFileList.jsx","Components/FileUploader/FileUploader.jsx","Components/Dialogs/UploadFile/UploadFile.jsx","Components/Dialogs/Dialogs.jsx","Components/Notification/DynamicSnackbar.jsx","App.js","index.js"],"names":["map","./N3Lexer","./N3Lexer.js","./N3Parser","./N3Parser.js","./N3Store","./N3Store.js","./N3StreamParser","./N3StreamParser.js","./N3StreamWriter","./N3StreamWriter.js","./N3Util","./N3Util.js","./N3Writer","./N3Writer.js","webpackContext","req","id","webpackContextResolve","__webpack_require__","e","Error","code","keys","Object","resolve","module","exports","defaultState","path","pathSublist","host","isLoggedIn","webId","fileList","fileListSublist","fileListFilter","contextMenuVisible","contextMenuPosition","contextMenuPositionElement","selectedFiles","selectedFolderSublist","loading","loadingSublist","errorMsg","visibleDialogSolidLogin","visibleDialogSolidLogout","visibleDialogCreateFolder","visibleDialogCreateFile","visibleDialogUploadFile","visibleDialogContent","visibleDialogEdit","visibleDialogMove","visibleDialogCopy","visibleDialogRename","fileContentBlobUrl","fileUploadProgress","fileUploadList","MainReducer","state","arguments","length","undefined","action","type","assign","value","concat","toConsumableArray","sort","a","b","name","toLowerCase","filter","f","i","self","ff","indexOf","find","parseInt","URL","revokeObjectURL","createObjectURL","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","getHost","setHost","newHost","slice","isEditableFilePattern","isImageFilePattern","isExtractableFilePattern","actions","create_folder","move","copy","copy_folder","compress","extract","edit","remove","upload","upload_by_chunks","preview_images","createDirectory","directory","url","fileClient","Response","itemNames","Promise","all","itemName","removeItem","response","includes","removeFolder","_callee","folderName","folderPath","_ref","files","folders","promises","regenerator_default","wrap","_context","prev","next","sent","_ref2","_ref3","abrupt","stop","_x3","_x4","_x5","_copy","apply","this","_callee2","destination","originFolderUrl","_ref4","_context2","_ref5","_ref6","_ref7","copyFile","_ref8","copyFolder","_callee3","originPath","originName","destinationPath","destinationName","from","to","fileResponse","content","_context3","solidAuth","headers","get","text","t0","blob","method","body","_callee4","_ref9","_context4","_ref10","_ref11","folderType","fileType","getFolderItems","graph","subj","each","rdflib","item","newItem","folderNode","isAnInstanceOfClass","types","index","getFileType","stats","subjectName","subjectNode","mod","size","mtime","modified","any","getStats","label","decodeURIComponent","replace","messageTranslation","unknown_response","TypeError: Failed to fetch","parseFetchSuccess","reject","contentType","isJson","test","isTurtle","ok","json","success","data","handleFetchError","errorResponse","errJson","JSON","stringify","fixPath","getFileList","API","folderUtils","getFileBody","filename","renameFile","newFileName","renameFolder","newFolderName","moveItems","filenames","uploadFiles","baseUrl","Array","file","updateTextFile","fileName","getActionsByMultipleFiles","acts","forEach","fileActs","push","compressible","editable","extractable","getActionsByFile","splice","getHumanFileSize","bytes","Math","pow","toFixed","solidLogin","dispatch","getState","setLoading","solidPopupLogin","setWebId","setIsLoggedIn","r","toString","session","popupUri","refreshFileList","setSelectedFiles","APIHandler","join","setFileList","refreshFileListSublist","setLoadingSublist","setSelectedFolderSublist","setFileListSublist","getFileContent","setFileContent","setVisibleDialogContent","downloadFile","msSaveOrOpenBlob","document","createElement","href","download","appendChild","click","setTimeout","removeChild","promptDownload","getFileContentForEdit","setVisibleDialogEdit","createNewFolder","createFolderName","folder","trim","setVisibleDialogCreateFolder","removeItems","copyItems","_getState15","setVisibleDialogCopy","setSelectedFileFromLastTo","lastFile","_getState16","lastPreviouslySelected","pop","lastPreviouslySelectedIndex","lastSelectedIndex","toAdd","element","initSubList","setPathSublist","resetFileUploader","setFileUploadProgress","setVisibleDialogUploadFile","setFileUploadList","enterToPreviousDirectorySublist","setPath","enterToDirectory","setFileListFilter","search","setContextMenuVisible","visible","setVisibleDialogSolidLogin","setVisibleDialogSolidLogout","setVisibleDialogCreateFile","setVisibleDialogRename","setVisibleDialogMove","percentage","File","_this$props","props","isSelected","handleClick","handleDoubleClick","handleContextMenu","avatarStyle","backgroundColor","blue","realSize","react_default","className","onClick","onDoubleClick","onContextMenu","data-selected","ListItem_default","ListItemAvatar_default","Avatar_default","style","Folder_default","InsertDriveFile_default","ListItemText_default","primary","decodeURI","secondary","Component","connect","ownProps","filePath","event","preventDefault","stopPropagation","x","clientX","touches","pageX","y","clientY","pageY","shiftKey","setContextMenuPosition","ctrlKey","FileListEmptyMessage","withStyles","theme","progress","margin","spacing","unit","classes","Grid_default","container","justify","CircularProgress_default","color","FileList","fileListComponent","key","Components_File_File","Loader_Loader","Components_FileList_FileListEmptyMessage","toLocaleLowerCase","callback","handleClose","MenuItem_default","ListItemIcon_default","CreateNewFolder_default","Typography_default","variant","CloudUpload_default","Clear_default","ThreeDotsMenu","anchorEl","_this","setState","currentTarget","marginLeft","IconButton_default","aria-label","aria-owns","aria-haspopup","MoreVert_default","Menu_default","open","onClose","ContextMenuActions_CreateFolderAction","ContextMenuActions_CreateFileAction","ContextMenuActions_UploadFileAction","ContextMenuActions_SolidLogoutAction","React","BreadcrumbText","handleClickPath","rootTitle","handleGoBack","canGoBack","separator","rootPath","data-index","lastPath","directories","dir","Button_default","display","KeyboardArrowLeft_default","paths","defineProperty","breakpoints","up","root","width","marginBottom","grow","flexGrow","menuButton","marginRight","title","position","borderRadius","shape","fade","palette","common","white","&:hover","searchIcon","height","pointerEvents","alignItems","justifyContent","inputRoot","inputInput","paddingTop","paddingRight","paddingBottom","paddingLeft","transition","transitions","create","&:focus","handleChange","newPath","enterToPreviousDirectoryByIndex","AppBar_default","Toolbar_default","noWrap","Components_Breadcrumb_BreadcrumbText","Search_default","InputBase_default","placeholder","onChange","input","Navbar_ThreeDotsMenu","OpenInBrowser_default","Delete_default","HowToVote_default","FileCopy_default","WrapText_default","CloudDownload_default","Link_default","ContextMenu","anchorReference","anchorPosition","top","left","transformOrigin","vertical","horizontal","PaperProps","ContextMenuActions_OpenAction","ContextMenuActions_OpenInNewTabAction","ContextMenuActions_DownloadAction","EditAction","ContextMenuActions_CopyAction","ContextMenuActions_MoveAction","RenameAction","ContextMenuActions_RemoveAction","FormDialog","storageLocation","origin","form","querySelector","handleSubmit","handleLogin","Dialog_default","aria-labelledby","fullWidth","maxWidth","DialogTitle_default","DialogContent_default","TextField_default","autoFocus","bind","DialogActions_default","handleLogout","lastBlobUrl","blobUrl","src","alt","handleOpen","_this2","fetch","t","handleSave","textArea","minHeight","defaultValue","DialogContentText_default","handleCreate","encodeURI","createFile","realName","newName","FileSublist","FileListSublist","File_FileSublist_FileSublist","selectedPath","canMove","FileList_FileListSublist_FileListSublist","disabled","_getState14","canCopy","UploadFileList","list","dense","List_default","component","FileUploader","refs","inputfile","handleReset","handleSelectedFiles","styles","inputreset","htmlFor","ref","multiple","FileUploader_UploadFileList","handleUpload","canUpload","Components_FileUploader_FileUploader","LinearProgress_default","target","Dialogs","SolidLogin","SolidLogout","Content","Edit","CreateFolder","CreateFile","Move","Copy","Rename","UploadFile","DynamicSnackbar","notificationDuration","Snackbar_default","anchorOrigin","autoHideDuration","ContentProps","aria-describedby","message","close","Close_default","padding","createMuiTheme","typography","useNextVariants","App","init","core_styles","handleHideContextMenu","Navbar","Components_FileList_FileList","Components_ContextMenu_ContextMenu","Notification_DynamicSnackbar","Dialogs_Dialogs","tagName","store","createStore","applyMiddleware","thunk","ReactDOM","render","react_redux_es","src_App","getElementById","process","addEventListener","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.59f2c935.chunk.js","sourcesContent":["var map = {\n\t\"./N3Lexer\": 106,\n\t\"./N3Lexer.js\": 106,\n\t\"./N3Parser\": 107,\n\t\"./N3Parser.js\": 107,\n\t\"./N3Store\": 146,\n\t\"./N3Store.js\": 146,\n\t\"./N3StreamParser\": 147,\n\t\"./N3StreamParser.js\": 147,\n\t\"./N3StreamWriter\": 157,\n\t\"./N3StreamWriter.js\": 157,\n\t\"./N3Util\": 108,\n\t\"./N3Util.js\": 108,\n\t\"./N3Writer\": 112,\n\t\"./N3Writer.js\": 112\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 241;","export const defaultState = {\n    path: [],\n    pathSublist: [],\n    host: null,\n    isLoggedIn: false,\n    webId: null,\n    fileList: [],\n    fileListSublist: [],\n    fileListFilter: null,\n    contextMenuVisible: null,\n    contextMenuPosition: [],\n    contextMenuPositionElement: null,\n    selectedFiles: [],\n    selectedFolderSublist: null,\n    loading: false,\n    loadingSublist: false,\n    errorMsg: null,\n    visibleDialogSolidLogin: true,\n    visibleDialogSolidLogout: false,\n    visibleDialogCreateFolder: false,\n    visibleDialogCreateFile: false,\n    visibleDialogUploadFile: false,\n    visibleDialogContent: false,\n    visibleDialogEdit: false,\n    visibleDialogMove: false,\n    visibleDialogCopy: false,\n    visibleDialogRename: false,\n    fileContentBlobUrl: null,\n    fileUploadProgress: 0,\n    fileUploadList: []\n};\n\n/**\n * Main content reducer\n * @param {Object} state\n * @param {Object} action\n * @returns {Object}\n */\nconst MainReducer = (state = defaultState, action) => {\n    switch (action.type) {\n        case 'SET_PATH':\n            return Object.assign({}, state, {\n                path: action.value\n            });\n        case 'SET_PATH_SUB_LIST':\n            return Object.assign({}, state, {\n                pathSublist: action.value\n            });\n        case 'SET_HOST':\n            return Object.assign({}, state, {\n                host: action.value\n            });\n        case 'SET_IS_LOGGED_IN':\n            return Object.assign({}, state, {\n                isLoggedIn: action.value\n            });\n        case 'SET_WEB_ID':\n            return Object.assign({}, state, {\n                webId: action.value\n            });\n        case 'ENTER_TO_DIRECTORY':\n            return Object.assign({}, state, {\n                path: [...state.path, action.value]\n            });\n        case 'ENTER_TO_DIRECTORY_SUB_LIST':\n            return Object.assign({}, state, {\n                pathSublist: [...state.pathSublist, action.value]\n            });\n        case 'SET_FILE_LIST':\n            return Object.assign({}, state, {\n                fileList: action.value.sort((a, b) => a.type < b.type ? -1 : a.name.toLowerCase() > b.name.toLowerCase())\n            });\n        case 'SET_FILE_LIST_SUB_LIST':\n            return Object.assign({}, state, {\n                fileListSublist: action.value.sort((a, b) => a.type < b.type ? -1 : a.name.toLowerCase() > b.name.toLowerCase())\n            });\n        case 'SET_FILE_LIST_FILTER':\n            return Object.assign({}, state, { \n                fileListFilter: action.value\n            });\n        case 'SET_CONTEXT_MENU_VISIBLE':\n            return Object.assign({}, state, { \n                contextMenuVisible: action.value\n            });\n        case 'SET_CONTEXT_MENU_POSITION':\n            return Object.assign({}, state, { \n                contextMenuPosition: action.value\n            });\n        case 'SET_CONTEXT_MENU_POSITION_ELEMENT':\n            return Object.assign({}, state, { \n                contextMenuPositionElement: action.value\n            });\n        case 'SET_SELECTED_FILES':\n            return Object.assign({}, state, {\n                selectedFiles: (action.value).filter((f, i, self) => self.map(ff => ff.name).indexOf(f.name) === i)\n            });\n        case 'SET_SELECTED_FOLDER_SUB_LIST':\n            return Object.assign({}, state, {\n                selectedFolderSublist: action.value\n            });\n\n        case 'TOGGLE_SELECTED_FILE':\n            return Object.assign({}, state, {\n                selectedFiles: state.selectedFiles.find(f => f.name === action.value.name) ?\n                    state.selectedFiles.filter(f => f.name !== action.value.name) :\n                    [...state.selectedFiles, action.value]\n            });\n        case 'SET_FILE_UPLOAD_PROGRESS':\n            return Object.assign({}, state, {\n                fileUploadProgress: parseInt(action.value || 0)\n            });\n        case 'SET_LOADING':\n            return Object.assign({}, state, { \n                loading: action.value\n            });\n        case 'SET_LOADING_SUB_LIST':\n            return Object.assign({}, state, { \n                loadingSublist: action.value\n            });\n        case 'SET_ERROR_MSG':\n            return Object.assign({}, state, { \n                errorMsg: action.value\n            });\n\n        case 'SET_VISIBLE_DIALOG_SOLID_LOGIN':\n            return Object.assign({}, state, { \n                visibleDialogSolidLogin: !!action.value\n            });\n\n        case 'SET_VISIBLE_DIALOG_SOLID_LOGOUT':\n            return Object.assign({}, state, { \n                visibleDialogSolidLogout: !!action.value\n            });\n\n        case 'SET_VISIBLE_DIALOG_CREATE_FOLDER':\n            return Object.assign({}, state, { \n                visibleDialogCreateFolder: !!action.value\n            });\n\n        case 'SET_VISIBLE_DIALOG_CREATE_FILE':\n            return Object.assign({}, state, { \n                visibleDialogCreateFile: !!action.value\n            });\n            \n        case 'SET_VISIBLE_DIALOG_UPLOAD_FILE':\n            return Object.assign({}, state, { \n                visibleDialogUploadFile: !!action.value\n            });\n\n        case 'SET_VISIBLE_DIALOG_CONTENT':\n            return Object.assign({}, state, { \n                visibleDialogContent: !!action.value\n            });\n\n        case 'SET_VISIBLE_DIALOG_EDIT':\n            return Object.assign({}, state, { \n                visibleDialogEdit: !!action.value\n            });\n\n        case 'SET_VISIBLE_DIALOG_MOVE':\n            return Object.assign({}, state, { \n                visibleDialogMove: !!action.value\n            });\n        case 'SET_VISIBLE_DIALOG_COPY':\n            return Object.assign({}, state, { \n                visibleDialogCopy: !!action.value\n            });\n        case 'SET_VISIBLE_DIALOG_RENAME':\n            return Object.assign({}, state, { \n                visibleDialogRename: !!action.value\n            });\n        case 'SET_FILE_UPLOAD_LIST':\n            return Object.assign({}, state, {\n                fileUploadList: action.value\n            });\n\n        case 'SET_FILE_CONTENT':\n            /**\n             * Removing old blob url\n             */\n            state.fileContentBlobUrl && URL.revokeObjectURL(state.fileContentBlobUrl);\n            return Object.assign({}, state, { \n                fileContentBlobUrl: action.value ? URL.createObjectURL(action.value) : null\n            });\n\n        default:\n            return state;\n    }\n};\n\nexport default MainReducer;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","let host = null;\n\nexport default {\n    getHost() {\n        return host;\n    },\n    setHost(newHost) {\n        host = newHost;\n        while (host.slice(-1) === '/')\n            host = host.slice(0, -1);\n    },\n\n    isEditableFilePattern: /\\.(txt|diff?|patch|svg|asc|cnf|cfg|conf|html?|cfm|cgi|aspx?|ini|pl|py|md|css|cs|jsx?|jsp|log|htaccess|htpasswd|gitignore|gitattributes|env|json|atom|eml|rss|markdown|sql|xml|xslt?|sh|rb|as|bat|cmd|cob|for|ftn|frm|frx|inc|lisp|scm|coffee|php[3-6]?|java|c|cbl|go|h|scala|vb|tmpl|lock|go|yml|yaml|tsv|lst|ttl)$/i,\n    isImageFilePattern: /\\.(jpe?g|gif|bmp|png|svg|tiff?)$/i,\n    isExtractableFilePattern: /\\.(gz|tar|rar|g?zip)$/i,\n\n    actions: {\n        create_folder: true,\n        move: true,\n        copy: true,\n        copy_folder: true,\n        compress: true,\n        extract: true,\n        edit: true,\n        remove: true,\n        upload: true,\n        upload_by_chunks: true,\n        preview_images: true,\n    }\n};\n","import config from './../config.js';\nimport * as solidAuth from 'solid-auth-client';\nimport * as fileClient from 'solid-file-client';\n\n/**\n * Fetch API to list files from directory\n * @param {String} path\n * @returns {Object}\n */\nexport function list(path) {\n    const url = config.getHost() + path;\n    return solidAuth.fetch(url);\n};\n\n/**\n * Fetch API to create a directory\n * @param {String} path\n * @param {String} directory\n * @returns {Object}\n */\nexport function createDirectory(path, directory) {\n    const url = `${config.getHost()}${path}/${directory}`;\n    return fileClient.createFolder(url)\n        .then(() => new Response());\n};\n\n\n/**\n * Fetch API to get file body\n * @param {String} path\n * @returns {Object}\n */\nexport function getFileContent(path) {\n    const url = config.getHost() + path;\n    return solidAuth.fetch(url);\n};\n\n\n/**\n * Fetch API to remove a file or folder\n * @param {String} path\n * @param {Array} itemNames\n * @returns {Object}\n */\nexport function remove(path, itemNames) {\n    return Promise.all(itemNames.map(itemName => removeItem(path, itemName)))\n        .then(() => new Response());\n};\n\n\nfunction removeItem(path, itemName) {\n    const url = `${config.getHost()}${path}/${itemName}`;\n\n    return fileClient.deleteFile(url)\n        .then(response => {\n            if (response === 'OK') {\n                return new Response();\n            }\n            if (response.includes('409 (Conflict)')) {\n                return removeFolder(path, itemName);\n            }\n            throw response;\n        });\n}\n\nasync function removeFolder(path, folderName) {\n    const folderPath = `${path}/${folderName}`;\n    const url = `${config.getHost()}${folderPath}`;\n\n    const { files, folders } = await fileClient.readFolder(url);\n    const promises = [\n        ...files.map(({ name }) => removeItem(folderPath, name)),\n        ...folders.map(({ name }) => removeFolder(folderPath, name))\n    ];\n    await Promise.all(promises);\n    await fileClient.deleteFolder(url);\n\n    return new Response();\n}\n\n/**\n * Fetch API to move files\n * @param {String} path\n * @param {String} destination\n * @param {Array} filenames\n * @returns {Object}\n */\nexport function move(path, destination, filenames) {\n    return copy(path, destination, filenames)\n        .then(() => remove(path, filenames));\n};\n\n/**\n * Fetch API to rename a file\n * @param {String} path\n * @param {String} from\n * @param {String} to\n * @returns {Object}\n */\nexport function renameFile(path, from, to) {\n    return copyFile(path, from, path, to)\n        .then(() => removeItem(path, from))\n        .then(() => new Response());\n};\n\n\n/**\n * Fetch API to rename files\n * @param {String} path\n * @param {Array} filenames\n * @returns {Object}\n */\nexport function renameFolder(path, folderName, newFolderName) {\n    return copyFolder(path, folderName, path, newFolderName)\n        .then(() => removeFolder(path, folderName))\n        .then(() => new Response());\n};\n\n/**\n * Fetch API to copy files\n * @param {String} path\n * @param {Array} itemNames\n * @param {Boolean} recursive\n * @returns {Object}\n */\nexport async function copy(path, destination, itemNames) {\n    const originFolderUrl = config.getHost() + path;\n\n    let { files, folders } = await fileClient.readFolder(originFolderUrl);\n\n    files = files.filter(({ name }) => itemNames.includes(name));\n    folders = folders.filter(({ name }) => itemNames.includes(name));\n\n    const promises = [\n        ...files.map(({ name }) => copyFile(path, name, destination, name)),\n        ...folders.map(({ name }) => copyFolder(path, name, destination, name))\n    ];\n\n    await Promise.all(promises);\n    return new Response();\n};\n\n\nasync function copyFile(originPath, originName, destinationPath, destinationName) {\n    const from = `${config.getHost()}${originPath}/${originName}`;\n    const to = `${config.getHost()}${destinationPath}/${destinationName}`;\n\n    const fileResponse = await solidAuth.fetch(from);\n    const content = (fileResponse.headers.get('Content-Type') === 'application/json') ?\n        await fileResponse.text()\n        : await fileResponse.blob();\n\n    return solidAuth.fetch(to, {\n        method: 'PUT',\n        body: content\n    });\n}\n\nasync function copyFolder(originPath, originName, destinationPath, destinationName) {\n    const from = `${config.getHost()}${originPath}/${originName}`;\n\n    // TODO: Combine these two promises for better performance\n    await createDirectory(destinationPath, destinationName);\n    const { files, folders } = await fileClient.readFolder(from);\n\n    const promises = [\n        ...files.map(({ name }) => copyFile(`${originPath}/${originName}`, name, `${destinationPath}/${destinationName}`, name)),\n        ...folders.map(({ name }) => copyFolder(`${originPath}/${originName}`, name, `${destinationPath}/${destinationName}`, name))\n    ];\n\n    await Promise.all(promises);\n}\n\n/**\n * Fetch API to upload files\n * @param {String} path\n * @param {Object<FileList>} fileList\n * @returns {Object}\n */\nexport function upload(path, fileList) {\n    const baseUrl = config.getHost() + path;\n\n    const promises = Array.from(fileList).map(file => fileClient.updateFile(`${baseUrl}/${file.name}`, file));\n    return Promise.all(promises)\n        .then(() => new Response());\n};\n\n/**\n * Fetch API to upload a text\n * @param {String} path\n * @param {String} fileName\n * @param {String} content\n * @returns {Object} \n*/\nexport function updateTextFile(path, fileName, content) {\n    const url = `${config.getHost()}${path}/${fileName}`;\n    return fileClient.updateFile(url, content)\n        .then(() => new Response());\n}","// Based on https://github.com/jeff-zucker/solid-file-client/blob/master/src/folderUtils.js\nimport * as rdflib from 'rdflib';\n\nconst folderType = 'dir';\nconst fileType = 'file';\n\nexport function getStats(graph, subjectName) {\n    const subjectNode = rdflib.sym(subjectName);\n    const mod = rdflib.sym('http://purl.org/dc/terms/modified');\n    const size = rdflib.sym('http://www.w3.org/ns/posix/stat#size');\n    const mtime = rdflib.sym('http://www.w3.org/ns/posix/stat#mtime');\n    let modified = graph.any(subjectNode, mod, undefined);\n    if (typeof (modified) === \"undefined\") return false;\n    else modified = modified.value;\n    return {\n        modified: modified,\n        size: graph.any(subjectNode, size, undefined).value,\n        mtime: graph.any(subjectNode, mtime, undefined).value,\n    };\n}\n\n/** A type used internally to indicate we are handling a folder */\n/**\n * @param {rdflib.IndexedFormula} graph a rdflib.graph() database instance\n * @param {string} url location of the folder\n * @returns {string} content mime-type of a file, If it's a folder, return 'folder', 'unknown' for not sure\n */\nexport function getFileType(graph, url) {\n    const folderNode = rdflib.sym(url);\n    const isAnInstanceOfClass = rdflib.sym('http://www.w3.org/1999/02/22-rdf-syntax-ns#type');\n    const types = graph.each(folderNode, isAnInstanceOfClass, undefined);\n    for (const index in types) {\n        const contentType = types[index].value;\n        if (contentType.match('ldp#BasicContainer'))\n            return folderType;\n        else\n            return fileType;\n    }\n    return 'unknown';\n}\nexport function getFolderItems(graph, subj) {\n    const items = graph.each(\n        rdflib.sym(subj),\n        rdflib.sym('http://www.w3.org/ns/ldp#contains'),\n        undefined\n    ).map(item => {\n        let newItem = {}\n        newItem.type = getFileType(graph, item.value)\n        const stats = getStats(graph, item.value)\n        newItem.modified = stats.modified\n        newItem.size = stats.size\n        newItem.mtime = stats.mtime\n        newItem.label = decodeURIComponent(item.value).replace(/.*\\//, '')\n\n        if (newItem.type === folderType) {\n            item.value = item.value.replace(/[/]+/g, '/');\n            item.value = item.value.replace(/https:/, 'https:/');\n            const name = item.value.replace(/\\/$/, '')\n            newItem.name = name.replace(/.*\\//, '')\n            newItem.url = item.value\n        }\n        else {\n            newItem.url = item.value\n            newItem.name = item.value.replace(/.*\\//, '')\n        }\n\n        return newItem;\n    });\n\n    return items;\n}","import * as API from './Api.js';\nimport config from './../config.js';\nimport * as rdflib from 'rdflib';\nimport * as folderUtils from './folderUtils.js';\n\nconst messageTranslation = {\n    'unknown_response': 'Unknown error response from connector',\n    'TypeError: Failed to fetch': 'Cannot get a response from connector.',\n};\n\nconst parseFetchSuccess = (response) => {\n    return new Promise((resolve, reject) => {\n        const contentType = response.headers.get('content-type');\n        // const contentDisp = response.headers.get('content-disposition');\n        const isJson = /(application|text)\\/json/.test(contentType);\n        const isTurtle = /text\\/turtle/.test(contentType);\n        // const isAttachment = /attachment/.test(contentDisp);\n\n        if (!response.ok) {\n            if (isJson) {\n                return reject(response.json());\n            }\n            return reject(messageTranslation['unknown_response']);\n        }\n        else if (isJson) {\n            return response.json().then(json => {\n                if (!json.success) {\n                    return reject();\n                }\n                resolve(json.data);\n            }).catch(reject);\n        }\n        else if (isTurtle) {\n            const graph = rdflib.graph();\n\n            return response.text()\n                .then(text => {\n                    rdflib.parse(text, graph, response.url);\n                    resolve({\n                        graph,\n                        url: response.url,\n                        text\n                    });\n                })\n                .catch(reject);\n        }\n        else {\n            resolve(response);\n        }\n    });\n};\n\nconst handleFetchError = (errorResponse) => {\n    return new Promise((resolve, reject) => {\n        // is thrown json\n        if (errorResponse && errorResponse.then) {\n            errorResponse.then(errJson => {\n                return reject(errJson.errorMsg || JSON.stringify(errJson));\n            });\n        } else {\n            return reject(messageTranslation[errorResponse] || errorResponse);\n        }\n    });\n}\n\n/**\n * Clean path string removing double slashes and prepending a slash\n * @param {String} path\n * @returns {String}\n */\nconst fixPath = (path) => {\n    return ('/' + path).replace(/\\/\\//g, '/');\n};\n\n/**\n * Wrap API response for retrive file liest\n * @param {String} path\n * @returns {Object}\n */\nexport const getFileList = (path) => {\n    path = fixPath(path);\n    return API.list(path)\n        .then(parseFetchSuccess)\n        .then(({ graph, url }) => folderUtils.getFolderItems(graph, url))\n        .catch(handleFetchError)\n};\n\n/**\n * Wrap API response for retrieving file content\n * @param {String} path\n * @param {String} filename\n * @returns {Object}\n */\nexport const getFileBody = (path, filename) => {\n    path = fixPath(path + '/' + filename);\n    return API.getFileContent(path)\n        .then(response => response.blob())\n        .catch(handleFetchError);\n};\n\n\n/**\n * Wrap API response for retrive file content\n * @param {String} path\n * @returns {Object}\n */\nexport const renameFile = (path, filename, newFileName) => {\n    path = fixPath(path);\n    return API.renameFile(path, filename, newFileName)\n        .then(parseFetchSuccess)\n        .catch(handleFetchError)\n};\n\n\n/**\n * Wrap API response for retrive file content\n * @param {String} path\n * @returns {Object}\n */\nexport const renameFolder = (path, folderName, newFolderName) => {\n    path = fixPath(path);\n    return API.renameFolder(path, folderName, newFolderName)\n        .then(parseFetchSuccess)\n        .catch(handleFetchError)\n};\n\n/**\n * Wrap API response for create folder\n * @param {String} path\n * @param {String} folder\n * @returns {Object}\n */\nexport const createFolder = (path, folder) => {\n    path = fixPath(path);\n    if (!(folder || '').trim()) {\n        return Promise.reject('Invalid folder name');\n    }\n    return API.createDirectory(path, folder)\n        .then(parseFetchSuccess)\n        .catch(handleFetchError)\n};\n\n/**\n * Wrap API response for remove file or folder\n * @param {String} path\n * @param {Array} filenames\n * @returns {Object}\n */\nexport const removeItems = (path, filenames) => {\n    path = fixPath(path);\n    if (!filenames.length) {\n        return Promise.reject('No files to remove');\n    }\n    return API.remove(path, filenames)\n        .then(parseFetchSuccess)\n        .catch(handleFetchError)\n};\n\n/**\n * Wrap API response for move file or folder\n * @param {String} path\n * @param {String} destination\n * @param {Array} filenames\n * @returns {Object}\n */\nexport const moveItems = (path, destination, filenames) => {\n    path = fixPath(path);\n    destination = fixPath(destination);\n    if (!filenames.length) {\n        return Promise.reject('No files to move');\n    }\n    return API.move(path, destination, filenames)\n        .then(parseFetchSuccess)\n        .catch(handleFetchError)\n};\n\n/**\n * Wrap API response for copy file or folder\n * @param {String} path\n * @param {String} destination\n * @param {Array} filenames\n * @returns {Object}\n */\nexport const copyItems = (path, destination, filenames) => {\n    path = fixPath(path);\n    destination = fixPath(destination);\n    if (!filenames.length) {\n        return Promise.reject('No files to copy');\n    }\n    return API.copy(path, destination, filenames)\n        .then(parseFetchSuccess)\n        .catch(handleFetchError)\n};\n\n/**\n * Wrap API response for upload files\n * @param {String} path\n * @param {Object<FileList>} fileList\n * @returns {Object}\n */\nexport const uploadFiles = (path, fileList) => {\n    path = fixPath(path);\n\n    if (!fileList.length) {\n        return Promise.reject('No files to upload');\n    }\n    return API.upload(path, fileList)\n        .then(parseFetchSuccess)\n        .catch(handleFetchError)\n};\n\n/**\n * Wrap API response for uploading a text file\n * @param {String} path\n * @param {String} fileName\n * @param {String} content\n * @returns {Object}\n */\nexport const updateTextFile = (path, fileName, content) => {\n    path = fixPath(path);\n\n    return API.updateTextFile(path, fileName, content)\n        .then(parseFetchSuccess)\n        .catch(handleFetchError);\n};\n\n\n/**\n * Calculate available actions for a file\n * @param {Object} file\n * @returns {Array<String>}\n */\nexport const getActionsByFile = (file, acts = []) => {\n    if (file.type === 'dir') {\n        acts.push('open');\n\n        typeof file.compressible !== 'undefined' ?\n            file.compressible && acts.push('compress') :\n            acts.push('compress');\n    }\n\n    if (file.type === 'file') {\n        acts.push('download');\n        config.isImageFilePattern.test(file.name) && acts.push('open');\n\n        typeof file.editable !== 'undefined' ?\n            file.editable && acts.push('edit') :\n            config.isEditableFilePattern.test(file.name) && acts.push('edit');\n\n        typeof file.extractable !== 'undefined' ?\n            file.extractable && acts.push('extract') :\n            config.isExtractableFilePattern.test(file.name) && acts.push('extract');\n    }\n\n    acts.push('openInNewTab');\n    acts.push('copy');\n    acts.push('move');\n    acts.push('rename');\n    acts.push('perms');\n    acts.push('remove');\n\n    return acts;\n}\n\n/**\n * Calculate available actions for selected files, only leaving common actions\n * @param {Array<Object>} files\n * @returns {Array<String>}\n */\nexport const getActionsByMultipleFiles = (files, acts = []) => {\n    files.forEach(file => {\n        const fileActs = getActionsByFile(file);\n        // intersects previous actions with the following to leave only common actions\n        acts = acts.length ? acts.filter(value => -1 !== fileActs.indexOf(value)) : fileActs;\n    });\n\n    if (files.length > 1) {\n        acts.splice(acts.indexOf('open'), acts.indexOf('open') >= 0);\n        acts.splice(acts.indexOf('openInNewTab'), acts.indexOf('openInNewTab') >= 0);\n        acts.splice(acts.indexOf('edit'), acts.indexOf('edit') >= 0);\n        acts.splice(acts.indexOf('compress'), acts.indexOf('compress') >= 0);\n        acts.splice(acts.indexOf('download'), acts.indexOf('download') >= 0);\n        acts.splice(acts.indexOf('rename'), acts.indexOf('rename') >= 0);\n        acts.push('compress');\n    }\n    return acts;\n}\n\n/**\n * Calculate file size by bytes in human readable format\n * @param {Number} bytes\n * @returns {String}\n */\nexport const getHumanFileSize = (bytes) => {\n    const e = (Math.log(bytes) / Math.log(1e3)) | 0;\n    return +(bytes / Math.pow(1e3, e)).toFixed(2) + ' ' + ('kMGTPEZY'[e - 1] || '') + 'B';\n};","import * as APIHandler from '../Api/ApiHandler.js';\nimport * as solidAuth from 'solid-auth-client';\nimport config from '../config.js';\n\n\nexport const solidLogin = () => (dispatch, getState) => {\n    dispatch(setLoading(true));\n\n    solidPopupLogin().then(webId => {\n        dispatch(setWebId(webId));\n        dispatch(setIsLoggedIn(true));\n        dispatch(setLoading(false));\n    }).catch(r => {\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoading(false));\n    });\n};\n\nasync function solidPopupLogin() {\n    let session = await solidAuth.currentSession();\n    if (!session) {\n        let popupUri = 'https://solid.community/common/popup.html';\n        session = await solidAuth.popupLogin({ popupUri });\n    }\n    return(session.webId);\n}\n\n\nexport const solidLogout = () => (dispatch, getState) => {\n    dispatch(setLoading(true));\n\n    solidAuth.logout().then(() => {\n        // TODO: Add reset method\n        dispatch(setPath([]));\n        dispatch(setPathSublist([]));\n        dispatch(setFileList([]));\n        dispatch(setSelectedFiles([]));\n        dispatch(setVisibleDialogSolidLogout(false));\n        dispatch(setVisibleDialogSolidLogin(true));\n        dispatch(setLoading(false));\n    }).catch(r => {\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoading(false));\n    });\n};\n\n\n/**\n * Request API to get file list for the selected path then refresh UI\n * @returns {Function}\n */\nexport const uploadFiles = (fileList) => (dispatch, getState) => {\n    const { path } = getState();\n    dispatch(setLoading(true));\n    dispatch(setSelectedFiles([]));\n    dispatch(setFileUploadProgress(50));\n\n    APIHandler.uploadFiles(path.join('/'), fileList).then(r => {\n        dispatch(setFileUploadProgress(100));\n        setTimeout(f => {\n            dispatch(resetFileUploader());\n        }, 300);\n        dispatch(refreshFileList());\n    }).catch(r => {\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoading(false));\n    });\n};\n\n\nexport const createFile = (fileName) => (dispatch, getState) => {\n    const { path } = getState();\n    dispatch(setLoading(true));\n\n    APIHandler.updateTextFile(path.join('/'), fileName, '').then(r => {\n        dispatch(setVisibleDialogCreateFile(false));\n        dispatch(refreshFileList());\n\n        APIHandler.getFileList(path.join('/')).then(fileList => {\n            const file = fileList.find(file => file.name === fileName || file.name === encodeURI(fileName));\n            dispatch(setSelectedFiles([file]));\n            dispatch(setLoading(false));\n            dispatch(setVisibleDialogEdit(true));\n        });\n    });\n};\n\n\nexport const updateTextFile = (fileName, content) => (dispatch, getState) => {\n    const { path } = getState();\n    dispatch(setLoading(true));\n\n    APIHandler.updateTextFile(path.join('/'), fileName, content).then(r => {\n        dispatch(setVisibleDialogEdit(false));\n        dispatch(refreshFileList());\n        dispatch(setLoading(false));\n    }).catch(r => {\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoading(false));\n    });\n}\n\n/**\n * Request API to get file list for the selected path then refresh UI\n * @returns {Function}\n */\nexport const refreshFileList = () => (dispatch, getState) => {\n    const { path } = getState();\n    dispatch(setLoading(true));\n    dispatch(setSelectedFiles([]));\n    APIHandler.getFileList(path.join('/')).then(r => {\n        dispatch(setLoading(false));\n        dispatch(setFileList(r));\n    }).catch(r => {\n        dispatch(setFileList([]));\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoading(false));\n    });\n};\n\n\n/**\n * Request API to get file list for the selected path then refresh UI\n * @returns {Function}\n */\nexport const refreshFileListSublist = () => (dispatch, getState) => {\n    const { pathSublist } = getState();\n    dispatch(setLoadingSublist(true));\n    dispatch(setSelectedFolderSublist(null));\n\n    APIHandler.getFileList(pathSublist.join('/')).then(r => {\n        dispatch(setLoadingSublist(false));\n        dispatch(setFileListSublist(r));\n    }).catch(r => {\n        dispatch(setFileListSublist([]));\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoadingSublist(false));\n    });\n};\n\n\n/**\n * Request API to get file content then dispatch defined events\n * @param {String} fileName\n * @returns {Function}\n */\nexport const getFileContent = (fileName) => (dispatch, getState) => {\n    const { path } = getState();\n\n    dispatch(setLoading(true));\n    dispatch(setFileContent(null));\n    dispatch(setVisibleDialogContent(true));\n    APIHandler.getFileBody(path.join('/'), fileName).then(blob => {\n        dispatch(setFileContent(blob));\n        dispatch(setLoading(false));\n    }).catch(r => {\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoading(false));\n    });\n};\n\n/**\n * Request API to rename file then dispatch defined events\n * @param {String} fileName\n * @returns {Function}\n */\nexport const renameFile = (fileName, newFileName) => (dispatch, getState) => {\n    const { path } = getState();\n    dispatch(setLoading(true));\n    APIHandler.renameFile(path.join('/'), fileName, newFileName).then(blob => {\n        dispatch(setVisibleDialogRename(false));\n        dispatch(setLoading(false));\n        dispatch(refreshFileList());\n    }).catch(r => {\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoading(false));\n    });\n};\n\n/**\n * Request API to rename file then dispatch defined events\n * @param {String} folderName\n * @param {String} newFolderName\n * @returns {Function}\n */\nexport const renameFolder = (folderName, newFolderName) => (dispatch, getState) => {\n    const { path } = getState();\n    dispatch(setLoading(true));\n    APIHandler.renameFolder(path.join('/'), folderName, newFolderName).then(blob => {\n        dispatch(setVisibleDialogRename(false));\n        dispatch(setLoading(false));\n        dispatch(refreshFileList());\n    }).catch(r => {\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoading(false));\n    });\n};\n\n/**\n * Request API to get download file then dispatch defined events\n * @param {String} fileName\n * @returns {Function}\n */\nexport const downloadFile = (fileName) => (dispatch, getState) => {\n    const { path } = getState();\n    dispatch(setLoading(true));\n    APIHandler.getFileBody(path.join('/'), fileName).then(file => {\n        promptDownload(file, fileName);\n        dispatch(setLoading(false));\n    }).catch(r => {\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoading(false));\n    });\n};\n\n// code from https://stackoverflow.com/a/30832210/6548154\nfunction promptDownload(file, fileName) {\n    if (window.navigator.msSaveOrOpenBlob) // IE10+\n        window.navigator.msSaveOrOpenBlob(file, fileName);\n    else { // Others\n        const a = document.createElement(\"a\");\n        const url = URL.createObjectURL(file);\n        a.href = url;\n        a.download = fileName;\n        document.body.appendChild(a);\n        a.click();\n        setTimeout(() => {\n            document.body.removeChild(a);\n            window.URL.revokeObjectURL(url);  \n        }, 0);\n    }\n}\n\n\nexport const openInNewTab = (fileName) => (dispatch, getState) => {\n    const { path } = getState();\n    const url = `${config.getHost()}/${path.length ? (path.join('/') + '/') : ''}${fileName}`;\n    window.open(url, '_blank');\n};\n\n\n/**\n * Request API to get file content then dispatch defined events\n * @param {String} fileName\n * @returns {Function}\n */\nexport const getFileContentForEdit = (fileName) => (dispatch, getState) => {\n    const { path } = getState();\n    dispatch(setLoading(true));\n    dispatch(setFileContent(null));\n    dispatch(setVisibleDialogEdit(true));\n    APIHandler.getFileBody(path.join('/'), fileName).then(blob => {\n        dispatch(setFileContent(blob));\n        dispatch(setLoading(false));\n    }).catch(r => {\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoading(false));\n    });\n};\n\n\n/**\n * Request API to create a folder then dispatch defined events\n * @param {String} createFolderName\n * @returns {Function}\n */\nexport const createNewFolder = (createFolderName) => (dispatch, getState) => {\n    const { path } = getState();\n    dispatch(setLoading(true));\n\n    APIHandler.createFolder(path.join('/'), createFolderName).then(r => {\n        dispatch(setVisibleDialogCreateFolder(false));\n        dispatch(setLoading(false));\n        dispatch(refreshFileList());\n    }).catch(r => {\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoading(false));\n    });\n};\n\n\n/**\n * Request API to remove an item then dispatch defined events\n * @param {Array} filenames\n * @returns {Function}\n */\nexport const removeItems = (files) => (dispatch, getState) => {\n    const { path } = getState();\n    const filenames = files.map(f => f.name);\n\n    dispatch(setLoading(true));\n    APIHandler.removeItems(path.join('/'), filenames).then(r => {\n        dispatch(setLoading(false));\n        dispatch(refreshFileList());\n    }).catch(r => {\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoading(false));\n    });\n};\n\n\n/**\n * Request API to move an item then dispatch defined events\n * @param {Array} filenames\n * @returns {Function}\n */\nexport const moveItems = (files) => (dispatch, getState) => {\n    const { path, pathSublist, selectedFolderSublist } = getState();\n    const destination = pathSublist.join('/') + '/' + selectedFolderSublist.name;\n    const filenames = files.map(f => f.name);\n\n    dispatch(setLoading(true));\n    APIHandler.moveItems(path.join('/'), destination, filenames).then(r => {\n        dispatch(setLoading(false));\n        dispatch(setVisibleDialogMove(false));\n        dispatch(refreshFileList());\n    }).catch(r => {\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoading(false));\n    });\n};\n\n\n/**\n * Request API to copy an item then dispatch defined events\n * @param {Array} filenames\n * @returns {Function}\n */\nexport const copyItems = (files) => (dispatch, getState) => {\n    const { path, pathSublist, selectedFolderSublist } = getState();\n    const destination = pathSublist.join('/') + '/' + selectedFolderSublist.name;\n    const filenames = files.map(f => f.name);\n\n    dispatch(setLoading(true));\n    APIHandler.copyItems(path.join('/'), destination, filenames).then(r => {\n        dispatch(setLoading(false));\n        dispatch(setVisibleDialogCopy(false));\n        dispatch(refreshFileList());\n    }).catch(r => {\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoading(false));\n    });\n};\n\n/**\n * This handles multiple selection by using shift key\n * @param {Object} lastFile\n * @returns {Function}\n */\nexport const setSelectedFileFromLastTo = (lastFile) => (dispatch, getState) => {\n    const { fileList, selectedFiles } = getState();\n\n    const lastPreviouslySelected = [...selectedFiles].pop();\n    const lastPreviouslySelectedIndex = fileList.indexOf(fileList.find(f => f.name === lastPreviouslySelected.name))\n    const lastSelectedIndex = fileList.indexOf(fileList.find(f => f.name === lastFile.name))\n\n    let toAdd = [];\n    if (lastSelectedIndex > lastPreviouslySelectedIndex) {\n        toAdd = fileList.filter((index, element) => {\n            return fileList.indexOf(index) <= lastSelectedIndex && fileList.indexOf(index) >= lastPreviouslySelectedIndex\n        });\n    } else {\n        toAdd = fileList.filter((index, element) => {\n            return fileList.indexOf(index) >= lastSelectedIndex && fileList.indexOf(index) <= lastPreviouslySelectedIndex\n        });\n    }\n    dispatch(setSelectedFiles([...selectedFiles, ...toAdd]));\n};\n\n\n/**\n * @returns {Function}\n */\nexport const initSubList = () => (dispatch, getState) => {\n    const { path } = getState();\n    dispatch(setSelectedFolderSublist(null));\n    dispatch(setFileListSublist([]));    \n    dispatch(setPathSublist([...path]));\n    dispatch(refreshFileListSublist());\n};\n\nexport const resetFileUploader = () => (dispatch, getState) => {\n    dispatch(setFileUploadProgress(0));\n    dispatch(setVisibleDialogUploadFile(false));\n    dispatch(setFileUploadList([]));\n};\n\nexport const enterToPreviousDirectory = () => (dispatch, getState) => {\n    const { path } = getState();\n    dispatch(setPath(path.slice(0, -1)));\n    dispatch(setFileListFilter(null));\n    dispatch(refreshFileList());\n};\n\nexport const enterToPreviousDirectoryByIndex = (index) => (dispatch, getState) => {\n    const { path } = getState();\n    const newPath = [...path].slice(0, ++index);\n    dispatch(setPath(newPath));\n    dispatch(refreshFileList());\n    dispatch(setFileListFilter(null));\n};\n\nexport const enterToPreviousDirectorySublist = () => (dispatch, getState) => {\n    const { pathSublist } = getState();\n    dispatch(setPathSublist(pathSublist.slice(0, -1)));\n    dispatch(refreshFileListSublist());\n};\n\nexport const setPath = (path) => {\n    return {\n        type: 'SET_PATH',\n        value: path\n    };\n};\n\nexport const setPathSublist = (path) => {\n    return {\n        type: 'SET_PATH_SUB_LIST',\n        value: path\n    };\n};\n\nexport const setHost = (host) => {\n    return {\n        type: 'SET_HOST',\n        value: host\n    };\n};\n\nexport const setIsLoggedIn = (isLoggedIn) => {\n    return {\n        type: 'SET_IS_LOGGED_IN',\n        value: isLoggedIn\n    };\n};\n\nexport const setWebId = (webId) => {\n    return {\n        type: 'SET_WEB_ID',\n        value: webId\n    };\n};\n\nexport const enterToDirectory = (directory) => (dispatch, getState) => {\n    dispatch({\n        type: 'ENTER_TO_DIRECTORY',\n        value: directory\n    });\n    dispatch(setFileListFilter(null));\n    dispatch(refreshFileList());\n};\n\nexport const enterToDirectorySublist = (directory) => (dispatch, getState) => {\n    dispatch({\n        type: 'ENTER_TO_DIRECTORY_SUB_LIST',\n        value: directory\n    });\n    dispatch(refreshFileListSublist());\n};\n\nexport const setFileList = (fileList) => {\n    return {\n        type: 'SET_FILE_LIST',\n        value: fileList\n    };\n};\n\nexport const setFileListSublist = (fileList) => {\n    return {\n        type: 'SET_FILE_LIST_SUB_LIST',\n        value: fileList\n    };\n};\n\nexport const setSelectedFiles = (files) => {\n    return {\n        type: 'SET_SELECTED_FILES',\n        value: files\n    };\n};\n\nexport const setSelectedFolderSublist = (file) => {\n    return {\n        type: 'SET_SELECTED_FOLDER_SUB_LIST',\n        value: file\n    };\n};\n\nexport const setFileListFilter = (search) => {\n    return {\n        type: 'SET_FILE_LIST_FILTER',\n        value: search\n    };\n};\n\nexport const setContextMenuVisible = (visible) => {\n    return {\n        type: 'SET_CONTEXT_MENU_VISIBLE',\n        value: !!visible\n    };\n};\n\nexport const setContextMenuPosition = (x, y) => {\n    return {\n        type: 'SET_CONTEXT_MENU_POSITION',\n        value: [x, y]\n    };\n};\n\nexport const setContextMenuPositionElement = (element) => {\n    return {\n        type: 'SET_CONTEXT_MENU_POSITION_ELEMENT',\n        value: element\n    };\n};\n\nexport const toggleSelectedFile = (file) => {\n    return {\n        type: 'TOGGLE_SELECTED_FILE',\n        value: file\n    };\n};\n\nexport const rightClickOnFile = (file) => (dispatch, getState) => {\n    const { selectedFiles } = getState();\n    const isSelected = selectedFiles.indexOf(selectedFiles.find(f => f.name === file.name)) !== -1;\n\n    !isSelected && dispatch(setSelectedFiles([file]));\n};\n\nexport const setLoading = (value) => {\n    return {\n        type: 'SET_LOADING',\n        value: value\n    };\n};\n\nexport const setLoadingSublist = (value) => {\n    return {\n        type: 'SET_LOADING_SUB_LIST',\n        value: value\n    };\n};\n\nexport const setVisibleDialogSolidLogin = (visible) => {\n    return {\n        type: 'SET_VISIBLE_DIALOG_SOLID_LOGIN',\n        value: !!visible\n    };\n};\n\nexport const setVisibleDialogSolidLogout = (visible) => {\n    return {\n        type: 'SET_VISIBLE_DIALOG_SOLID_LOGOUT',\n        value: !!visible\n    };\n};\n\nexport const setVisibleDialogCreateFolder = (visible) => {\n    return {\n        type: 'SET_VISIBLE_DIALOG_CREATE_FOLDER',\n        value: !!visible\n    };\n};\n\nexport const setVisibleDialogCreateFile = (visible) => {\n    return {\n        type: 'SET_VISIBLE_DIALOG_CREATE_FILE',\n        value: !!visible\n    };\n};\n\nexport const setVisibleDialogUploadFile = (visible) => {\n    return {\n        type: 'SET_VISIBLE_DIALOG_UPLOAD_FILE',\n        value: !!visible\n    };\n};\n\nexport const setVisibleDialogRename = (visible) => {\n    return {\n        type: 'SET_VISIBLE_DIALOG_RENAME',\n        value: !!visible\n    };\n};\n\nexport const setVisibleDialogMove = (visible) => {\n    return {\n        type: 'SET_VISIBLE_DIALOG_MOVE',\n        value: !!visible\n    };\n};\n\nexport const setVisibleDialogCopy = (visible) => {\n    return {\n        type: 'SET_VISIBLE_DIALOG_COPY',\n        value: !!visible\n    };\n};\n\nexport const setVisibleDialogContent = (visible) => {\n    return {\n        type: 'SET_VISIBLE_DIALOG_CONTENT',\n        value: !!visible\n    };\n};\n\nexport const setVisibleDialogEdit = (visible) => {\n    return {\n        type: 'SET_VISIBLE_DIALOG_EDIT',\n        value: !!visible\n    };\n};\n\nexport const setFileContent = (blob) => {\n   return {\n        type: 'SET_FILE_CONTENT',\n        value: blob\n    };\n};\n\nexport const setFileUploadProgress = (percentage) => {\n   return {\n        type: 'SET_FILE_UPLOAD_PROGRESS',\n        value: percentage\n    };\n};\n\nexport const setFileUploadList = (files) => {\n   return {\n        type: 'SET_FILE_UPLOAD_LIST',\n        value: files\n    };\n};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport {\n    enterToDirectory, setContextMenuVisible, toggleSelectedFile, setContextMenuPosition,\n    setSelectedFileFromLastTo, getFileContent, getFileContentForEdit, \n    rightClickOnFile, setSelectedFiles\n} from '../../Actions/Actions.js';\nimport './File.css';\n\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport FolderIcon from '@material-ui/icons/Folder';\nimport FileIcon from '@material-ui/icons/InsertDriveFile';\nimport blue from '@material-ui/core/colors/blue';\nimport config from '../../config.js';\nimport { getHumanFileSize } from '../../Api/ApiHandler';\n\nclass File extends Component {\n    render() {\n        const { isSelected, type, name, size, handleClick, handleDoubleClick, handleContextMenu } = this.props;\n        const avatarStyle = {\n            backgroundColor: isSelected ? blue['A200'] : null\n        };\n        const realSize = typeof size !== 'undefined' && type !== 'dir' ? getHumanFileSize(size) : null;\n        return (\n            <div className=\"File\" onClick={handleClick} onDoubleClick={handleDoubleClick} onContextMenu={handleContextMenu} data-selected={isSelected}>\n                <ListItem>\n                    <ListItemAvatar>\n                        <Avatar style={avatarStyle}>\n                            { type === 'dir' ? <FolderIcon /> : <FileIcon />}\n                        </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText className=\"filename\" primary={decodeURI(name)} secondary={realSize} />\n                </ListItem>\n            </div>\n        );\n    }\n}\n\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        filePath: [...state.path, ownProps.name],\n        isSelected: !!state.selectedFiles.find(f => f.name === ownProps.name)\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        /**\n         * @param {Object} event\n         * @returns {undefined}\n         */\n        handleDoubleClick: (event) => {\n            if (ownProps.type === 'file') {\n                if (config.isEditableFilePattern.test(ownProps.name) || ownProps.editable) {\n                    dispatch(getFileContentForEdit(ownProps.name));\n                } else if (config.isImageFilePattern.test(ownProps.name)) {\n                    dispatch(getFileContent(ownProps.name));\n                }\n                return;\n            }\n\n            dispatch(enterToDirectory(ownProps.name));\n        },\n\n        /**\n         * @param {Object} event\n         * @returns {undefined}\n         */\n        handleContextMenu: (event) => {\n            event.preventDefault();\n            event.stopPropagation();\n\n            const x = event.clientX || (event.touches && event.touches[0].pageX);\n            const y = event.clientY || (event.touches && event.touches[0].pageY);\n\n            if (event.shiftKey) {\n                dispatch(setSelectedFileFromLastTo(ownProps));\n            } else {\n                dispatch(rightClickOnFile(ownProps));\n            }\n            \n            dispatch(setContextMenuVisible(true));\n            dispatch(setContextMenuPosition(x, y));\n        },\n\n        /**\n         * @param {Object} event\n         * @returns {undefined}\n         */\n        handleClick: (event) => {\n            event.stopPropagation();\n\n            if (event.ctrlKey) {\n                dispatch(toggleSelectedFile(ownProps));\n            } else if (event.shiftKey) {\n                dispatch(setSelectedFileFromLastTo(ownProps));\n            } else {\n                dispatch(setSelectedFiles([ownProps]));\n            }\n        }\n    };\n};\n\nFile.propTypes = {\n    name: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    size: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number\n    ]),\n    editable: PropTypes.oneOfType([\n        PropTypes.bool, PropTypes.number\n    ])\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(File);\n\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './FileListEmptyMessage.css';\n\nclass FileListEmptyMessage extends Component {\n    render() {\n        return (\n            <div className=\"FileListEmptyMessage\">\n                No files in this folder\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n    };\n};\n\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FileListEmptyMessage);\n\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Grid from '@material-ui/core/Grid';\n\nconst styles = theme => ({\n  progress: {\n    margin: theme.spacing.unit * 10,\n  },\n});\n\nfunction Loader(props) {\n    const { classes } = props;\n    return (\n        <Grid container justify=\"center\">\n            <CircularProgress className={classes.progress} color=\"secondary\" />\n        </Grid>\n    );\n}\n\nLoader.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Loader);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport File from '../File/File.jsx'; \nimport FileListEmptyMessage from './FileListEmptyMessage';\nimport Loader from '../Loader/Loader.jsx'; \nimport './FileList.css';\n\nclass FileList extends Component {\n    render() {\n        const { fileList, loading } = this.props;\n        \n        const fileListComponent = fileList.map((file, key) => {\n            return <File type={file.type} name={file.name} editable={file.editable} size={file.size} key={key} />\n        });\n\n        return <div className=\"FileList\">\n            { loading ? \n                <Loader /> : \n                fileListComponent.length ? fileListComponent : <FileListEmptyMessage />\n            }\n        </div>\n    }\n}\n\n\nconst mapStateToProps = (state) => {\n    const filteredList = state.fileList.filter(\n        file => state.fileListFilter ? file.name.toLocaleLowerCase().match(state.fileListFilter.toLocaleLowerCase()) : true\n    );\n    return {\n        fileList: filteredList,\n        loading: state.loading\n    };\n};\n\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        handleClick: (event) => {\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FileList);\n\n\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { connect } from 'react-redux';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from '@material-ui/core/Typography';\nimport CreateNewFolderIcon from '@material-ui/icons/CreateNewFolder';\nimport { setVisibleDialogCreateFolder } from '../../../Actions/Actions.js';\n\nfunction CreateFolderAction(props) {\n    const {handleClick, handleClose} = props;\n\n    const handleCloseAfter = (callback) => (event) => {\n        callback();\n        handleClose();\n    };\n\n    return (\n        <MenuItem onClick={handleCloseAfter(handleClick)}>\n            <ListItemIcon>\n                <CreateNewFolderIcon />\n            </ListItemIcon>\n            <Typography variant=\"inherit\">\n                Create folder\n            </Typography>\n        </MenuItem>        \n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClick: (event) => {\n            dispatch(setVisibleDialogCreateFolder(true));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateFolderAction);\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { connect } from 'react-redux';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from '@material-ui/core/Typography';\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\nimport { setVisibleDialogCreateFile } from '../../../Actions/Actions.js';\n\nfunction CreateFileAction(props) {\n    const {handleClick, handleClose} = props;\n\n    const handleCloseAfter = (callback) => (event) => {\n        callback();\n        handleClose();\n    };\n\n    return (\n        <MenuItem onClick={handleCloseAfter(handleClick)}>\n            <ListItemIcon>\n                <InsertDriveFileIcon />\n            </ListItemIcon>\n            <Typography variant=\"inherit\">\n                Create file\n            </Typography>\n        </MenuItem>        \n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClick: (event) => {\n            dispatch(setVisibleDialogCreateFile(true));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateFileAction);\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { connect } from 'react-redux';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from '@material-ui/core/Typography';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport { setVisibleDialogUploadFile } from '../../../Actions/Actions.js';\n\nfunction UploadFileAction(props) {\n    const {handleClick, handleClose} = props;\n\n    const handleCloseAfter = (callback) => (event) => {\n        callback();\n        handleClose();\n    };\n\n    return (\n        <MenuItem onClick={handleCloseAfter(handleClick)}>\n            <ListItemIcon>\n                <CloudUploadIcon />\n            </ListItemIcon>\n            <Typography variant=\"inherit\">\n                Upload files\n            </Typography>\n        </MenuItem>        \n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClick: (event) => {\n            dispatch(setVisibleDialogUploadFile(true));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UploadFileAction);\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { connect } from 'react-redux';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from '@material-ui/core/Typography';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport { setVisibleDialogSolidLogout } from '../../../Actions/Actions.js';\n\nfunction SolidLogoutAction(props) {\n    const {handleClick, handleClose} = props;\n\n    const handleCloseAfter = (callback) => (event) => {\n        callback();\n        handleClose();\n    };\n\n    return (\n        <MenuItem onClick={handleCloseAfter(handleClick)}>\n            <ListItemIcon>\n                <ClearIcon />\n            </ListItemIcon>\n            <Typography variant=\"inherit\">\n                Logout\n            </Typography>\n        </MenuItem>        \n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClick: (event) => {\n            dispatch(setVisibleDialogSolidLogout(true));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SolidLogoutAction);\n","import React from 'react';\nimport Menu from '@material-ui/core/Menu';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport { connect } from 'react-redux';\nimport CreateFolderAction from '../ContextMenu/ContextMenuActions/CreateFolderAction.jsx';\nimport CreateFileAction from '../ContextMenu/ContextMenuActions/CreateFileAction.jsx';\nimport UploadFileAction from '../ContextMenu/ContextMenuActions/UploadFileAction.jsx';\nimport SolidLogoutAction from '../ContextMenu/ContextMenuActions/SolidLogoutAction.jsx';\n\nclass ThreeDotsMenu extends React.Component {\n  state = {\n    anchorEl: null,\n  };\n\n  handleClick = event => {\n    this.setState({ anchorEl: event.currentTarget });\n  };\n\n  handleClose = () => {\n    this.setState({ anchorEl: null });\n  };\n\n  render() {\n    const { anchorEl } = this.state;\n    return (\n      <div style={{marginLeft:'1em'}}>\n        <IconButton color=\"inherit\" \n          aria-label=\"More\"\n          aria-owns={Boolean(anchorEl) ? 'long-menu' : undefined}\n          aria-haspopup=\"true\"\n          onClick={this.handleClick}>\n          <MoreVertIcon />\n        </IconButton>\n\n        <Menu anchorEl={anchorEl} open={Boolean(anchorEl)} onClose={this.handleClose}>\n          <CreateFolderAction handleClose={this.handleClose} />\n          <CreateFileAction handleClose={this.handleClose} />\n          <UploadFileAction handleClose={this.handleClose} />\n          <SolidLogoutAction handleClose={this.handleClose} />\n        </Menu>\n      </div>\n    );\n  }\n}\n\n\nconst mapStateToProps = (state) => {\n    return {\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ThreeDotsMenu);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport KeyboardArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft';\nimport Button from '@material-ui/core/Button';\nimport './BreadcrumbText.css';\n\nconst styles = theme => ({\n  lastPath: {\n    display: 'block',\n    [theme.breakpoints.up('sm')]: {\n      display: 'none'\n    }\n  },\n  paths: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    }\n  }\n});\n\nclass BreadcrumbText extends Component {\n\n    render() {\n        const { classes, handleClickPath, path, rootTitle, handleGoBack, canGoBack } = this.props;\n\n        const separator = <span>&gt;</span>;\n        const rootPath = <span onClick={(e) => handleClickPath(e, -1, path)} data-index={0}>\n            { rootTitle } { path.length ? separator : '' }\n        </span>;\n        const lastPath = [...path].pop() || rootTitle;\n\n        const directories = path.map((dir, index) => {\n            return <span key={index} data-index={index} onClick={(e) => handleClickPath(e, index, path)}>\n                <span>{dir}</span> { path.length -1 !== index ? separator : '' }&nbsp;\n            </span>\n        });\n\n        return (\n            <div className=\"BreadcrumbText\">\n                <div className={classes.lastPath}>\n                    <Button onClick={handleGoBack} color=\"inherit\" type=\"button\" style={{display: canGoBack ? 'inline-flex' : 'none'}}>\n                        <KeyboardArrowLeftIcon />\n                    </Button>\n                    {lastPath}\n                </div>\n                <div className={classes.paths}>{rootPath} {directories}</div>\n            </div>\n        );\n    }\n}\n\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n    };\n};\n\nconst mapStateToProps = (state) => {\n    return {\n    };\n};\n\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(BreadcrumbText));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport { fade } from '@material-ui/core/styles/colorManipulator';\nimport { withStyles } from '@material-ui/core/styles';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { connect } from 'react-redux';\nimport { setFileListFilter, enterToPreviousDirectoryByIndex } from '../../Actions/Actions.js';\nimport ThreeDotsMenu from './ThreeDotsMenu.jsx';\nimport BreadcrumbText from '../Breadcrumb/BreadcrumbText.jsx';\nimport { enterToPreviousDirectory } from '../../Actions/Actions.js';\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    marginBottom: '4.3em'\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20,\n  },\n  title: {\n    display: 'block', // was none\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginLeft: 0,\n    width: '100%',\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing.unit,\n      width: 'auto',\n      display: 'block'\n    },\n  },\n  searchIcon: {\n    width: theme.spacing.unit * 9,\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n    width: '100%',\n  },\n  inputInput: {\n    paddingTop: theme.spacing.unit,\n    paddingRight: theme.spacing.unit,\n    paddingBottom: theme.spacing.unit,\n    paddingLeft: theme.spacing.unit * 10,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: 100,\n      '&:focus': {\n        width: 200,\n      },\n    },\n  },\n});\n\nfunction SearchAppBar(props) {\n  const { classes, path, handleClickPath, handleGoBack, canGoBack } = props;\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"fixed\">\n        <Toolbar>\n          <Typography className={classes.title} variant=\"h6\" color=\"inherit\" noWrap>\n            <BreadcrumbText \n                path={path} \n                handleClickPath={handleClickPath} \n                handleGoBack={handleGoBack}\n                canGoBack={canGoBack}\n                rootTitle=\"Solid Filemanager\"\n            />\n          </Typography>\n          <div className={classes.grow} />\n\n          <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <InputBase\n              placeholder=\"Search…\"\n              value={props.value}\n              onChange={props.handleChange}\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n            />\n          </div>\n          <ThreeDotsMenu />\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\nSearchAppBar.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\n\nconst mapStateToProps = (state) => {\n    return {\n        value: state.fileListFilter || '',\n        path: state.path,\n        canGoBack: state.path.length\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        handleChange: (event) => {\n            dispatch(setFileListFilter(event.currentTarget.value));\n        },\n        handleGoBack: (event) => {\n            dispatch(enterToPreviousDirectory());\n        },\n        /**\n         * @param {Object} event\n         * @param {Number} index\n         * @param {Array} path\n         * @returns {undefined}\n         */        \n        handleClickPath: (event, index) => {\n            dispatch(enterToPreviousDirectoryByIndex(index));\n            event.preventDefault();\n        }\n    };\n};\n\n\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(SearchAppBar));\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { connect } from 'react-redux';\nimport { getFileContent, enterToDirectory } from '../../../Actions/Actions.js';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from '@material-ui/core/Typography';\nimport OpenInBrowserIcon from '@material-ui/icons/OpenInBrowser';\n\nfunction OpenAction(props) {\n    const {handleClick, selectedFiles} = props;\n    return (\n        <MenuItem onClick={(e) => handleClick(e, selectedFiles)}>\n            <ListItemIcon>\n                <OpenInBrowserIcon />\n            </ListItemIcon>\n            <Typography variant=\"inherit\">\n                Open\n            </Typography>\n        </MenuItem>        \n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        selectedFiles: state.selectedFiles\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClick: (event, selectedFiles) => {\n            if (selectedFiles[0].type === 'dir') {\n                dispatch(enterToDirectory(selectedFiles[0].name));\n                return;\n            }\n            dispatch(getFileContent(selectedFiles[0].name));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OpenAction);\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { connect } from 'react-redux';\nimport { removeItems } from '../../../Actions/Actions.js';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from '@material-ui/core/Typography';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nfunction RemoveAction(props) {\n    const {handleClick, selectedFiles} = props;\n    return (\n        <MenuItem onClick={(e) => handleClick(e, selectedFiles)}>\n            <ListItemIcon>\n                <DeleteIcon />\n            </ListItemIcon>\n            <Typography variant=\"inherit\">\n                Remove\n            </Typography>\n        </MenuItem>        \n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        selectedFiles: state.selectedFiles\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClick: (event, selectedFiles) => {\n            dispatch(removeItems(selectedFiles));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RemoveAction);\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { connect } from 'react-redux';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from '@material-ui/core/Typography';\nimport HowToVoteIcon from '@material-ui/icons/HowToVote';\nimport { initSubList, setVisibleDialogMove } from '../../../Actions/Actions.js';\n\nfunction MoveAction(props) {\n    const {handleClick, selectedFiles} = props;\n\n    return (\n        <MenuItem onClick={(e) => handleClick(e, selectedFiles)}>\n            <ListItemIcon>\n                <HowToVoteIcon />\n            </ListItemIcon>\n            <Typography variant=\"inherit\">\n                Move\n            </Typography>\n        </MenuItem>        \n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        selectedFiles: state.selectedFiles\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClick: (event, selectedFiles) => {\n            dispatch(initSubList());\n            dispatch(setVisibleDialogMove(true));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MoveAction);\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { connect } from 'react-redux';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from '@material-ui/core/Typography';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport { initSubList, setVisibleDialogCopy } from '../../../Actions/Actions.js';\n\nfunction CopyAction(props) {\n    const {handleClick, selectedFiles} = props;\n\n    return (\n        <MenuItem onClick={(e) => handleClick(e, selectedFiles)}>\n            <ListItemIcon>\n                <FileCopyIcon />\n            </ListItemIcon>\n            <Typography variant=\"inherit\">\n                Copy\n            </Typography>\n        </MenuItem>        \n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        selectedFiles: state.selectedFiles\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClick: (event, selectedFiles) => {\n            dispatch(initSubList());\n            dispatch(setVisibleDialogCopy(true));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CopyAction);\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { connect } from 'react-redux';\nimport { getFileContentForEdit } from '../../../Actions/Actions.js';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from '@material-ui/core/Typography';\nimport OpenInBrowserIcon from '@material-ui/icons/OpenInBrowser';\n\nfunction OpenAction(props) {\n    const {handleClick, selectedFiles} = props;\n    return (\n        <MenuItem onClick={(e) => handleClick(e, selectedFiles)}>\n            <ListItemIcon>\n                <OpenInBrowserIcon />\n            </ListItemIcon>\n            <Typography variant=\"inherit\">\n                Edit\n            </Typography>\n        </MenuItem>        \n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        selectedFiles: state.selectedFiles\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClick: (event, selectedFiles) => {\n            dispatch(getFileContentForEdit(selectedFiles[0].name));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OpenAction);\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { connect } from 'react-redux';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from '@material-ui/core/Typography';\nimport WrapTextIcon from '@material-ui/icons/WrapText';\nimport { setVisibleDialogRename } from '../../../Actions/Actions.js';\n\nfunction MoveAction(props) {\n    const {handleClick, selectedFiles} = props;\n\n    return (\n        <MenuItem onClick={(e) => handleClick(e, selectedFiles)}>\n            <ListItemIcon>\n                <WrapTextIcon />\n            </ListItemIcon>\n            <Typography variant=\"inherit\">\n                Rename\n            </Typography>\n        </MenuItem>        \n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        selectedFiles: state.selectedFiles\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClick: (event, selectedFiles) => {\n            dispatch(setVisibleDialogRename(true));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MoveAction);\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { connect } from 'react-redux';\nimport { downloadFile } from '../../../Actions/Actions.js';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from '@material-ui/core/Typography';\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\n\nfunction DownloadAction(props) {\n    const {handleClick, selectedFiles} = props;\n    return (\n        <MenuItem onClick={(e) => handleClick(e, selectedFiles)}>\n            <ListItemIcon>\n                <CloudDownloadIcon   />\n            </ListItemIcon>\n            <Typography variant=\"inherit\">\n                Download\n            </Typography>\n        </MenuItem>        \n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        selectedFiles: state.selectedFiles\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClick: (event, selectedFiles) => {\n            dispatch(downloadFile(selectedFiles[0].name));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DownloadAction);\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { connect } from 'react-redux';\nimport { openInNewTab } from '../../../Actions/Actions.js';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from '@material-ui/core/Typography';\nimport LinkIcon from '@material-ui/icons/Link';\n\nfunction OpenInNewTabAction(props) {\n    const {handleClick, selectedFiles} = props;\n    return (\n        <MenuItem onClick={(e) => handleClick(e, selectedFiles)}>\n            <ListItemIcon>\n                <LinkIcon   />\n            </ListItemIcon>\n            <Typography variant=\"inherit\">\n                Open in new Tab\n            </Typography>\n        </MenuItem>        \n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        selectedFiles: state.selectedFiles\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClick: (event, selectedFiles) => {\n            dispatch(openInNewTab(selectedFiles[0].name));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OpenInNewTabAction);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './ContextMenu.css';\nimport Menu from '@material-ui/core/Menu';\nimport { getActionsByMultipleFiles } from '../../Api/ApiHandler.js';\nimport OpenAction from './ContextMenuActions/OpenAction.jsx';\nimport RemoveAction from './ContextMenuActions/RemoveAction.jsx';\nimport MoveAction from './ContextMenuActions/MoveAction.jsx';\nimport CopyAction from './ContextMenuActions/CopyAction.jsx';\nimport EditAction from './ContextMenuActions/EditAction.jsx';\nimport RenameAction from './ContextMenuActions/RenameAction.jsx';\nimport DownloadAction from './ContextMenuActions/DownloadAction.jsx';\nimport OpenInNewTabAction from './ContextMenuActions/OpenInNewTabAction.jsx';\n\nclass ContextMenu extends Component {\n\n    render() {\n        const { acts, visible, x, y } = this.props;\n\n        return (\n            <div>\n                <Menu\n                    anchorReference=\"anchorPosition\"\n                    anchorPosition={{ top: y, left: x }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left',\n                    }}\n                    open={visible}\n                    onClose={() => { }}\n                    PaperProps={{ style: { width: 190 } }}>\n                    {acts.includes('open') && <OpenAction />}\n                    {acts.includes('openInNewTab') && <OpenInNewTabAction />}\n                    {acts.includes('download') && <DownloadAction />}\n                    {acts.includes('edit') && <EditAction />}\n                    {acts.includes('copy') && <CopyAction />}\n                    {acts.includes('move') && <MoveAction />}\n                    {acts.includes('rename') && <RenameAction />}\n                    {acts.includes('remove') && <RemoveAction />}\n                </Menu>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        x: state.contextMenuPosition[0] || 0,\n        y: state.contextMenuPosition[1] || 0,\n        visible: !!state.contextMenuVisible,\n        acts: getActionsByMultipleFiles(state.selectedFiles),\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContextMenu);\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport { connect } from 'react-redux';\nimport { solidLogin, setVisibleDialogSolidLogin, refreshFileList } from '../../../Actions/Actions.js';\nimport config from '../../../config.js';\n\nclass FormDialog extends Component {\n    state = {\n      storageLocation: null,\n    };\n\n    componentWillReceiveProps(props) {\n      const { isLoggedIn, webId } = props;\n      if (isLoggedIn) {\n        const storageLocation = (new URL(webId)).origin;\n        this.setState({ storageLocation });\n      }\n    }\n\n    handleChange (event) {\n      const storageLocation = event.currentTarget.form.querySelector('input').value;\n      this.setState({ storageLocation });\n    }\n\n    handleSubmit (event) {\n        this.props.handleSubmit(event)(this.state.storageLocation);\n    }\n\n    render() {\n        let { storageLocation } = this.state;\n        const { handleClose, handleLogin, open, isLoggedIn } = this.props;\n\n        return (\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-solid-login\" fullWidth={true} maxWidth={'sm'}>\n                <form>\n                  <DialogTitle id=\"form-dialog-solid-login\">Login to your Solid pod</DialogTitle>\n                  <DialogContent>\n                    <p>Please login to your solid pod to access this app by clicking the login button below.</p>\n                    <Button color=\"primary\" type=\"submit\" onClick={handleLogin}>\n                      Login\n                    </Button>\n                    {\n                      isLoggedIn && (\n                        <div>\n                          <p>Please enter your pods storage location</p>\n                          <TextField autoFocus fullWidth margin=\"dense\" label=\"Storage Location\" type=\"text\" onChange={this.handleChange.bind(this)} value={storageLocation} />\n                        </div>\n                      )\n                    }\n                  </DialogContent>\n                  <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\" type=\"button\">\n                      Cancel\n                    </Button>\n                    <Button color=\"primary\" type=\"submit\" onClick={this.handleSubmit.bind(this)}>\n                      Enter your Pod\n                    </Button>\n                  </DialogActions>\n                </form>\n            </Dialog>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        open: state.visibleDialogSolidLogin,\n        webId: state.webId,\n        isLoggedIn: state.isLoggedIn\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClose: event => {\n            dispatch(setVisibleDialogSolidLogin(false));\n        },\n        handleLogin: event => {\n            event.preventDefault();\n            dispatch(solidLogin());\n        },\n        handleSubmit: event => (storageLocation) => {\n            event.preventDefault();\n            config.setHost(storageLocation);\n            dispatch(setVisibleDialogSolidLogin(false));\n            dispatch(refreshFileList());\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog);\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { connect } from 'react-redux';\nimport { solidLogout, setVisibleDialogSolidLogout } from '../../../Actions/Actions.js';\n\nclass FormDialog extends Component {\n\n    render() {\n        const { handleClose, handleLogout, open } = this.props;\n\n        return (\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-solid-logout\" fullWidth={true} maxWidth={'sm'}>\n                <form>\n                  <DialogTitle id=\"form-dialog-solid-logout\">Logout from your Solid pod</DialogTitle>\n                  <DialogContent>\n                    <p>Please confirm logging out by clicking the Logout button below</p>\n                  </DialogContent>\n                  <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\" type=\"button\">\n                      Cancel\n                    </Button>\n                    <Button color=\"primary\" type=\"submit\" onClick={handleLogout}>\n                      Logout\n                    </Button>\n                  </DialogActions>\n                </form>\n            </Dialog>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        open: state.visibleDialogSolidLogout\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClose: event => {\n            dispatch(setVisibleDialogSolidLogout(false));\n        },\n        handleLogout: event => {\n            event.preventDefault();\n            dispatch(solidLogout());\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog);\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { connect } from 'react-redux';\nimport { setVisibleDialogContent } from '../../../Actions/Actions.js';\n\nclass FormDialog extends Component {\n\n    state = {\n        lastBlobUrl: null,\n        content: '...',\n        loading: false\n    };\n\n    componentDidUpdate() {\n        if (this.props.blobUrl !== this.state.lastBlobUrl) {\n            this.setState({\n                lastBlobUrl: this.props.blobUrl\n            });\n            this.setState({\n                loading: true\n            });\n        }\n    }\n\n    render() {\n        const { handleClose, open } = this.props;\n        return (\n          <div style={{marginLeft:'1em'}}>\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-content\" fullWidth={true} maxWidth={'sm'}>\n              <DialogTitle id=\"form-dialog-content\">Viewing file </DialogTitle>\n              <DialogContent>\n                <img src={this.props.blobUrl} alt=\"\" style={{maxWidth: '100%'}}/>\n              </DialogContent>\n              <DialogActions>\n                <Button onClick={handleClose} color=\"primary\" type=\"button\">\n                  Close\n                </Button>\n              </DialogActions>\n            </Dialog>\n          </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        open: state.visibleDialogContent,\n        blobUrl: state.fileContentBlobUrl\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClose: (event) => {\n            dispatch(setVisibleDialogContent(false));\n        },\n        handleOpen: (event) => {\n            dispatch(setVisibleDialogContent(true));\n        },\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog);\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { connect } from 'react-redux';\nimport { setVisibleDialogEdit, updateTextFile } from '../../../Actions/Actions.js';\n\nclass FormDialog extends Component {\n\n    state = {\n        lastBlobUrl: null,\n        content: null,\n        loading: false\n    };\n\n    componentDidUpdate() {\n        if (this.props.blobUrl !== this.state.lastBlobUrl) {\n            this.setState({\n                lastBlobUrl: this.props.blobUrl\n            });\n            this.setState({\n                loading: true\n            });\n\n            this.props.blobUrl && fetch(this.props.blobUrl).then(r => {\n                return r.text();\n            }).then(t => {\n                this.setState({\n                    content: t\n                });\n                this.setState({\n                    loading: false\n                });\n            });\n        }\n    }\n\n    handleSave (event) {\n        event.preventDefault();\n        const content = event.currentTarget.form.querySelector('textarea').value;\n\n        this.props.handleSave(event)(this.props.fileName, content);\n    }\n\n    render() {\n        const { handleClose, open } = this.props;\n        const textAreaStyle = {\n            width: '100%',\n            minHeight: '300px'\n        };\n        const textArea = <textarea style={textAreaStyle} defaultValue={this.state.content || ''} />;\n\n        return (\n            <div>\n              <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-edit\" fullWidth={true} maxWidth={'sm'}>\n                <form>\n                  <DialogTitle id=\"form-dialog-edit\">Editing file </DialogTitle>\n                  <DialogContent>\n                    <DialogContentText>\n                      {this.state.loading ? 'Loading...' : textArea}\n                    </DialogContentText>\n                  </DialogContent>\n                  <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\" type=\"button\">\n                      Close\n                    </Button>\n                    <Button color=\"primary\" onClick={this.handleSave.bind(this)} type=\"submit\">\n                      Update\n                    </Button>\n                  </DialogActions>\n                </form>\n              </Dialog>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        open: state.visibleDialogEdit,\n        fileName: state.selectedFiles.length ? state.selectedFiles[0].name : '',\n        blobUrl: state.fileContentBlobUrl\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClose: (event) => {\n            dispatch(setVisibleDialogEdit(false));\n        },\n        handleOpen: (event) => {\n            dispatch(setVisibleDialogEdit(true));\n        },\n        handleSave: (event) => (fileName, content) => {\n            dispatch(updateTextFile(fileName, content));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog);\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { connect } from 'react-redux';\nimport { createNewFolder, setVisibleDialogCreateFolder } from '../../../Actions/Actions.js';\n\nclass FormDialog extends Component {\n\n    render() {\n        const { handleClose, handleSave, value, open } = this.props;\n\n        return (\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-create-folder\" fullWidth={true} maxWidth={'sm'}>\n                <form>\n                  <DialogTitle id=\"form-dialog-create-folder\">Create folder</DialogTitle>\n                  <DialogContent>\n                    <TextField autoFocus fullWidth margin=\"dense\" label=\"Folder name\" type=\"text\" value={value} />\n                  </DialogContent>\n                  <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\" type=\"button\">\n                      Cancel\n                    </Button>\n                    <Button color=\"primary\" type=\"submit\" onClick={handleSave}>\n                      Save\n                    </Button>\n                  </DialogActions>\n                </form>\n            </Dialog>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        open: state.visibleDialogCreateFolder\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClose: event => {\n            dispatch(setVisibleDialogCreateFolder(false));\n        },\n        handleSave: event => {\n            event.preventDefault();\n            const folderName = event.currentTarget.form.querySelector('input').value;\n            dispatch(createNewFolder(folderName));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog);\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { connect } from 'react-redux';\nimport { createFile, setVisibleDialogCreateFile } from '../../../Actions/Actions.js';\n\nclass FormDialog extends Component {\n\n    render() {\n        const { handleClose, handleCreate, value, open } = this.props;\n\n        return (\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-create-file\" fullWidth={true} maxWidth={'sm'}>\n                <form>\n                  <DialogTitle id=\"form-dialog-create-file\">Create file</DialogTitle>\n                  <DialogContent>\n                    <TextField autoFocus fullWidth margin=\"dense\" label=\"File name\" type=\"text\" value={value} />\n                  </DialogContent>\n                  <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\" type=\"button\">\n                      Cancel\n                    </Button>\n                    <Button color=\"primary\" type=\"submit\" onClick={handleCreate}>\n                      Create\n                    </Button>\n                  </DialogActions>\n                </form>\n            </Dialog>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        open: state.visibleDialogCreateFile\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClose: event => {\n            dispatch(setVisibleDialogCreateFile(false));\n        },\n        handleCreate: event => {\n            event.preventDefault();\n            const fileName = event.currentTarget.form.querySelector('input').value;\n            dispatch(createFile(fileName));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog);\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { connect } from 'react-redux';\nimport { renameFile, renameFolder, setVisibleDialogRename } from '../../../Actions/Actions.js';\n\nclass FormDialog extends Component {\n\n    state = {\n        value: ''\n    };\n\n    componentWillReceiveProps (props) {\n        this.setState({value: props.realName});\n    }\n\n    handleChange (event) {\n        this.setState({value: event.currentTarget.form.querySelector('input').value});\n    }\n\n    handleSave (event) {\n        this.props.handleSave(event)(this.props.realName, this.state.value, this.props.type);\n    }\n\n    render() {\n        const { value } = this.state;\n        const { handleClose, open } = this.props;\n\n        return (\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-create-folder\" fullWidth={true} maxWidth={'sm'}>\n                <form>\n                  <DialogTitle id=\"form-dialog-create-folder\">Rename</DialogTitle>\n                  <DialogContent>\n                    <TextField autoFocus fullWidth margin=\"dense\" label=\"Item name\" type=\"text\" onChange={this.handleChange.bind(this)} value={value} />\n                  </DialogContent>\n                  <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\" type=\"button\">\n                      Cancel\n                    </Button>\n                    <Button color=\"primary\" type=\"submit\" onClick={this.handleSave.bind(this)}>\n                      Save\n                    </Button>\n                  </DialogActions>\n                </form>\n            </Dialog>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        open: state.visibleDialogRename,\n        realName: state.selectedFiles.length ? state.selectedFiles[0].name : '',\n        type: state.selectedFiles.length ? state.selectedFiles[0].type : ''\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClose: event => {\n            dispatch(setVisibleDialogRename(false));\n        },\n        handleSave: event => (realName, newName, type) => {\n            event.preventDefault();\n            if (type === 'dir')\n                dispatch(renameFolder(realName, newName));\n            else\n               dispatch(renameFile(realName, newName));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { \n    setSelectedFolderSublist, enterToDirectorySublist \n} from '../../../Actions/Actions.js';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport FolderIcon from '@material-ui/icons/Folder';\nimport FileIcon from '@material-ui/icons/InsertDriveFile';\nimport blue from '@material-ui/core/colors/blue';\nimport '../File.css';\n\nconst styles = theme => ({\n});\n\n\nclass FileSublist extends Component {\n    render() {\n        const { type, name, handleClick, isSelected, handleDoubleClick } = this.props;\n        const avatarStyle = {\n            backgroundColor: isSelected ? blue['A200'] : null\n        };\n        return (\n            <div className=\"File\" onClick={handleClick} data-selected={isSelected} onDoubleClick={handleDoubleClick}>\n                <ListItem>\n                    <ListItemAvatar>\n                        <Avatar style={avatarStyle}>\n                            { type === 'dir' ? <FolderIcon /> : <FileIcon />}\n                        </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText primary={name} secondary=\"\" />\n                </ListItem>\n            </div>\n        );\n    }\n}\n\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        filePath: [...state.path, ownProps.name],\n        isSelected: state.selectedFolderSublist && (state.selectedFolderSublist.name === ownProps.name)\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        /**\n         * @param {Object} event\n         * @returns {undefined}\n         */\n        handleDoubleClick: (event) => {\n            dispatch(enterToDirectorySublist(ownProps.name));\n            dispatch(setSelectedFolderSublist(null));\n        },\n\n        /**\n         * @param {Object} event\n         * @returns {undefined}\n         */\n        handleClick: (event) => {\n            event.stopPropagation(); \n            dispatch(setSelectedFolderSublist(ownProps));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(FileSublist));\n\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport FileSublist from '../../File//FileSublist/FileSublist.jsx'; \nimport Loader from '../../Loader/Loader.jsx'; \nimport FileListEmptyMessage from '../FileListEmptyMessage';\nimport './FileListSublist.css'; \n\nclass FileListSublist extends Component {\n    render() {\n        const { fileList, loadingSublist } = this.props;\n        \n        const fileListComponent = fileList.map((file, key) => {\n            return <FileSublist type={file.type} name={file.name} key={key} />\n        });\n\n        return <div className=\"FileListSublist\">\n            { loadingSublist ? \n                <Loader /> : \n                fileListComponent.length ? fileListComponent : <FileListEmptyMessage />\n            }\n        </div>\n    }\n}\n\nconst mapStateToProps = (state) => {\n    const filteredList = state.fileListSublist\n        .filter(file => file.type === 'dir')\n        .filter(file => state.path.join('').trim() === state.pathSublist.join('').trim() ? \n            !state.selectedFiles.find(f => f.name === file.name) : true\n        );\n    return {\n        fileList: filteredList,\n        loadingSublist: state.loadingSublist,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FileListSublist);","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { connect } from 'react-redux';\nimport { setVisibleDialogMove, setSelectedFolderSublist, enterToPreviousDirectorySublist, moveItems } from '../../../Actions/Actions.js';\nimport FileListSublist from '../../FileList/FileListSublist/FileListSublist.jsx'; \nimport KeyboardArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft';\n\nclass FormDialog extends Component {\n\n    render() {\n        const { \n            selectedPath, handleClose, handleSave, open, \n            selectedFiles, canGoBack, canMove, handleGoBack \n        } = this.props;\n\n        return (\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-move\" fullWidth={true} maxWidth={'sm'}>\n                <form>\n                    <DialogTitle id=\"form-dialog-move\">\n                        Move files to <small style={{color: 'grey'}}>{ selectedPath.join('/') }</small>\n                    </DialogTitle>\n                    <DialogContent>\n                        <FileListSublist />\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={handleGoBack} color=\"primary\" type=\"button\" disabled={!canGoBack}>\n                            <KeyboardArrowLeftIcon /> Go back directory\n                        </Button>\n\n                        <Button onClick={handleClose} color=\"primary\" type=\"button\">\n                            Cancel\n                        </Button>\n                        <Button color=\"primary\" onClick={(e) => handleSave(e, selectedFiles)} disabled={!canMove} type=\"submit\">\n                            Move\n                        </Button>\n                    </DialogActions>\n                </form>\n            </Dialog>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    // prevent moving to same folder\n    const canMove = state.path.join('') !== state.pathSublist.join('') + (state.selectedFolderSublist ? state.selectedFolderSublist.name : '');\n\n    return {\n        open: state.visibleDialogMove,\n        selectedFolderSublist: state.selectedFolderSublist,\n        selectedPath: state.selectedFolderSublist ? [...state.pathSublist, state.selectedFolderSublist.name] : [],\n        selectedFiles: state.selectedFiles,\n        pathSublist: state.pathSublist,\n        canGoBack: state.pathSublist.length,\n        canMove: state.selectedFolderSublist && canMove\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClose: (event) => {\n            dispatch(setSelectedFolderSublist(null));\n            dispatch(setVisibleDialogMove(false));\n        },\n        handleSave: (event, selectedFiles) => {\n            dispatch(moveItems(selectedFiles));\n        },\n        handleGoBack: (event) => {\n            dispatch(setSelectedFolderSublist(null));\n            dispatch(enterToPreviousDirectorySublist());\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog);\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { connect } from 'react-redux';\nimport { setVisibleDialogCopy, setSelectedFolderSublist, enterToPreviousDirectorySublist, copyItems } from '../../../Actions/Actions.js';\nimport FileListSublist from '../../FileList/FileListSublist/FileListSublist.jsx'; \nimport KeyboardArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft';\n\nclass FormDialog extends Component {\n\n    render() {\n        const { \n            selectedPath, handleClose, handleSave, open, \n            canGoBack, canCopy, selectedFiles, handleGoBack \n        } = this.props;\n\n        return (\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-copy\" fullWidth={true} maxWidth={'sm'}>\n                <form>\n                    <DialogTitle id=\"form-dialog-copy\">\n                        Copy files to <small style={{color: 'grey'}}>{ selectedPath.join('/') }</small>\n                    </DialogTitle>\n                    <DialogContent>\n                        <FileListSublist />\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={handleGoBack} color=\"primary\" type=\"button\" disabled={!canGoBack}>\n                            <KeyboardArrowLeftIcon /> Go back directory\n                        </Button>\n\n                        <Button onClick={handleClose} color=\"primary\" type=\"button\">\n                            Cancel\n                        </Button>\n                        <Button color=\"primary\" onClick={(e) => handleSave(e, selectedFiles)} disabled={!canCopy} type=\"submit\">\n                            Copy\n                        </Button>\n                    </DialogActions>\n                </form>\n            </Dialog>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    // prevent copying to same folder\n    const canCopy = state.path.join('') !== state.pathSublist.join('') + (state.selectedFolderSublist ? state.selectedFolderSublist.name : '');\n\n    return {\n        open: state.visibleDialogCopy,\n        selectedFolderSublist: state.selectedFolderSublist,\n        selectedPath: state.selectedFolderSublist ? [...state.pathSublist, state.selectedFolderSublist.name] : [],\n        canGoBack: state.pathSublist.length,\n        canCopy: state.selectedFolderSublist && canCopy,\n        selectedFiles: state.selectedFiles\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClose: (event) => {\n            dispatch(setSelectedFolderSublist(null));\n            dispatch(setVisibleDialogCopy(false));\n        },\n        handleSave: (event, selectedFiles) => {\n            dispatch(copyItems(selectedFiles));\n        },\n        handleGoBack: (event) => {\n            dispatch(setSelectedFolderSublist(null));\n            dispatch(enterToPreviousDirectorySublist());\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport FileIcon from '@material-ui/icons/InsertDriveFile';\nimport { getHumanFileSize } from '../../Api/ApiHandler';\n\nfunction UploadFileList(props) {\n    const { files } = props;\n    const list = files.map((f, i) =>\n        <ListItem dense key={i}>\n            <ListItemIcon>\n                <FileIcon />\n            </ListItemIcon>\n            <ListItemText primary={`${f.name} (${getHumanFileSize(f.size)})`} />\n        </ListItem>\n    );\n\n    return (\n        <div>\n            <List component=\"nav\">\n                {list}\n            </List>\n        </div>\n    );\n}\n\nUploadFileList.propTypes = {\n    files: PropTypes.array.isRequired\n};\n\nexport default UploadFileList;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport UploadFileList from './UploadFileList';\n\nclass FileUploader extends Component {\n\n    handleReset(event) {\n        this.refs.inputfile.value = '';\n        this.props.handleReset(event);\n    }\n\n    render() {\n        const { fileUploadList, handleSelectedFiles } = this.props;\n        const styles = {\n            inputfile: {\n                // TODO: Change this to display none as soon, as the label button works\n                // display: 'none'\n            }, inputreset: {\n                display: fileUploadList.length ? 'inline-flex' : 'none'\n            }\n        }\n\n        return (\n            <div>\n                <label htmlFor=\"button-file\">\n                    <input style={styles.inputfile} id=\"button-file\" ref=\"inputfile\" multiple type=\"file\" onChange={handleSelectedFiles} />\n                    {/*<Button component=\"span\" variant=\"contained\" color=\"primary\">\n                        Select Files\n                    </Button>*/}\n                </label>\n\n                <Button style={styles.inputreset} component=\"span\" type=\"reset\" onClick={this.handleReset.bind(this)}>\n                    Clear\n                </Button>\n\n                <UploadFileList files={fileUploadList} />\n            </div>\n        );\n    }\n}\n\nFileUploader.propTypes = {\n    fileUploadList: PropTypes.array.isRequired,\n    handleReset: PropTypes.func.isRequired,\n    handleSelectedFiles: PropTypes.func.isRequired,\n};\n\nexport default FileUploader;\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { connect } from 'react-redux';\nimport { resetFileUploader, uploadFiles, setFileUploadList } from '../../../Actions/Actions.js';\nimport FileUploader from '../../FileUploader/FileUploader.jsx';\n\nclass FormDialog extends Component {\n\n    render() {\n        const { handleClose, handleReset, handleUpload, open, canUpload, fileUploadProgress, fileUploadList, handleSelectedFiles } = this.props;\n\n        return (\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-upload\" fullWidth={true} maxWidth={'sm'}>\n                <form>\n                    <DialogTitle id=\"form-dialog-upload\">\n                        Upload files\n                    </DialogTitle>\n                    <DialogContent>\n                        <FileUploader handleUpload={handleUpload} fileUploadList={fileUploadList} handleSelectedFiles={handleSelectedFiles} handleReset={handleReset}/>\n                        {canUpload ? <LinearProgress variant=\"determinate\" value={fileUploadProgress} /> : null }\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={handleClose} color=\"primary\" type=\"button\">\n                            Cancel\n                        </Button>\n                        <Button color=\"primary\" onClick={handleUpload} disabled={!canUpload} type=\"submit\">\n                            Upload\n                        </Button>\n                    </DialogActions>\n                </form>\n            </Dialog>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        open: state.visibleDialogUploadFile,\n        canUpload: state.fileUploadList.length,\n        fileUploadList: state.fileUploadList,\n        fileUploadProgress: state.fileUploadProgress\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClose: (event) => {\n            dispatch(resetFileUploader());\n        },\n        handleUpload: (event) => {\n            event.preventDefault();\n            const files = event.currentTarget.form.querySelector('input[type=file]').files;\n            dispatch(uploadFiles(files));\n        },\n        handleSelectedFiles: (event) => {\n            dispatch(setFileUploadList(\n                [...event.target.files].map(f => ({name: f.name, size: f.size}))\n            ));\n        },\n        handleReset: (event) => {\n            dispatch(setFileUploadList([]));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog);\n","import React from 'react';\nimport DialogSolidLogin from './SolidLogin/SolidLogin.jsx';\nimport DialogSolidLogout from './SolidLogout/SolidLogout.jsx';\nimport DialogContent from './Content/Content.jsx';\nimport DialogEdit from './Edit/Edit.jsx';\nimport DialogCreateFolder from './CreateFolder/CreateFolder.jsx';\nimport DialogCreateFile from './CreateFile/CreateFile.jsx';\nimport DialogRename from './Rename/Rename.jsx';\nimport DialogMove from './Move/Move.jsx';\nimport DialogCopy from './Copy/Copy.jsx';\nimport DialogUploadFile from './UploadFile/UploadFile.jsx';\n\nfunction Dialogs(props) {\n    return (\n        <div className=\"Dialogs\">\n            <DialogSolidLogin />\n            <DialogSolidLogout />\n            <DialogContent />\n            <DialogEdit />\n            <DialogCreateFolder />\n            <DialogCreateFile />\n            <DialogMove />\n            <DialogCopy />\n            <DialogRename />\n            <DialogUploadFile />\n        </div>\n    );\n}\n\nexport default Dialogs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { connect } from 'react-redux';\n\nconst styles = theme => ({\n  close: {\n    padding: theme.spacing.unit / 2,\n  },\n});\n\nclass DynamicSnackbar extends React.Component {\n  render() {\n    const { classes, errorMsg, handleClose, open, notificationDuration } = this.props;\n    return (\n      <div>\n        <Snackbar\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'left',\n          }}\n          open={open}\n          autoHideDuration={notificationDuration}\n          onClose={handleClose}\n          ContentProps={{\n            'aria-describedby': 'message-id',\n          }}\n          message={<span id=\"message-id\">{errorMsg}</span>}\n          action={[\n            <IconButton key=\"close\" aria-label=\"Close\" color=\"inherit\" className={classes.close} onClick={handleClose} >\n              <CloseIcon />\n            </IconButton>,\n          ]}\n        />\n      </div>\n    );\n  }\n}\n\nDynamicSnackbar.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        open: !!state.errorMsg,\n        errorMsg: state.errorMsg,\n        notificationDuration: state.notificationDuration || 60000\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClose: (event) => {\n            dispatch({\n                type: 'SET_ERROR_MSG',\n                value: null\n            });\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(DynamicSnackbar));\n\n","import React, { Component } from 'react';\nimport FileList from './Components/FileList/FileList.jsx';\nimport Navbar from './Components/Navbar/Navbar.jsx';\nimport ContextMenu from './Components/ContextMenu/ContextMenu.jsx';\nimport Dialogs from './Components/Dialogs/Dialogs.jsx';\n\nimport { MuiThemeProvider as MaterialUI, createMuiTheme } from '@material-ui/core/styles';\nimport blue from '@material-ui/core/colors/blue';\nimport { connect } from 'react-redux';\nimport { setContextMenuVisible, refreshFileList } from './Actions/Actions.js';\nimport DynamicSnackbar from './Components/Notification/DynamicSnackbar.jsx'; \n\nconst theme = createMuiTheme({\n    palette: {\n        primary: blue,\n    },\n    typography: {\n        useNextVariants: true,\n    }\n});\n\nclass App extends Component {\n\n    componentDidMount() {\n        this.props.init();\n    };\n\n    render() {\n        return (\n            <MaterialUI theme={theme}>\n                <div onClick={this.props.handleHideContextMenu} onContextMenu={this.props.handleHideContextMenu}>\n                    <Navbar />\n                    <FileList />\n                    <ContextMenu />\n                    <DynamicSnackbar />\n                    <Dialogs />\n                </div>\n            </MaterialUI>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        init: () => {\n            // dispatch(refreshFileList());\n        },\n\n        handleHideContextMenu: (event) => {\n            if (! (event.target.tagName === 'INPUT' || /label/i.test(event.target.className))) {\n                event.preventDefault();\n            }\n            dispatch(setContextMenuVisible(false));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport thunk from 'redux-thunk';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux'\nimport MainReducer from './Reducers/MainReducer'\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\nimport './index.css';\n\nconst store = createStore(MainReducer, applyMiddleware(thunk));\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>, \n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}