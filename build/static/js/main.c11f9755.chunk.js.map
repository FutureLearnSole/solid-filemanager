{"version":3,"sources":["../node_modules/n3/lib sync /^/.//N3.*$","Reducers/MainReducer.js","serviceWorker.js","config.js","Api/Api.js","Api/folderUtils.js","Api/ApiHandler.js","Actions/Actions.js","Components/File/File.jsx","Components/FileList/FileListEmptyMessage.jsx","Components/Loader/Loader.jsx","Components/FileList/FileList.jsx","Components/ContextMenu/ContextMenuActions/CreateFolderAction.jsx","Components/ContextMenu/ContextMenuActions/UploadFileAction.jsx","Components/Navbar/ThreeDotsMenu.jsx","Components/Breadcrumb/BreadcrumbText.jsx","Components/Navbar/Navbar.jsx","Components/ContextMenu/ContextMenuActions/OpenAction.jsx","Components/ContextMenu/ContextMenuActions/RemoveAction.jsx","Components/ContextMenu/ContextMenuActions/MoveAction.jsx","Components/ContextMenu/ContextMenuActions/CopyAction.jsx","Components/ContextMenu/ContextMenuActions/EditAction.jsx","Components/ContextMenu/ContextMenuActions/RenameAction.jsx","Components/ContextMenu/ContextMenuActions/DownloadAction.jsx","Components/ContextMenu/ContextMenu.jsx","Components/Dialogs/SolidLogin/SolidLogin.jsx","Components/Dialogs/Content/Content.jsx","Components/Dialogs/Edit/Edit.jsx","Components/Dialogs/CreateFolder/CreateFolder.jsx","Components/Dialogs/Rename/Rename.jsx","Components/File/FileSublist/FileSublist.jsx","Components/FileList/FileListSublist/FileListSublist.jsx","Components/Dialogs/Move/Move.jsx","Components/Dialogs/Copy/Copy.jsx","Components/FileUploader/UploadFileList.jsx","Components/FileUploader/FileUploader.jsx","Components/Dialogs/UploadFile/UploadFile.jsx","Components/Dialogs/Dialogs.jsx","Components/Notification/DynamicSnackbar.jsx","App.js","index.js"],"names":["map","./N3Lexer","./N3Lexer.js","./N3Parser","./N3Parser.js","./N3Store","./N3Store.js","./N3StreamParser","./N3StreamParser.js","./N3StreamWriter","./N3StreamWriter.js","./N3Util","./N3Util.js","./N3Writer","./N3Writer.js","webpackContext","req","id","webpackContextResolve","__webpack_require__","e","Error","code","keys","Object","resolve","module","exports","defaultState","path","pathSublist","host","fileList","fileListSublist","fileListFilter","contextMenuVisible","contextMenuPosition","contextMenuPositionElement","selectedFiles","selectedFolderSublist","loading","loadingSublist","errorMsg","visibleDialogSolidLogin","visibleDialogCreateFolder","visibleDialogUploadFile","visibleDialogContent","visibleDialogEdit","visibleDialogMove","visibleDialogCopy","visibleDialogRename","fileContentBlobUrl","fileUploadProgress","fileUploadList","MainReducer","state","arguments","length","undefined","action","type","assign","value","toConsumableArray","concat","sort","a","b","name","toLowerCase","filter","f","i","self","ff","indexOf","find","parseInt","URL","revokeObjectURL","createObjectURL","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","isEditableFilePattern","isImageFilePattern","isExtractableFilePattern","actions","create_folder","move","copy","copy_folder","compress","extract","edit","remove","upload","upload_by_chunks","preview_images","filenames","baseUrl","promises","filename","fileClient","Promise","all","Response","destination","baseNewUrl","folderType","fileType","getFolderItems","graph","subj","each","rdflib","item","newItem","url","folderNode","isAnInstanceOfClass","types","index","getFileType","stats","subjectName","subjectNode","mod","size","mtime","modified","any","getStats","label","decodeURIComponent","replace","messageTranslation","unknown_response","TypeError: Failed to fetch","parseFetchSuccess","response","reject","contentType","headers","get","contentDisp","isJson","test","isTurtle","isAttachment","ok","json","blob","success","data","text","handleFetchError","errorResponse","errJson","JSON","stringify","fixPath","getFileList","solidAuth","API","_ref","folderUtils","getFileBody","renameItem","newFileName","from","to","setTimeout","createFolder","folder","trim","directory","moveItems","uploadFiles","FormData","Array","file","getActionsByMultipleFiles","files","acts","forEach","fileActs","push","compressible","editable","extractable","getActionsByFile","splice","getHumanFileSize","bytes","Math","pow","toFixed","solidLogin","dispatch","getState","setLoading","solidPopupLogin","webId","origin","setVisibleDialogSolidLogin","refreshFileList","r","toString","_callee","session","regenerator_default","wrap","_context","prev","next","sent","popupUri","abrupt","stop","this","setSelectedFiles","APIHandler","join","setFileList","refreshFileListSublist","setLoadingSublist","setSelectedFolderSublist","setFileListSublist","getFileContent","fileName","setFileContent","setVisibleDialogContent","getFileContentForEdit","setVisibleDialogEdit","removeItems","copyItems","_getState11","setVisibleDialogCopy","setSelectedFileFromLastTo","lastFile","_getState12","lastPreviouslySelected","pop","lastPreviouslySelectedIndex","lastSelectedIndex","toAdd","element","initSubList","setPathSublist","resetFileUploader","setFileUploadProgress","setVisibleDialogUploadFile","setFileUploadList","enterToPreviousDirectorySublist","slice","setPath","enterToDirectory","setFileListFilter","search","setContextMenuVisible","visible","setVisibleDialogCreateFolder","setVisibleDialogRename","setVisibleDialogMove","percentage","File","_this$props","props","isSelected","handleClick","handleDoubleClick","handleContextMenu","avatarStyle","backgroundColor","blue","realSize","react_default","createElement","className","onClick","onDoubleClick","onContextMenu","data-selected","ListItem_default","ListItemAvatar_default","Avatar_default","style","Folder_default","InsertDriveFile_default","ListItemText_default","primary","secondary","Component","connect","ownProps","filePath","event","preventDefault","stopPropagation","x","clientX","touches","pageX","y","clientY","pageY","shiftKey","setContextMenuPosition","ctrlKey","FileListEmptyMessage","withStyles","theme","progress","margin","spacing","unit","classes","Grid_default","container","justify","CircularProgress_default","color","FileList","fileListComponent","key","Components_File_File","Loader_Loader","Components_FileList_FileListEmptyMessage","toLocaleLowerCase","callback","handleClose","MenuItem_default","ListItemIcon_default","CreateNewFolder_default","Typography_default","variant","CloudUpload_default","ThreeDotsMenu","anchorEl","_this","setState","currentTarget","marginLeft","IconButton_default","aria-label","aria-owns","aria-haspopup","MoreVert_default","Menu_default","open","onClose","ContextMenuActions_CreateFolderAction","ContextMenuActions_UploadFileAction","React","BreadcrumbText","handleClickPath","rootTitle","handleGoBack","canGoBack","separator","rootPath","data-index","lastPath","directories","dir","Button_default","display","KeyboardArrowLeft_default","paths","defineProperty","breakpoints","up","root","width","marginBottom","grow","flexGrow","menuButton","marginRight","title","position","borderRadius","shape","fade","palette","common","white","&:hover","searchIcon","height","pointerEvents","alignItems","justifyContent","inputRoot","inputInput","paddingTop","paddingRight","paddingBottom","paddingLeft","transition","transitions","create","&:focus","handleChange","newPath","enterToPreviousDirectoryByIndex","AppBar_default","Toolbar_default","noWrap","Components_Breadcrumb_BreadcrumbText","Search_default","InputBase_default","placeholder","onChange","input","Navbar_ThreeDotsMenu","OpenInBrowser_default","Delete_default","HowToVote_default","FileCopy_default","WrapText_default","blobUrl","tempLink","document","href","setAttribute","click","CloudDownload_default","ContextMenu","actionsComp","act","component","ContextMenuActions_OpenAction","EditAction","ContextMenuActions_CopyAction","ContextMenuActions_MoveAction","RenameAction","ContextMenuActions_DownloadAction","ContextMenuActions_RemoveAction","anchorReference","anchorPosition","top","left","transformOrigin","vertical","horizontal","PaperProps","FormDialog","handleLogin","Dialog_default","aria-labelledby","fullWidth","maxWidth","DialogTitle_default","DialogContent_default","DialogActions_default","lastBlobUrl","content","src","alt","handleOpen","_this2","fetch","t","handleSave","textArea","minHeight","defaultValue","DialogContentText_default","TextField_default","autoFocus","createFolderName","folderName","form","querySelector","realName","bind","newName","FileSublist","FileListSublist","File_FileSublist_FileSublist","selectedPath","canMove","FileList_FileListSublist_FileListSublist","disabled","_getState10","canCopy","UploadFileList","list","dense","List_default","FileUploader","refs","inputfile","handleReset","handleSelectedFiles","styles","inputreset","htmlFor","ref","multiple","FileUploader_UploadFileList","handleUpload","canUpload","Components_FileUploader_FileUploader","LinearProgress_default","target","Dialogs","SolidLogin","Content","Edit","CreateFolder","Move","Copy","Rename","UploadFile","DynamicSnackbar","notificationDuration","Snackbar_default","anchorOrigin","autoHideDuration","ContentProps","aria-describedby","message","close","Close_default","padding","createMuiTheme","typography","useNextVariants","App","init","core_styles","handleHideContextMenu","Navbar","Components_FileList_FileList","Components_ContextMenu_ContextMenu","Notification_DynamicSnackbar","Dialogs_Dialogs","tagName","store","createStore","applyMiddleware","thunk","ReactDOM","render","react_redux_es","src_App","getElementById","process","addEventListener","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.c11f9755.chunk.js","sourcesContent":["var map = {\n\t\"./N3Lexer\": 110,\n\t\"./N3Lexer.js\": 110,\n\t\"./N3Parser\": 111,\n\t\"./N3Parser.js\": 111,\n\t\"./N3Store\": 146,\n\t\"./N3Store.js\": 146,\n\t\"./N3StreamParser\": 147,\n\t\"./N3StreamParser.js\": 147,\n\t\"./N3StreamWriter\": 157,\n\t\"./N3StreamWriter.js\": 157,\n\t\"./N3Util\": 112,\n\t\"./N3Util.js\": 112,\n\t\"./N3Writer\": 116,\n\t\"./N3Writer.js\": 116\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 238;","export const defaultState = {\n    path: [],\n    pathSublist: [],\n    host: null,\n    fileList: [],\n    fileListSublist: [],\n    fileListFilter: null,\n    contextMenuVisible: null,\n    contextMenuPosition: [],\n    contextMenuPositionElement: null,\n    selectedFiles: [],\n    selectedFolderSublist: null,\n    loading: false,\n    loadingSublist: false,\n    errorMsg: null,\n    visibleDialogSolidLogin: true,\n    visibleDialogCreateFolder: false,\n    visibleDialogUploadFile: false,\n    visibleDialogContent: false,\n    visibleDialogEdit: false,\n    visibleDialogMove: false,\n    visibleDialogCopy: false,\n    visibleDialogRename: false,\n    fileContentBlobUrl: null,\n    fileUploadProgress: 0,\n    fileUploadList: []\n};\n\n/**\n * Main content reducer\n * @param {Object} state\n * @param {Object} action\n * @returns {Object}\n */\nconst MainReducer = (state = defaultState, action) => {\n    switch (action.type) {\n        case 'SET_PATH':\n            return Object.assign({}, state, {\n                path: action.value\n            });\n        case 'SET_PATH_SUB_LIST':\n            return Object.assign({}, state, {\n                pathSublist: action.value\n            });\n        case 'SET_HOST':\n            return Object.assign({}, state, {\n                host: action.value\n            });\n        case 'ENTER_TO_DIRECTORY':\n            return Object.assign({}, state, {\n                path: [...state.path, action.value]\n            });\n        case 'ENTER_TO_DIRECTORY_SUB_LIST':\n            return Object.assign({}, state, {\n                pathSublist: [...state.pathSublist, action.value]\n            });\n        case 'SET_FILE_LIST':\n            return Object.assign({}, state, {\n                fileList: action.value.sort((a, b) => a.type < b.type ? -1 : a.name.toLowerCase() > b.name.toLowerCase())\n            });\n        case 'SET_FILE_LIST_SUB_LIST':\n            return Object.assign({}, state, {\n                fileListSublist: action.value.sort((a, b) => a.type < b.type ? -1 : a.name.toLowerCase() > b.name.toLowerCase())\n            });\n        case 'SET_FILE_LIST_FILTER':\n            return Object.assign({}, state, { \n                fileListFilter: action.value\n            });\n        case 'SET_CONTEXT_MENU_VISIBLE':\n            return Object.assign({}, state, { \n                contextMenuVisible: action.value\n            });\n        case 'SET_CONTEXT_MENU_POSITION':\n            return Object.assign({}, state, { \n                contextMenuPosition: action.value\n            });\n        case 'SET_CONTEXT_MENU_POSITION_ELEMENT':\n            return Object.assign({}, state, { \n                contextMenuPositionElement: action.value\n            });\n        case 'SET_SELECTED_FILES':\n            return Object.assign({}, state, {\n                selectedFiles: (action.value).filter((f, i, self) => self.map(ff => ff.name).indexOf(f.name) === i)\n            });\n        case 'SET_SELECTED_FOLDER_SUB_LIST':\n            return Object.assign({}, state, {\n                selectedFolderSublist: action.value\n            });\n\n        case 'TOGGLE_SELECTED_FILE':\n            return Object.assign({}, state, {\n                selectedFiles: state.selectedFiles.find(f => f.name === action.value.name) ?\n                    state.selectedFiles.filter(f => f.name !== action.value.name) :\n                    [...state.selectedFiles, action.value]\n            });\n        case 'SET_FILE_UPLOAD_PROGRESS':\n            return Object.assign({}, state, {\n                fileUploadProgress: parseInt(action.value || 0)\n            });\n        case 'SET_LOADING':\n            return Object.assign({}, state, { \n                loading: action.value\n            });\n        case 'SET_LOADING_SUB_LIST':\n            return Object.assign({}, state, { \n                loadingSublist: action.value\n            });\n        case 'SET_ERROR_MSG':\n            return Object.assign({}, state, { \n                errorMsg: action.value\n            });\n\n        case 'SET_VISIBLE_DIALOG_SOLID_LOGIN':\n            return Object.assign({}, state, { \n                visibleDialogSolidLogin: !!action.value\n            });\n\n        case 'SET_VISIBLE_DIALOG_CREATE_FOLDER':\n            return Object.assign({}, state, { \n                visibleDialogCreateFolder: !!action.value\n            });\n            \n        case 'SET_VISIBLE_DIALOG_UPLOAD_FILE':\n            return Object.assign({}, state, { \n                visibleDialogUploadFile: !!action.value\n            });\n\n        case 'SET_VISIBLE_DIALOG_CONTENT':\n            return Object.assign({}, state, { \n                visibleDialogContent: !!action.value\n            });\n\n        case 'SET_VISIBLE_DIALOG_EDIT':\n            return Object.assign({}, state, { \n                visibleDialogEdit: !!action.value\n            });\n\n        case 'SET_VISIBLE_DIALOG_MOVE':\n            return Object.assign({}, state, { \n                visibleDialogMove: !!action.value\n            });\n        case 'SET_VISIBLE_DIALOG_COPY':\n            return Object.assign({}, state, { \n                visibleDialogCopy: !!action.value\n            });\n        case 'SET_VISIBLE_DIALOG_RENAME':\n            return Object.assign({}, state, { \n                visibleDialogRename: !!action.value\n            });\n        case 'SET_FILE_UPLOAD_LIST':\n            return Object.assign({}, state, {\n                fileUploadList: action.value\n            });\n\n        case 'SET_FILE_CONTENT':\n            /**\n             * Removing old blob url\n             */\n            state.fileContentBlobUrl && URL.revokeObjectURL(state.fileContentBlobUrl);\n            return Object.assign({}, state, { \n                fileContentBlobUrl: action.value ? URL.createObjectURL(action.value) : null\n            });\n\n        default:\n            return state;\n    }\n};\n\nexport default MainReducer;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export default {\n    host: null,\n\n    isEditableFilePattern: /\\.(txt|diff?|patch|svg|asc|cnf|cfg|conf|html?|cfm|cgi|aspx?|ini|pl|py|md|css|cs|jsx?|jsp|log|htaccess|htpasswd|gitignore|gitattributes|env|json|atom|eml|rss|markdown|sql|xml|xslt?|sh|rb|as|bat|cmd|cob|for|ftn|frm|frx|inc|lisp|scm|coffee|php[3-6]?|java|c|cbl|go|h|scala|vb|tmpl|lock|go|yml|yaml|tsv|lst)$/i,\n    isImageFilePattern: /\\.(jpe?g|gif|bmp|png|svg|tiff?)$/i,\n    isExtractableFilePattern: /\\.(gz|tar|rar|g?zip)$/i,\n\n    actions: {\n        create_folder: true,\n        move: true,\n        copy: true,\n        copy_folder: true,\n        compress: true,\n        extract: true,\n        edit: true,\n        remove: true,\n        upload: true,\n        upload_by_chunks: true,\n        preview_images: true,\n    }\n};\n","import config from './../config.js';\nimport * as solidAuth from 'solid-auth-client';\nimport * as fileClient from 'solid-file-client';\n\n/**\n * Fetch API to list files from directory\n * @param {String} path\n * @returns {Object}\n */\nexport function list(path) {\n    const url = config.host + path;\n    return solidAuth.fetch(url);\n};\n\n/**\n * Fetch API to create a directory\n * @param {String} path\n * @param {String} directory\n * @returns {Object}\n */\nexport function createDirectory(path, directory) {\n    const url = `${config.host}${path}/${directory}`;\n    return fileClient.createFolder(url)\n        .then(() => new Response());\n};\n\n\n/**\n * Fetch API to get file body\n * @param {String} path\n * @returns {Object}\n */\nexport function getFileContent(path) {\n    const url = config.host + path;\n    return solidAuth.fetch(url);\n};\n\n\n/**\n * Fetch API to remove a file or folder\n * @param {String} path\n * @param {Array} filenames\n * @returns {Object}\n */\nexport function remove(path, filenames) {\n    const baseUrl = config.host + path;\n    const promises = filenames.map(filename => fileClient.deleteFile(`${baseUrl}/${filename}`));\n    return Promise.all(promises)\n        .then(() => new Response());\n};\n\n/**\n * Fetch API to move files\n * @param {String} path\n * @param {String} destination\n * @param {Array} filenames\n * @returns {Object}\n */\nexport function move(path, destination, filenames) {\n    return copy(path, destination, filenames)\n        .then(() => remove(path, filenames));\n};\n\n/**\n * Fetch API to rename files\n * @param {String} path\n * @param {Array} filenames\n * @returns {Object}\n */\nexport function rename(path, filename, newFileName) {\n    const from = `${config.host}${path}/${filename}`;\n    const to = `${config.host}${path}/${newFileName}`;\n\n    return fileClient.copyFile(from, to)\n        .then(() => new Promise((resolve) => setTimeout(resolve, 5000)))\n        .then(() => fileClient.deleteFile(from))\n        .then(() => new Response());\n};\n\n/**\n * Fetch API to copy files\n * @param {String} path\n * @param {Array} filenames\n * @param {Boolean} recursive\n * @returns {Object}\n */\nexport function copy(path, destination, filenames) {\n    const baseUrl = config.host + path;\n    const baseNewUrl = config.host + destination;\n\n    const promises = filenames.map(filename => fileClient.copyFile(`${baseUrl}/${filename}`, `${baseNewUrl}/${filename}`));\n    return Promise.all(promises)\n        .then(() => new Response());\n};\n\n/**\n * Fetch API to copy files\n * @param {String} path\n * @param {Object<FileList>} fileList\n * @returns {Object}\n */\nexport function upload(path, fileList, formData = new FormData()) {\n    const baseUrl = config.host + path;\n\n    const promises = Array.from(fileList).map(file => fileClient.updateFile(`${baseUrl}/${file.name}`, file));\n    return Promise.all(promises)\n        .then(() => new Response());\n};\n","// Based on https://github.com/jeff-zucker/solid-file-client/blob/master/src/folderUtils.js\nimport * as rdflib from 'rdflib';\n\nconst folderType = 'dir';\nconst fileType = 'file';\n\nexport function getStats(graph, subjectName) {\n    const subjectNode = rdflib.sym(subjectName);\n    const mod = rdflib.sym('http://purl.org/dc/terms/modified');\n    const size = rdflib.sym('http://www.w3.org/ns/posix/stat#size');\n    const mtime = rdflib.sym('http://www.w3.org/ns/posix/stat#mtime');\n    let modified = graph.any(subjectNode, mod, undefined);\n    if (typeof (modified) === \"undefined\") return false;\n    else modified = modified.value;\n    return {\n        modified: modified,\n        size: graph.any(subjectNode, size, undefined).value,\n        mtime: graph.any(subjectNode, mtime, undefined).value,\n    };\n}\n\n/** A type used internally to indicate we are handling a folder */\n/**\n * @param {rdflib.IndexedFormula} graph a rdflib.graph() database instance\n * @param {string} url location of the folder\n * @returns {string} content mime-type of a file, If it's a folder, return 'folder', 'unknown' for not sure\n */\nexport function getFileType(graph, url) {\n    const folderNode = rdflib.sym(url);\n    const isAnInstanceOfClass = rdflib.sym('http://www.w3.org/1999/02/22-rdf-syntax-ns#type');\n    const types = graph.each(folderNode, isAnInstanceOfClass, undefined);\n    for (const index in types) {\n        const contentType = types[index].value;\n        if (contentType.match('ldp#BasicContainer'))\n            return folderType;\n        else\n            return fileType;\n    }\n    return 'unknown';\n}\nexport function getFolderItems(graph, subj) {\n    const items = graph.each(\n        rdflib.sym(subj),\n        rdflib.sym('http://www.w3.org/ns/ldp#contains'),\n        undefined\n    ).map(item => {\n        let newItem = {}\n        newItem.type = getFileType(graph, item.value)\n        const stats = getStats(graph, item.value)\n        newItem.modified = stats.modified\n        newItem.size = stats.size\n        newItem.mtime = stats.mtime\n        newItem.label = decodeURIComponent(item.value).replace(/.*\\//, '')\n\n        if (newItem.type === folderType) {\n            item.value = item.value.replace(/[/]+/g, '/');\n            item.value = item.value.replace(/https:/, 'https:/');\n            const name = item.value.replace(/\\/$/, '')\n            newItem.name = name.replace(/.*\\//, '')\n            newItem.url = item.value\n        }\n        else {\n            newItem.url = item.value\n            newItem.name = item.value.replace(/.*\\//, '')\n        }\n\n        return newItem;\n    });\n\n    return items;\n}","import * as API from './Api.js';\nimport config from './../config.js';\nimport * as rdflib from 'rdflib';\nimport * as folderUtils from './folderUtils.js';\n\nconst messageTranslation = {\n    'unknown_response': 'Unknown error response from connector',\n    'TypeError: Failed to fetch': 'Cannot get a response from connector.',\n};\n\nconst parseFetchSuccess = (response) => {\n    return new Promise((resolve, reject) => {\n        const contentType = response.headers.get('content-type');\n        const contentDisp = response.headers.get('content-disposition');\n        const isJson = /(application|text)\\/json/.test(contentType);\n        const isTurtle = /text\\/turtle/.test(contentType);\n        const isAttachment = /attachment/.test(contentDisp);\n\n        if (!response.ok) {\n            if (isJson) {\n                throw response.json();\n            }\n            throw Error(messageTranslation['unknown_response']);\n        }\n        else if (isAttachment) {\n            response.blob().then(blob => {\n                resolve(blob);\n            });\n        }\n        else if (isJson) {\n            response.json().then(json => {\n                if (!json.success) {\n                    throw new Error();\n                }\n                resolve(json.data);\n            });\n        }\n        else if (isTurtle) {\n            const graph = rdflib.graph();\n\n            response.text()\n                .then(text => {\n                    rdflib.parse(text, graph, response.url);\n                    resolve({\n                        graph,\n                        url: response.url,\n                        text\n                    });\n                });\n        }\n        else {\n            resolve(response);\n        }\n    });\n};\n\nconst handleFetchError = (errorResponse) => {\n    return new Promise((resolve, reject) => {\n        // is thrown json\n        if (errorResponse && errorResponse.then) {\n            errorResponse.then(errJson => {\n                return reject(errJson.errorMsg || JSON.stringify(errJson));\n            });\n        } else {\n            return reject(messageTranslation[errorResponse] || errorResponse);\n        }\n    });\n}\n\n/**\n * Clean path string removing double slashes and prepending a slash\n * @param {String} path\n * @returns {String}\n */\nconst fixPath = (path) => {\n    return ('/' + path).replace(/\\/\\//g, '/');\n};\n\n/**\n * Wrap API response for retrive file liest\n * @param {String} path\n * @returns {Object}\n */\nexport const getFileList = (path) => {\n    path = fixPath(path);\n    return API.list(path)\n        .then(parseFetchSuccess)\n        .then(({ graph, url }) => folderUtils.getFolderItems(graph, url))\n        .catch(handleFetchError)\n};\n\n/**\n * Wrap API response for retrive file content\n * @param {String} path\n * @returns {Object}\n */\nexport const getFileBody = (path, filename) => {\n    path = fixPath(path + '/' + filename);\n    return API.getFileContent(path)\n        .then(parseFetchSuccess)\n        .catch(handleFetchError)\n};\n\n\n/**\n * Wrap API response for retrive file content\n * @param {String} path\n * @returns {Object}\n */\nexport const renameItem = (path, filename, newFileName) => {\n    path = fixPath(path);\n    return API.rename(path, filename, newFileName)\n        .then(parseFetchSuccess)\n        .catch(handleFetchError)\n};\n\n/**\n * Wrap API response for create folder\n * @param {String} path\n * @param {String} folder\n * @returns {Object}\n */\nexport const createFolder = (path, folder) => {\n    path = fixPath(path);\n    if (!(folder || '').trim()) {\n        return Promise.reject('Invalid folder name');\n    }\n    return API.createDirectory(path, folder)\n        .then(parseFetchSuccess)\n        .catch(handleFetchError)\n};\n\n/**\n * Wrap API response for remove file or folder\n * @param {String} path\n * @param {Array} filenames\n * @returns {Object}\n */\nexport const removeItems = (path, filenames) => {\n    path = fixPath(path);\n    if (!filenames.length) {\n        return Promise.reject('No files to remove');\n    }\n    return API.remove(path, filenames)\n        .then(parseFetchSuccess)\n        .catch(handleFetchError)\n};\n\n/**\n * Wrap API response for move file or folder\n * @param {String} path\n * @param {String} destination\n * @param {Array} filenames\n * @returns {Object}\n */\nexport const moveItems = (path, destination, filenames) => {\n    path = fixPath(path);\n    destination = fixPath(destination);\n    if (!filenames.length) {\n        return Promise.reject('No files to move');\n    }\n    return API.move(path, destination, filenames)\n        .then(parseFetchSuccess)\n        .catch(handleFetchError)\n};\n\n/**\n * Wrap API response for copy file or folder\n * @param {String} path\n * @param {String} destination\n * @param {Array} filenames\n * @returns {Object}\n */\nexport const copyItems = (path, destination, filenames) => {\n    path = fixPath(path);\n    destination = fixPath(destination);\n    if (!filenames.length) {\n        return Promise.reject('No files to copy');\n    }\n    return API.copy(path, destination, filenames)\n        .then(parseFetchSuccess)\n        .catch(handleFetchError)\n};\n\n/**\n * Wrap API response for upload files\n * @param {String} path\n * @param {Object<FileList>} fileList\n * @returns {Object}\n */\nexport const uploadFiles = (path, fileList) => {\n    path = fixPath(path);\n\n    if (!fileList.length) {\n        return Promise.reject('No files to upload');\n    }\n    return API.upload(path, fileList)\n        .then(parseFetchSuccess)\n        .catch(handleFetchError)\n};\n\n/**\n * Calculate available actions for a file\n * @param {Object} file\n * @returns {Array<String>}\n */\nexport const getActionsByFile = (file, acts = []) => {\n    if (file.type === 'dir') {\n        acts.push('open');\n\n        typeof file.compressible !== 'undefined' ?\n            file.compressible && acts.push('compress') :\n            acts.push('compress');\n    }\n\n    if (file.type === 'file') {\n        acts.push('download');\n        config.isImageFilePattern.test(file.name) && acts.push('open');\n\n        typeof file.editable !== 'undefined' ?\n            file.editable && acts.push('edit') :\n            config.isEditableFilePattern.test(file.name) && acts.push('edit');\n\n        typeof file.extractable !== 'undefined' ?\n            file.extractable && acts.push('extract') :\n            config.isExtractableFilePattern.test(file.name) && acts.push('extract');\n\n        acts.push('copy');\n    }\n\n    acts.push('move');\n    acts.push('rename');\n    acts.push('perms');\n    acts.push('remove');\n\n    return acts;\n}\n\n/**\n * Calculate available actions for selected files, excluding non coincidences\n * @param {Array<Object>} files\n * @returns {Array<String>}\n */\nexport const getActionsByMultipleFiles = (files, acts = []) => {\n    files.forEach(file => {\n        const fileActs = getActionsByFile(file);\n        // intersects previous actions with the following to leave only coincidences\n        acts = acts.length ? acts.filter(value => -1 !== fileActs.indexOf(value)) : fileActs;\n    });\n\n    if (files.length > 1) {\n        acts.splice(acts.indexOf('open'), acts.indexOf('open') >= 0);\n        acts.splice(acts.indexOf('edit'), acts.indexOf('edit') >= 0);\n        acts.splice(acts.indexOf('compress'), acts.indexOf('compress') >= 0);\n        acts.splice(acts.indexOf('download'), acts.indexOf('download') >= 0);\n        acts.splice(acts.indexOf('rename'), acts.indexOf('rename') >= 0);\n        acts.push('compress');\n    }\n    return acts;\n}\n\n/**\n * Calculate file size by bytes in human readable format\n * @param {Number} bytes\n * @returns {String}\n */\nexport const getHumanFileSize = (bytes) => {\n    const e = (Math.log(bytes) / Math.log(1e3)) | 0;\n    return +(bytes / Math.pow(1e3, e)).toFixed(2) + ' ' + ('kMGTPEZY'[e - 1] || '') + 'B';\n};","import * as APIHandler from '../Api/ApiHandler.js';\nimport * as solidAuth from 'solid-auth-client';\nimport config from '../config.js';\n\n/**\n * Request API to get file list for the selected path then refresh UI\n * @returns {Function}\n */\nexport const solidLogin = () => (dispatch, getState) => {\n    dispatch(setLoading(true));\n\n    solidPopupLogin().then(webId => {\n        const origin = (new URL(webId)).origin;\n        config.host = origin;\n        dispatch(setVisibleDialogSolidLogin(false));\n        dispatch(refreshFileList());\n        dispatch(setLoading(false));\n    }).catch(r => {\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoading(false));\n    });\n};\n\nasync function solidPopupLogin() {\n    let session = await solidAuth.currentSession();\n    if (!session) {\n        let popupUri = 'https://solid.community/common/popup.html';\n        session = await solidAuth.popupLogin({ popupUri });\n    }\n    return(session.webId);\n}\n\n\n/**\n * Request API to get file list for the selected path then refresh UI\n * @returns {Function}\n */\nexport const uploadFiles = (fileList) => (dispatch, getState) => {\n    const { path } = getState();\n    dispatch(setLoading(true));\n    dispatch(setSelectedFiles([]));\n    dispatch(setFileUploadProgress(50));\n\n    APIHandler.uploadFiles(path.join('/'), fileList).then(r => {\n        dispatch(setFileUploadProgress(100));\n        setTimeout(f => {\n            dispatch(resetFileUploader());\n        }, 300);\n        dispatch(refreshFileList());\n    }).catch(r => {\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoading(false));\n    });\n};\n\n/**\n * Request API to get file list for the selected path then refresh UI\n * @returns {Function}\n */\nexport const refreshFileList = () => (dispatch, getState) => {\n    const { path } = getState();\n    dispatch(setLoading(true));\n    dispatch(setSelectedFiles([]));\n\n    APIHandler.getFileList(path.join('/')).then(r => {\n        dispatch(setLoading(false));\n        dispatch(setFileList(r));\n    }).catch(r => {\n        dispatch(setFileList([]));\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoading(false));\n    });\n};\n\n\n/**\n * Request API to get file list for the selected path then refresh UI\n * @returns {Function}\n */\nexport const refreshFileListSublist = () => (dispatch, getState) => {\n    const { pathSublist } = getState();\n    dispatch(setLoadingSublist(true));\n    dispatch(setSelectedFolderSublist(null));\n\n    APIHandler.getFileList(pathSublist.join('/')).then(r => {\n        dispatch(setLoadingSublist(false));\n        dispatch(setFileListSublist(r));\n    }).catch(r => {\n        dispatch(setFileListSublist([]));\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoadingSublist(false));\n    });\n};\n\n\n/**\n * Request API to get file content then dispatch defined events\n * @param {String} fileName\n * @returns {Function}\n */\nexport const getFileContent = (fileName) => (dispatch, getState) => {\n    const { path } = getState();\n\n    dispatch(setLoading(true));\n    dispatch(setFileContent(null));\n    dispatch(setVisibleDialogContent(true));\n    APIHandler.getFileBody(path.join('/'), fileName).then(blob => {\n        dispatch(setFileContent(blob));\n        dispatch(setLoading(false));\n    }).catch(r => {\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoading(false));\n    });\n};\n\n/**\n * Request API to rename file then dispatch defined events\n * @param {String} fileName\n * @returns {Function}\n */\nexport const renameItem = (fileName, newFileName) => (dispatch, getState) => {\n    const { path } = getState();\n    dispatch(setLoading(true));\n    APIHandler.renameItem(path.join('/'), fileName, newFileName).then(blob => {\n        dispatch(setVisibleDialogRename(false));\n        dispatch(setLoading(false));\n        dispatch(refreshFileList());\n    }).catch(r => {\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoading(false));\n    });\n};\n\n/**\n * Request API to get download file then dispatch defined events\n * @param {String} fileName\n * @returns {Function}\n */\nexport const downloadFile = (fileName) => (dispatch, getState) => {\n    const { path } = getState();\n    dispatch(setLoading(true));\n    APIHandler.getFileBody(path.join('/'), fileName).then(blob => {\n        // TODO workaround large files disables ui for long time\n        const blobUrl = window.URL.createObjectURL(blob);\n        let tempLink = window.document.createElement('a');\n        tempLink.href = blobUrl;\n        tempLink.setAttribute('download', fileName);\n        tempLink.click();\n        window.URL.revokeObjectURL(blobUrl);\n        dispatch(setLoading(false));\n    }).catch(r => {\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoading(false));\n    });\n};\n\n/**\n * Request API to get file content then dispatch defined events\n * @param {String} fileName\n * @returns {Function}\n */\nexport const getFileContentForEdit = (fileName) => (dispatch, getState) => {\n    const { path } = getState();\n    dispatch(setLoading(true));\n    dispatch(setFileContent(null));\n    dispatch(setVisibleDialogEdit(true));\n    APIHandler.getFileBody(path.join('/'), fileName).then(blob => {\n        dispatch(setFileContent(blob));\n        dispatch(setLoading(false));\n    }).catch(r => {\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoading(false));\n    });\n};\n\n\n/**\n * Request API to create a folder then dispatch defined events\n * @param {String} createFolderName\n * @returns {Function}\n */\nexport const createNewFolder = (createFolderName) => (dispatch, getState) => {\n    const { path } = getState();\n    dispatch(setLoading(true));\n\n    APIHandler.createFolder(path.join('/'), createFolderName).then(r => {\n        dispatch(setVisibleDialogCreateFolder(false));\n        dispatch(setLoading(false));\n        dispatch(refreshFileList());\n    }).catch(r => {\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoading(false));\n    });\n};\n\n\n/**\n * Request API to remove an item then dispatch defined events\n * @param {Array} filenames\n * @returns {Function}\n */\nexport const removeItems = (files) => (dispatch, getState) => {\n    const { path } = getState();\n    const filenames = files.map(f => f.name);\n\n    dispatch(setLoading(true));\n    APIHandler.removeItems(path.join('/'), filenames).then(r => {\n        dispatch(setLoading(false));\n        dispatch(refreshFileList());\n    }).catch(r => {\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoading(false));\n    });\n};\n\n\n/**\n * Request API to move an item then dispatch defined events\n * @param {Array} filenames\n * @returns {Function}\n */\nexport const moveItems = (files) => (dispatch, getState) => {\n    const { path, pathSublist, selectedFolderSublist } = getState();\n    const destination = pathSublist.join('/') + '/' + selectedFolderSublist.name;\n    const filenames = files.map(f => f.name);\n\n    dispatch(setLoading(true));\n    APIHandler.moveItems(path.join('/'), destination, filenames).then(r => {\n        dispatch(setLoading(false));\n        dispatch(setVisibleDialogMove(false));\n        dispatch(refreshFileList());\n    }).catch(r => {\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoading(false));\n    });\n};\n\n\n/**\n * Request API to copy an item then dispatch defined events\n * @param {Array} filenames\n * @returns {Function}\n */\nexport const copyItems = (files) => (dispatch, getState) => {\n    const { path, pathSublist, selectedFolderSublist } = getState();\n    const destination = pathSublist.join('/') + '/' + selectedFolderSublist.name;\n    const filenames = files.map(f => f.name);\n\n    dispatch(setLoading(true));\n    APIHandler.copyItems(path.join('/'), destination, filenames).then(r => {\n        dispatch(setLoading(false));\n        dispatch(setVisibleDialogCopy(false));\n        dispatch(refreshFileList());\n    }).catch(r => {\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoading(false));\n    });\n};\n\n/**\n * This handles multiple selection by using shift key\n * @param {Object} lastFile\n * @returns {Function}\n */\nexport const setSelectedFileFromLastTo = (lastFile) => (dispatch, getState) => {\n    const { fileList, selectedFiles } = getState();\n\n    const lastPreviouslySelected = [...selectedFiles].pop();\n    const lastPreviouslySelectedIndex = fileList.indexOf(fileList.find(f => f.name === lastPreviouslySelected.name))\n    const lastSelectedIndex = fileList.indexOf(fileList.find(f => f.name === lastFile.name))\n\n    let toAdd = [];\n    if (lastSelectedIndex > lastPreviouslySelectedIndex) {\n        toAdd = fileList.filter((index, element) => {\n            return fileList.indexOf(index) <= lastSelectedIndex && fileList.indexOf(index) >= lastPreviouslySelectedIndex\n        });\n    } else {\n        toAdd = fileList.filter((index, element) => {\n            return fileList.indexOf(index) >= lastSelectedIndex && fileList.indexOf(index) <= lastPreviouslySelectedIndex\n        });\n    }\n    dispatch(setSelectedFiles([...selectedFiles, ...toAdd]));\n};\n\n\n/**\n * @returns {Function}\n */\nexport const initSubList = () => (dispatch, getState) => {\n    const { path } = getState();\n    dispatch(setSelectedFolderSublist(null));\n    dispatch(setFileListSublist([]));    \n    dispatch(setPathSublist([...path]));\n    dispatch(refreshFileListSublist());\n};\n\nexport const resetFileUploader = () => (dispatch, getState) => {\n    dispatch(setFileUploadProgress(0));\n    dispatch(setVisibleDialogUploadFile(false));\n    dispatch(setFileUploadList([]));\n};\n\nexport const enterToPreviousDirectory = () => (dispatch, getState) => {\n    const { path } = getState();\n    dispatch(setPath(path.slice(0, -1)));\n    dispatch(setFileListFilter(null));\n    dispatch(refreshFileList());\n};\n\nexport const enterToPreviousDirectoryByIndex = (index) => (dispatch, getState) => {\n    const { path } = getState();\n    const newPath = [...path].slice(0, ++index);\n    dispatch(setPath(newPath));\n    dispatch(refreshFileList());\n    dispatch(setFileListFilter(null));\n};\n\nexport const enterToPreviousDirectorySublist = () => (dispatch, getState) => {\n    const { pathSublist } = getState();\n    dispatch(setPathSublist(pathSublist.slice(0, -1)));\n    dispatch(refreshFileListSublist());\n};\n\nexport const setPath = (path) => {\n    return {\n        type: 'SET_PATH',\n        value: path\n    };\n};\n\nexport const setPathSublist = (path) => {\n    return {\n        type: 'SET_PATH_SUB_LIST',\n        value: path\n    };\n};\n\nexport const setHost = (host) => {\n    return {\n        type: 'SET_HOST',\n        value: host\n    };\n};\n\nexport const enterToDirectory = (directory) => (dispatch, getState) => {\n    dispatch({\n        type: 'ENTER_TO_DIRECTORY',\n        value: directory\n    });\n    dispatch(setFileListFilter(null));\n    dispatch(refreshFileList());\n};\n\nexport const enterToDirectorySublist = (directory) => (dispatch, getState) => {\n    dispatch({\n        type: 'ENTER_TO_DIRECTORY_SUB_LIST',\n        value: directory\n    });\n    dispatch(refreshFileListSublist());\n};\n\nexport const setFileList = (fileList) => {\n    return {\n        type: 'SET_FILE_LIST',\n        value: fileList\n    };\n};\n\nexport const setFileListSublist = (fileList) => {\n    return {\n        type: 'SET_FILE_LIST_SUB_LIST',\n        value: fileList\n    };\n};\n\nexport const setSelectedFiles = (files) => {\n    return {\n        type: 'SET_SELECTED_FILES',\n        value: files\n    };\n};\n\nexport const setSelectedFolderSublist = (file) => {\n    return {\n        type: 'SET_SELECTED_FOLDER_SUB_LIST',\n        value: file\n    };\n};\n\nexport const setFileListFilter = (search) => {\n    return {\n        type: 'SET_FILE_LIST_FILTER',\n        value: search\n    };\n};\n\nexport const setContextMenuVisible = (visible) => {\n    return {\n        type: 'SET_CONTEXT_MENU_VISIBLE',\n        value: !!visible\n    };\n};\n\nexport const setContextMenuPosition = (x, y) => {\n    return {\n        type: 'SET_CONTEXT_MENU_POSITION',\n        value: [x, y]\n    };\n};\n\nexport const setContextMenuPositionElement = (element) => {\n    return {\n        type: 'SET_CONTEXT_MENU_POSITION_ELEMENT',\n        value: element\n    };\n};\n\nexport const toggleSelectedFile = (file) => {\n    return {\n        type: 'TOGGLE_SELECTED_FILE',\n        value: file\n    };\n};\n\nexport const rightClickOnFile = (file) => (dispatch, getState) => {\n    const { selectedFiles } = getState();\n    const isSelected = selectedFiles.indexOf(selectedFiles.find(f => f.name === file.name)) !== -1;\n\n    !isSelected && dispatch(setSelectedFiles([file]));\n};\n\nexport const setLoading = (value) => {\n    return {\n        type: 'SET_LOADING',\n        value: value\n    };\n};\n\nexport const setLoadingSublist = (value) => {\n    return {\n        type: 'SET_LOADING_SUB_LIST',\n        value: value\n    };\n};\n\nexport const setVisibleDialogSolidLogin = (visible) => {\n    return {\n        type: 'SET_VISIBLE_DIALOG_SOLID_LOGIN',\n        value: !!visible\n    };\n};\n\nexport const setVisibleDialogCreateFolder = (visible) => {\n    return {\n        type: 'SET_VISIBLE_DIALOG_CREATE_FOLDER',\n        value: !!visible\n    };\n};\n\nexport const setVisibleDialogUploadFile = (visible) => {\n    return {\n        type: 'SET_VISIBLE_DIALOG_UPLOAD_FILE',\n        value: !!visible\n    };\n};\n\nexport const setVisibleDialogRename = (visible) => {\n    return {\n        type: 'SET_VISIBLE_DIALOG_RENAME',\n        value: !!visible\n    };\n};\n\nexport const setVisibleDialogMove = (visible) => {\n    return {\n        type: 'SET_VISIBLE_DIALOG_MOVE',\n        value: !!visible\n    };\n};\n\nexport const setVisibleDialogCopy = (visible) => {\n    return {\n        type: 'SET_VISIBLE_DIALOG_COPY',\n        value: !!visible\n    };\n};\n\nexport const setVisibleDialogContent = (visible) => {\n    return {\n        type: 'SET_VISIBLE_DIALOG_CONTENT',\n        value: !!visible\n    };\n};\n\nexport const setVisibleDialogEdit = (visible) => {\n    return {\n        type: 'SET_VISIBLE_DIALOG_EDIT',\n        value: !!visible\n    };\n};\n\nexport const setFileContent = (blob) => {\n   return {\n        type: 'SET_FILE_CONTENT',\n        value: blob\n    };\n};\n\nexport const setFileUploadProgress = (percentage) => {\n   return {\n        type: 'SET_FILE_UPLOAD_PROGRESS',\n        value: percentage\n    };\n};\n\nexport const setFileUploadList = (files) => {\n   return {\n        type: 'SET_FILE_UPLOAD_LIST',\n        value: files\n    };\n};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport {\n    enterToDirectory, setContextMenuVisible, toggleSelectedFile, setContextMenuPosition,\n    setSelectedFileFromLastTo, getFileContent, getFileContentForEdit, \n    rightClickOnFile, setSelectedFiles\n} from '../../Actions/Actions.js';\nimport './File.css';\n\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport FolderIcon from '@material-ui/icons/Folder';\nimport FileIcon from '@material-ui/icons/InsertDriveFile';\nimport blue from '@material-ui/core/colors/blue';\nimport config from '../../config.js';\nimport { getHumanFileSize } from '../../Api/ApiHandler';\n\nclass File extends Component {\n    render() {\n        const { isSelected, type, name, size, handleClick, handleDoubleClick, handleContextMenu } = this.props;\n        const avatarStyle = {\n            backgroundColor: isSelected ? blue['A200'] : null\n        };\n        const realSize = typeof size !== 'undefined' && type !== 'dir' ? getHumanFileSize(size) : null;\n        return (\n            <div className=\"File\" onClick={handleClick} onDoubleClick={handleDoubleClick} onContextMenu={handleContextMenu} data-selected={isSelected}>\n                <ListItem>\n                    <ListItemAvatar>\n                        <Avatar style={avatarStyle}>\n                            { type === 'dir' ? <FolderIcon /> : <FileIcon />}\n                        </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText className=\"filename\" primary={name} secondary={realSize} />\n                </ListItem>\n            </div>\n        );\n    }\n}\n\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        filePath: [...state.path, ownProps.name],\n        isSelected: !!state.selectedFiles.find(f => f.name === ownProps.name)\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        /**\n         * @param {Object} event\n         * @returns {undefined}\n         */\n        handleDoubleClick: (event) => {\n            if (ownProps.type === 'file') {\n                if (config.isEditableFilePattern.test(ownProps.name) || ownProps.editable) {\n                    dispatch(getFileContentForEdit(ownProps.name));\n                } else if (config.isImageFilePattern.test(ownProps.name)) {\n                    dispatch(getFileContent(ownProps.name));\n                }\n                return;\n            }\n\n            dispatch(enterToDirectory(ownProps.name));\n        },\n\n        /**\n         * @param {Object} event\n         * @returns {undefined}\n         */\n        handleContextMenu: (event) => {\n            event.preventDefault();\n            event.stopPropagation();\n\n            const x = event.clientX || (event.touches && event.touches[0].pageX);\n            const y = event.clientY || (event.touches && event.touches[0].pageY);\n\n            if (event.shiftKey) {\n                dispatch(setSelectedFileFromLastTo(ownProps));\n            } else {\n                dispatch(rightClickOnFile(ownProps));\n            }\n            \n            dispatch(setContextMenuVisible(true));\n            dispatch(setContextMenuPosition(x, y));\n        },\n\n        /**\n         * @param {Object} event\n         * @returns {undefined}\n         */\n        handleClick: (event) => {\n            event.stopPropagation();\n\n            if (event.ctrlKey) {\n                dispatch(toggleSelectedFile(ownProps));\n            } else if (event.shiftKey) {\n                dispatch(setSelectedFileFromLastTo(ownProps));\n            } else {\n                dispatch(setSelectedFiles([ownProps]));\n            }\n        }\n    };\n};\n\nFile.propTypes = {\n    name: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    size: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number\n    ]),\n    editable: PropTypes.oneOfType([\n        PropTypes.bool, PropTypes.number\n    ])\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(File);\n\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './FileListEmptyMessage.css';\n\nclass FileListEmptyMessage extends Component {\n    render() {\n        return (\n            <div className=\"FileListEmptyMessage\">\n                No files in this folder\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n    };\n};\n\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FileListEmptyMessage);\n\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Grid from '@material-ui/core/Grid';\n\nconst styles = theme => ({\n  progress: {\n    margin: theme.spacing.unit * 10,\n  },\n});\n\nfunction Loader(props) {\n    const { classes } = props;\n    return (\n        <Grid container justify=\"center\">\n            <CircularProgress className={classes.progress} color=\"secondary\" />\n        </Grid>\n    );\n}\n\nLoader.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Loader);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport File from '../File/File.jsx'; \nimport FileListEmptyMessage from './FileListEmptyMessage';\nimport Loader from '../Loader/Loader.jsx'; \nimport './FileList.css';\n\nclass FileList extends Component {\n    render() {\n        const { fileList, loading } = this.props;\n        \n        const fileListComponent = fileList.map((file, key) => {\n            return <File type={file.type} name={file.name} editable={file.editable} size={file.size} key={key} />\n        });\n\n        return <div className=\"FileList\">\n            { loading ? \n                <Loader /> : \n                fileListComponent.length ? fileListComponent : <FileListEmptyMessage />\n            }\n        </div>\n    }\n}\n\n\nconst mapStateToProps = (state) => {\n    const filteredList = state.fileList.filter(\n        file => state.fileListFilter ? file.name.toLocaleLowerCase().match(state.fileListFilter.toLocaleLowerCase()) : true\n    );\n    return {\n        fileList: filteredList,\n        loading: state.loading\n    };\n};\n\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        handleClick: (event) => {\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FileList);\n\n\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { connect } from 'react-redux';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from '@material-ui/core/Typography';\nimport CreateNewFolderIcon from '@material-ui/icons/CreateNewFolder';\nimport { setVisibleDialogCreateFolder } from '../../../Actions/Actions.js';\n\nfunction CreateFolderAction(props) {\n    const {handleClick, handleClose} = props;\n\n    const handleCloseAfter = (callback) => (event) => {\n        callback();\n        handleClose();\n    };\n\n    return (\n        <MenuItem onClick={handleCloseAfter(handleClick)}>\n            <ListItemIcon>\n                <CreateNewFolderIcon />\n            </ListItemIcon>\n            <Typography variant=\"inherit\">\n                Create folder\n            </Typography>\n        </MenuItem>        \n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClick: (event) => {\n            dispatch(setVisibleDialogCreateFolder(true));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateFolderAction);\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { connect } from 'react-redux';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from '@material-ui/core/Typography';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport { setVisibleDialogUploadFile } from '../../../Actions/Actions.js';\n\nfunction UploadFileAction(props) {\n    const {handleClick, handleClose} = props;\n\n    const handleCloseAfter = (callback) => (event) => {\n        callback();\n        handleClose();\n    };\n\n    return (\n        <MenuItem onClick={handleCloseAfter(handleClick)}>\n            <ListItemIcon>\n                <CloudUploadIcon />\n            </ListItemIcon>\n            <Typography variant=\"inherit\">\n                Upload files\n            </Typography>\n        </MenuItem>        \n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClick: (event) => {\n            dispatch(setVisibleDialogUploadFile(true));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UploadFileAction);\n","import React from 'react';\nimport Menu from '@material-ui/core/Menu';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport { connect } from 'react-redux';\nimport CreateFolderAction from '../ContextMenu/ContextMenuActions/CreateFolderAction.jsx';\nimport UploadFileAction from '../ContextMenu/ContextMenuActions/UploadFileAction.jsx';\n\nclass ThreeDotsMenu extends React.Component {\n  state = {\n    anchorEl: null,\n  };\n\n  handleClick = event => {\n    this.setState({ anchorEl: event.currentTarget });\n  };\n\n  handleClose = () => {\n    this.setState({ anchorEl: null });\n  };\n\n  render() {\n    const { anchorEl } = this.state;\n    return (\n      <div style={{marginLeft:'1em'}}>\n        <IconButton color=\"inherit\" \n          aria-label=\"More\"\n          aria-owns={Boolean(anchorEl) ? 'long-menu' : undefined}\n          aria-haspopup=\"true\"\n          onClick={this.handleClick}>\n          <MoreVertIcon />\n        </IconButton>\n\n        <Menu anchorEl={anchorEl} open={Boolean(anchorEl)} onClose={this.handleClose}>\n          <CreateFolderAction handleClose={this.handleClose} />\n          <UploadFileAction handleClose={this.handleClose} />\n        </Menu>\n      </div>\n    );\n  }\n}\n\n\nconst mapStateToProps = (state) => {\n    return {\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ThreeDotsMenu);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport KeyboardArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft';\nimport Button from '@material-ui/core/Button';\nimport './BreadcrumbText.css';\n\nconst styles = theme => ({\n  lastPath: {\n    display: 'block',\n    [theme.breakpoints.up('sm')]: {\n      display: 'none'\n    }\n  },\n  paths: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    }\n  }\n});\n\nclass BreadcrumbText extends Component {\n\n    render() {\n        const { classes, handleClickPath, path, rootTitle, handleGoBack, canGoBack } = this.props;\n\n        const separator = <span>&gt;</span>;\n        const rootPath = <span onClick={(e) => handleClickPath(e, -1, path)} data-index={0}>\n            { rootTitle } { path.length ? separator : '' }\n        </span>;\n        const lastPath = [...path].pop() || rootTitle;\n\n        const directories = path.map((dir, index) => {\n            return <span key={index} data-index={index} onClick={(e) => handleClickPath(e, index, path)}>\n                <span>{dir}</span> { path.length -1 !== index ? separator : '' }&nbsp;\n            </span>\n        });\n\n        return (\n            <div className=\"BreadcrumbText\">\n                <div className={classes.lastPath}>\n                    <Button onClick={handleGoBack} color=\"inherit\" type=\"button\" style={{display: canGoBack ? 'inline-flex' : 'none'}}>\n                        <KeyboardArrowLeftIcon />\n                    </Button>\n                    {lastPath}\n                </div>\n                <div className={classes.paths}>{rootPath} {directories}</div>\n            </div>\n        );\n    }\n}\n\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n    };\n};\n\nconst mapStateToProps = (state) => {\n    return {\n    };\n};\n\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(BreadcrumbText));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport { fade } from '@material-ui/core/styles/colorManipulator';\nimport { withStyles } from '@material-ui/core/styles';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { connect } from 'react-redux';\nimport { setFileListFilter, enterToPreviousDirectoryByIndex } from '../../Actions/Actions.js';\nimport ThreeDotsMenu from './ThreeDotsMenu.jsx';\nimport BreadcrumbText from '../Breadcrumb/BreadcrumbText.jsx';\nimport { enterToPreviousDirectory } from '../../Actions/Actions.js';\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    marginBottom: '4.3em'\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20,\n  },\n  title: {\n    display: 'block', // was none\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginLeft: 0,\n    width: '100%',\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing.unit,\n      width: 'auto',\n      display: 'block'\n    },\n  },\n  searchIcon: {\n    width: theme.spacing.unit * 9,\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n    width: '100%',\n  },\n  inputInput: {\n    paddingTop: theme.spacing.unit,\n    paddingRight: theme.spacing.unit,\n    paddingBottom: theme.spacing.unit,\n    paddingLeft: theme.spacing.unit * 10,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: 100,\n      '&:focus': {\n        width: 200,\n      },\n    },\n  },\n});\n\nfunction SearchAppBar(props) {\n  const { classes, path, handleClickPath, handleGoBack, canGoBack } = props;\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"fixed\">\n        <Toolbar>\n          <Typography className={classes.title} variant=\"h6\" color=\"inherit\" noWrap>\n            <BreadcrumbText \n                path={path} \n                handleClickPath={handleClickPath} \n                handleGoBack={handleGoBack}\n                canGoBack={canGoBack}\n                rootTitle=\"Solid Filemanager\"\n            />\n          </Typography>\n          <div className={classes.grow} />\n\n          <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <InputBase\n              placeholder=\"Search…\"\n              value={props.value}\n              onChange={props.handleChange}\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n            />\n          </div>\n          <ThreeDotsMenu />\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\nSearchAppBar.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\n\nconst mapStateToProps = (state) => {\n    return {\n        value: state.fileListFilter || '',\n        path: state.path,\n        canGoBack: state.path.length\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        handleChange: (event) => {\n            dispatch(setFileListFilter(event.currentTarget.value));\n        },\n        handleGoBack: (event) => {\n            dispatch(enterToPreviousDirectory());\n        },\n        /**\n         * @param {Object} event\n         * @param {Number} index\n         * @param {Array} path\n         * @returns {undefined}\n         */        \n        handleClickPath: (event, index) => {\n            dispatch(enterToPreviousDirectoryByIndex(index));\n            event.preventDefault();\n        }\n    };\n};\n\n\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(SearchAppBar));\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { connect } from 'react-redux';\nimport { getFileContent, enterToDirectory } from '../../../Actions/Actions.js';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from '@material-ui/core/Typography';\nimport OpenInBrowserIcon from '@material-ui/icons/OpenInBrowser';\n\nfunction OpenAction(props) {\n    const {handleClick, selectedFiles} = props;\n    return (\n        <MenuItem onClick={(e) => handleClick(e, selectedFiles)}>\n            <ListItemIcon>\n                <OpenInBrowserIcon />\n            </ListItemIcon>\n            <Typography variant=\"inherit\">\n                Open\n            </Typography>\n        </MenuItem>        \n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        selectedFiles: state.selectedFiles\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClick: (event, selectedFiles) => {\n            if (selectedFiles[0].type === 'dir') {\n                dispatch(enterToDirectory(selectedFiles[0].name));\n                return;\n            }\n            dispatch(getFileContent(selectedFiles[0].name));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OpenAction);\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { connect } from 'react-redux';\nimport { removeItems } from '../../../Actions/Actions.js';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from '@material-ui/core/Typography';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nfunction RemoveAction(props) {\n    const {handleClick, selectedFiles} = props;\n    return (\n        <MenuItem onClick={(e) => handleClick(e, selectedFiles)}>\n            <ListItemIcon>\n                <DeleteIcon />\n            </ListItemIcon>\n            <Typography variant=\"inherit\">\n                Remove\n            </Typography>\n        </MenuItem>        \n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        selectedFiles: state.selectedFiles\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClick: (event, selectedFiles) => {\n            dispatch(removeItems(selectedFiles));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RemoveAction);\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { connect } from 'react-redux';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from '@material-ui/core/Typography';\nimport HowToVoteIcon from '@material-ui/icons/HowToVote';\nimport { initSubList, setVisibleDialogMove } from '../../../Actions/Actions.js';\n\nfunction MoveAction(props) {\n    const {handleClick, selectedFiles} = props;\n\n    return (\n        <MenuItem onClick={(e) => handleClick(e, selectedFiles)}>\n            <ListItemIcon>\n                <HowToVoteIcon />\n            </ListItemIcon>\n            <Typography variant=\"inherit\">\n                Move\n            </Typography>\n        </MenuItem>        \n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        selectedFiles: state.selectedFiles\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClick: (event, selectedFiles) => {\n            dispatch(initSubList());\n            dispatch(setVisibleDialogMove(true));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MoveAction);\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { connect } from 'react-redux';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from '@material-ui/core/Typography';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport { initSubList, setVisibleDialogCopy } from '../../../Actions/Actions.js';\n\nfunction CopyAction(props) {\n    const {handleClick, selectedFiles} = props;\n\n    return (\n        <MenuItem onClick={(e) => handleClick(e, selectedFiles)}>\n            <ListItemIcon>\n                <FileCopyIcon />\n            </ListItemIcon>\n            <Typography variant=\"inherit\">\n                Copy\n            </Typography>\n        </MenuItem>        \n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        selectedFiles: state.selectedFiles\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClick: (event, selectedFiles) => {\n            dispatch(initSubList());\n            dispatch(setVisibleDialogCopy(true));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CopyAction);\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { connect } from 'react-redux';\nimport { getFileContentForEdit } from '../../../Actions/Actions.js';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from '@material-ui/core/Typography';\nimport OpenInBrowserIcon from '@material-ui/icons/OpenInBrowser';\n\nfunction OpenAction(props) {\n    const {handleClick, selectedFiles} = props;\n    return (\n        <MenuItem onClick={(e) => handleClick(e, selectedFiles)}>\n            <ListItemIcon>\n                <OpenInBrowserIcon />\n            </ListItemIcon>\n            <Typography variant=\"inherit\">\n                Edit\n            </Typography>\n        </MenuItem>        \n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        selectedFiles: state.selectedFiles\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClick: (event, selectedFiles) => {\n            dispatch(getFileContentForEdit(selectedFiles[0].name));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OpenAction);\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { connect } from 'react-redux';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from '@material-ui/core/Typography';\nimport WrapTextIcon from '@material-ui/icons/WrapText';\nimport { setVisibleDialogRename } from '../../../Actions/Actions.js';\n\nfunction MoveAction(props) {\n    const {handleClick, selectedFiles} = props;\n\n    return (\n        <MenuItem onClick={(e) => handleClick(e, selectedFiles)}>\n            <ListItemIcon>\n                <WrapTextIcon />\n            </ListItemIcon>\n            <Typography variant=\"inherit\">\n                Rename\n            </Typography>\n        </MenuItem>        \n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        selectedFiles: state.selectedFiles\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClick: (event, selectedFiles) => {\n            dispatch(setVisibleDialogRename(true));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MoveAction);\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { connect } from 'react-redux';\nimport { downloadFile } from '../../../Actions/Actions.js';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from '@material-ui/core/Typography';\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\n\nfunction DownloadAction(props) {\n    const {handleClick, selectedFiles} = props;\n    return (\n        <MenuItem onClick={(e) => handleClick(e, selectedFiles)}>\n            <ListItemIcon>\n                <CloudDownloadIcon   />\n            </ListItemIcon>\n            <Typography variant=\"inherit\">\n                Download\n            </Typography>\n        </MenuItem>        \n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        selectedFiles: state.selectedFiles\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClick: (event, selectedFiles) => {\n            dispatch(downloadFile(selectedFiles[0].name));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DownloadAction);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './ContextMenu.css';\nimport Menu from '@material-ui/core/Menu';\nimport { getActionsByMultipleFiles } from '../../Api/ApiHandler.js';\nimport OpenAction from './ContextMenuActions/OpenAction.jsx';\nimport RemoveAction from './ContextMenuActions/RemoveAction.jsx';\nimport MoveAction from './ContextMenuActions/MoveAction.jsx';\nimport CopyAction from './ContextMenuActions/CopyAction.jsx';\nimport EditAction from './ContextMenuActions/EditAction.jsx';\nimport RenameAction from './ContextMenuActions/RenameAction.jsx';\nimport DownloadAction from './ContextMenuActions/DownloadAction.jsx';\n\nclass ContextMenu extends Component {\n\n    render() {\n        const { acts, visible, x, y } = this.props;\n        const actionsComp = acts.map((act, key) => {\n            let component;\n            if (act === 'open') {\n                component = <OpenAction key={key} />;\n            }\n            if (act === 'edit') {\n                component = <EditAction key={key} />;\n            }\n            if (act === 'copy') {\n                component = <CopyAction key={key} />;\n            }            \n            if (act === 'move') {\n                component = <MoveAction key={key} />;\n            }\n            if (act === 'rename') {\n                component = <RenameAction key={key} />;\n            }\n            if (act === 'download') {\n                component = <DownloadAction key={key} />;\n            }\n            if (act === 'remove') {\n                component = <RemoveAction key={key} />;\n            }\n            return component;\n        });\n\n        return (\n            <div> \n                <Menu \n                    anchorReference=\"anchorPosition\"\n                    anchorPosition={{ top: y, left: x }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left',\n                    }}\n                    open={visible} \n                    onClose={ () => {} } \n                    PaperProps={{ style: {width: 170} }}>\n                    { actionsComp }\n                </Menu>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        x: state.contextMenuPosition[0] || 0,\n        y: state.contextMenuPosition[1] || 0,\n        visible: !!state.contextMenuVisible,\n        acts: getActionsByMultipleFiles(state.selectedFiles),\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContextMenu);\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { connect } from 'react-redux';\nimport { solidLogin, setVisibleDialogSolidLogin } from '../../../Actions/Actions.js';\n\nclass FormDialog extends Component {\n\n    render() {\n        const { handleClose, handleLogin, open } = this.props;\n\n        return (\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-solid-login\" fullWidth={true} maxWidth={'sm'}>\n                <form>\n                  <DialogTitle id=\"form-dialog-solid-login\">Login to your Solid pod</DialogTitle>\n                  <DialogContent>\n                    <p>Please login to your solid pod to access this app by clicking the login button below.</p>\n                  </DialogContent>\n                  <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\" type=\"button\">\n                      Cancel\n                    </Button>\n                    <Button color=\"primary\" type=\"submit\" onClick={handleLogin}>\n                      Login\n                    </Button>\n                  </DialogActions>\n                </form>\n            </Dialog>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        //createFolderName: state.createFolderName,\n        open: state.visibleDialogSolidLogin\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClose: event => {\n            dispatch(setVisibleDialogSolidLogin(false));\n        },\n        handleLogin: event => {\n            event.preventDefault();\n            dispatch(solidLogin());\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog);\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { connect } from 'react-redux';\nimport { setVisibleDialogContent } from '../../../Actions/Actions.js';\n\nclass FormDialog extends Component {\n\n    state = {\n        lastBlobUrl: null,\n        content: '...',\n        loading: false\n    };\n\n    componentDidUpdate() {\n        if (this.props.blobUrl !== this.state.lastBlobUrl) {\n            this.setState({\n                lastBlobUrl: this.props.blobUrl\n            });\n            this.setState({\n                loading: true\n            });\n        }\n    }\n\n    render() {\n        const { handleClose, open } = this.props;\n        return (\n          <div style={{marginLeft:'1em'}}>\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-content\" fullWidth={true} maxWidth={'sm'}>\n              <DialogTitle id=\"form-dialog-content\">Viewing file </DialogTitle>\n              <DialogContent>\n                <img src={this.props.blobUrl} alt=\"\" style={{maxWidth: '100%'}}/>\n              </DialogContent>\n              <DialogActions>\n                <Button onClick={handleClose} color=\"primary\" type=\"button\">\n                  Close\n                </Button>\n              </DialogActions>\n            </Dialog>\n          </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        open: state.visibleDialogContent,\n        blobUrl: state.fileContentBlobUrl\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClose: (event) => {\n            dispatch(setVisibleDialogContent(false));\n        },\n        handleOpen: (event) => {\n            dispatch(setVisibleDialogContent(true));\n        },\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog);\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { connect } from 'react-redux';\nimport { setVisibleDialogEdit } from '../../../Actions/Actions.js';\n\nclass FormDialog extends Component {\n\n    state = {\n        lastBlobUrl: null,\n        content: null,\n        loading: false\n    };\n\n    componentDidUpdate() {\n        if (this.props.blobUrl !== this.state.lastBlobUrl) {\n            this.setState({\n                lastBlobUrl: this.props.blobUrl\n            });\n            this.setState({\n                loading: true\n            });\n\n            this.props.blobUrl && fetch(this.props.blobUrl).then(r => {\n                return r.text();\n            }).then(t => {\n                this.setState({\n                    content: t\n                });\n                this.setState({\n                    loading: false\n                });\n            });\n        }\n    }\n\n    render() {\n        const { handleClose, handleSave, open } = this.props;\n        const textAreaStyle = {\n            width: '100%',\n            minHeight: '300px'\n        };\n        const textArea = <textarea style={textAreaStyle} defaultValue={this.state.content || ''} />;\n\n        return (\n          <div>\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-edit\" fullWidth={true} maxWidth={'sm'}>\n              <DialogTitle id=\"form-dialog-edit\">Editing file </DialogTitle>\n              <DialogContent>\n                  <DialogContentText>\n                    { this.state.loading ? 'Loading...' : textArea }\n                  </DialogContentText>\n              </DialogContent>\n              <DialogActions>\n                <Button onClick={handleClose} color=\"primary\" type=\"button\">\n                    Close\n                </Button>\n                <Button color=\"primary\" onClick={handleSave} type=\"submit\">\n                    Update\n                </Button>\n              </DialogActions>\n            </Dialog>\n          </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        open: state.visibleDialogEdit,\n        blobUrl: state.fileContentBlobUrl\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClose: (event) => {\n            dispatch(setVisibleDialogEdit(false));\n        },\n        handleOpen: (event) => {\n            dispatch(setVisibleDialogEdit(true));\n        },\n        handleSave: (event) => {\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog);\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { connect } from 'react-redux';\nimport { createNewFolder, setVisibleDialogCreateFolder } from '../../../Actions/Actions.js';\n\nclass FormDialog extends Component {\n\n    render() {\n        const { handleClose, handleSave, value, open } = this.props;\n\n        return (\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-create-folder\" fullWidth={true} maxWidth={'sm'}>\n                <form>\n                  <DialogTitle id=\"form-dialog-create-folder\">Create folder</DialogTitle>\n                  <DialogContent>\n                    <TextField autoFocus fullWidth margin=\"dense\" label=\"Folder name\" type=\"text\" value={value} />\n                  </DialogContent>\n                  <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\" type=\"button\">\n                      Cancel\n                    </Button>\n                    <Button color=\"primary\" type=\"submit\" onClick={handleSave}>\n                      Save\n                    </Button>\n                  </DialogActions>\n                </form>\n            </Dialog>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        createFolderName: state.createFolderName,\n        open: state.visibleDialogCreateFolder\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClose: event => {\n            dispatch(setVisibleDialogCreateFolder(false));\n        },\n        handleSave: event => {\n            event.preventDefault();\n            const folderName = event.currentTarget.form.querySelector('input').value;\n            dispatch(createNewFolder(folderName));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog);\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { connect } from 'react-redux';\nimport { renameItem, setVisibleDialogRename } from '../../../Actions/Actions.js';\n\nclass FormDialog extends Component {\n\n    state = {\n        value: ''\n    };\n\n    componentWillReceiveProps (props) {\n        this.setState({value: props.realName});\n    }\n\n    handleChange (event) {\n        this.setState({value: event.currentTarget.form.querySelector('input').value});\n    }\n\n    handleSave (event) {\n        this.props.handleSave(event)(this.props.realName, this.state.value);\n    }\n\n    render() {\n        const { value } = this.state;\n        const { handleClose, open } = this.props;\n\n        return (\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-create-folder\" fullWidth={true} maxWidth={'sm'}>\n                <form>\n                  <DialogTitle id=\"form-dialog-create-folder\">Rename</DialogTitle>\n                  <DialogContent>\n                      <p>This function is currently still buggy. File may be deleted by accident.</p>\n                    <TextField autoFocus fullWidth margin=\"dense\" label=\"Item name\" type=\"text\" onChange={this.handleChange.bind(this)} value={value} />\n                  </DialogContent>\n                  <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\" type=\"button\">\n                      Cancel\n                    </Button>\n                    <Button color=\"primary\" type=\"submit\" onClick={this.handleSave.bind(this)}>\n                      Save\n                    </Button>\n                  </DialogActions>\n                </form>\n            </Dialog>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        open: state.visibleDialogRename,\n        realName: state.selectedFiles.length ? state.selectedFiles[0].name : ''\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClose: event => {\n            dispatch(setVisibleDialogRename(false));\n        },\n        handleSave: event => (realName, newName) => {\n            event.preventDefault();\n            dispatch(renameItem(realName, newName));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { \n    setSelectedFolderSublist, enterToDirectorySublist \n} from '../../../Actions/Actions.js';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport FolderIcon from '@material-ui/icons/Folder';\nimport FileIcon from '@material-ui/icons/InsertDriveFile';\nimport blue from '@material-ui/core/colors/blue';\nimport '../File.css';\n\nconst styles = theme => ({\n});\n\n\nclass FileSublist extends Component {\n    render() {\n        const { type, name, handleClick, isSelected, handleDoubleClick } = this.props;\n        const avatarStyle = {\n            backgroundColor: isSelected ? blue['A200'] : null\n        };\n        return (\n            <div className=\"File\" onClick={handleClick} data-selected={isSelected} onDoubleClick={handleDoubleClick}>\n                <ListItem>\n                    <ListItemAvatar>\n                        <Avatar style={avatarStyle}>\n                            { type === 'dir' ? <FolderIcon /> : <FileIcon />}\n                        </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText primary={name} secondary=\"\" />\n                </ListItem>\n            </div>\n        );\n    }\n}\n\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        filePath: [...state.path, ownProps.name],\n        isSelected: state.selectedFolderSublist && (state.selectedFolderSublist.name === ownProps.name)\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        /**\n         * @param {Object} event\n         * @returns {undefined}\n         */\n        handleDoubleClick: (event) => {\n            dispatch(enterToDirectorySublist(ownProps.name));\n            dispatch(setSelectedFolderSublist(null));\n        },\n\n        /**\n         * @param {Object} event\n         * @returns {undefined}\n         */\n        handleClick: (event) => {\n            event.stopPropagation(); \n            dispatch(setSelectedFolderSublist(ownProps));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(FileSublist));\n\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport FileSublist from '../../File//FileSublist/FileSublist.jsx'; \nimport Loader from '../../Loader/Loader.jsx'; \nimport FileListEmptyMessage from '../FileListEmptyMessage';\nimport './FileListSublist.css'; \n\nclass FileListSublist extends Component {\n    render() {\n        const { fileList, loadingSublist } = this.props;\n        \n        const fileListComponent = fileList.map((file, key) => {\n            return <FileSublist type={file.type} name={file.name} key={key} />\n        });\n\n        return <div className=\"FileListSublist\">\n            { loadingSublist ? \n                <Loader /> : \n                fileListComponent.length ? fileListComponent : <FileListEmptyMessage />\n            }\n        </div>\n    }\n}\n\nconst mapStateToProps = (state) => {\n    const filteredList = state.fileListSublist\n        .filter(file => file.type === 'dir')\n        .filter(file => state.path.join('').trim() === state.pathSublist.join('').trim() ? \n            !state.selectedFiles.find(f => f.name === file.name) : true\n        );\n    return {\n        fileList: filteredList,\n        loadingSublist: state.loadingSublist,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FileListSublist);","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { connect } from 'react-redux';\nimport { setVisibleDialogMove, setSelectedFolderSublist, enterToPreviousDirectorySublist, moveItems } from '../../../Actions/Actions.js';\nimport FileListSublist from '../../FileList/FileListSublist/FileListSublist.jsx'; \nimport KeyboardArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft';\n\nclass FormDialog extends Component {\n\n    render() {\n        const { \n            selectedPath, handleClose, handleSave, open, \n            selectedFiles, canGoBack, canMove, handleGoBack \n        } = this.props;\n\n        return (\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-move\" fullWidth={true} maxWidth={'sm'}>\n                <form>\n                    <DialogTitle id=\"form-dialog-move\">\n                        Move files to <small style={{color: 'grey'}}>{ selectedPath.join('/') }</small>\n                    </DialogTitle>\n                    <DialogContent>\n                        <FileListSublist />\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={handleGoBack} color=\"primary\" type=\"button\" disabled={!canGoBack}>\n                            <KeyboardArrowLeftIcon /> Go back directory\n                        </Button>\n\n                        <Button onClick={handleClose} color=\"primary\" type=\"button\">\n                            Cancel\n                        </Button>\n                        <Button color=\"primary\" onClick={(e) => handleSave(e, selectedFiles)} disabled={!canMove} type=\"submit\">\n                            Move\n                        </Button>\n                    </DialogActions>\n                </form>\n            </Dialog>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    // prevent moving to same folder\n    const canMove = state.path.join('') !== state.pathSublist.join('') + (state.selectedFolderSublist ? state.selectedFolderSublist.name : '');\n\n    return {\n        open: state.visibleDialogMove,\n        selectedFolderSublist: state.selectedFolderSublist,\n        selectedPath: state.selectedFolderSublist ? [...state.pathSublist, state.selectedFolderSublist.name] : [],\n        selectedFiles: state.selectedFiles,\n        pathSublist: state.pathSublist,\n        canGoBack: state.pathSublist.length,\n        canMove: state.selectedFolderSublist && canMove\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClose: (event) => {\n            dispatch(setSelectedFolderSublist(null));\n            dispatch(setVisibleDialogMove(false));\n        },\n        handleSave: (event, selectedFiles) => {\n            dispatch(moveItems(selectedFiles));\n        },\n        handleGoBack: (event) => {\n            dispatch(setSelectedFolderSublist(null));\n            dispatch(enterToPreviousDirectorySublist());\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog);\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { connect } from 'react-redux';\nimport { setVisibleDialogCopy, setSelectedFolderSublist, enterToPreviousDirectorySublist, copyItems } from '../../../Actions/Actions.js';\nimport FileListSublist from '../../FileList/FileListSublist/FileListSublist.jsx'; \nimport KeyboardArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft';\n\nclass FormDialog extends Component {\n\n    render() {\n        const { \n            selectedPath, handleClose, handleSave, open, \n            canGoBack, canCopy, selectedFiles, handleGoBack \n        } = this.props;\n\n        return (\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-copy\" fullWidth={true} maxWidth={'sm'}>\n                <form>\n                    <DialogTitle id=\"form-dialog-copy\">\n                        Copy files to <small style={{color: 'grey'}}>{ selectedPath.join('/') }</small>\n                    </DialogTitle>\n                    <DialogContent>\n                        <FileListSublist />\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={handleGoBack} color=\"primary\" type=\"button\" disabled={!canGoBack}>\n                            <KeyboardArrowLeftIcon /> Go back directory\n                        </Button>\n\n                        <Button onClick={handleClose} color=\"primary\" type=\"button\">\n                            Cancel\n                        </Button>\n                        <Button color=\"primary\" onClick={(e) => handleSave(e, selectedFiles)} disabled={!canCopy} type=\"submit\">\n                            Copy\n                        </Button>\n                    </DialogActions>\n                </form>\n            </Dialog>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    // prevent copying to same folder\n    const canCopy = state.path.join('') !== state.pathSublist.join('') + (state.selectedFolderSublist ? state.selectedFolderSublist.name : '');\n\n    return {\n        open: state.visibleDialogCopy,\n        selectedFolderSublist: state.selectedFolderSublist,\n        selectedPath: state.selectedFolderSublist ? [...state.pathSublist, state.selectedFolderSublist.name] : [],\n        canGoBack: state.pathSublist.length,\n        canCopy: state.selectedFolderSublist && canCopy,\n        selectedFiles: state.selectedFiles\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClose: (event) => {\n            dispatch(setSelectedFolderSublist(null));\n            dispatch(setVisibleDialogCopy(false));\n        },\n        handleSave: (event, selectedFiles) => {\n            dispatch(copyItems(selectedFiles));\n        },\n        handleGoBack: (event) => {\n            dispatch(setSelectedFolderSublist(null));\n            dispatch(enterToPreviousDirectorySublist());\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport FileIcon from '@material-ui/icons/InsertDriveFile';\nimport { getHumanFileSize } from '../../Api/ApiHandler';\n\nfunction UploadFileList(props) {\n    const { files } = props;\n    const list = files.map((f, i) =>\n        <ListItem dense key={i}>\n            <ListItemIcon>\n                <FileIcon />\n            </ListItemIcon>\n            <ListItemText primary={`${f.name} (${getHumanFileSize(f.size)})`} />\n        </ListItem>\n    );\n\n    return (\n        <div>\n            <List component=\"nav\">\n                {list}\n            </List>\n        </div>\n    );\n}\n\nUploadFileList.propTypes = {\n    files: PropTypes.array.isRequired\n};\n\nexport default UploadFileList;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport UploadFileList from './UploadFileList';\n\nclass FileUploader extends Component {\n\n    handleReset(event) {\n        this.refs.inputfile.value = '';\n        this.props.handleReset(event);\n    }\n\n    render() {\n        const { fileUploadList, handleSelectedFiles } = this.props;\n        const styles = {\n            inputfile: {\n                display: 'none'\n            }, inputreset: {\n                display: fileUploadList.length ? 'inline-flex' : 'none'\n            }\n        }\n\n        return (\n            <div>\n                <label htmlFor=\"button-file\">\n                    <input style={styles.inputfile} id=\"button-file\" ref=\"inputfile\" multiple type=\"file\" onChange={handleSelectedFiles} />\n                    <Button component=\"span\" variant=\"contained\" color=\"primary\">\n                        Select Files\n                    </Button>\n                </label>\n\n                <Button style={styles.inputreset} component=\"span\" type=\"reset\" onClick={this.handleReset.bind(this)}>\n                    Clear\n                </Button>\n\n                <UploadFileList files={fileUploadList} />\n            </div>\n        );\n    }\n}\n\nFileUploader.propTypes = {\n    fileUploadList: PropTypes.array.isRequired,\n    handleReset: PropTypes.func.isRequired,\n    handleSelectedFiles: PropTypes.func.isRequired,\n};\n\nexport default FileUploader;\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { connect } from 'react-redux';\nimport { resetFileUploader, uploadFiles, setFileUploadList } from '../../../Actions/Actions.js';\nimport FileUploader from '../../FileUploader/FileUploader.jsx';\n\nclass FormDialog extends Component {\n\n    render() {\n        const { handleClose, handleReset, handleUpload, open, canUpload, fileUploadProgress, fileUploadList, handleSelectedFiles } = this.props;\n\n        return (\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-upload\" fullWidth={true} maxWidth={'sm'}>\n                <form>\n                    <DialogTitle id=\"form-dialog-upload\">\n                        Upload files\n                    </DialogTitle>\n                    <DialogContent>\n                        <FileUploader handleUpload={handleUpload} fileUploadList={fileUploadList} handleSelectedFiles={handleSelectedFiles} handleReset={handleReset}/>\n                        {canUpload ? <LinearProgress variant=\"determinate\" value={fileUploadProgress} /> : null }\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={handleClose} color=\"primary\" type=\"button\">\n                            Cancel\n                        </Button>\n                        <Button color=\"primary\" onClick={handleUpload} disabled={!canUpload} type=\"submit\">\n                            Upload\n                        </Button>\n                    </DialogActions>\n                </form>\n            </Dialog>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        open: state.visibleDialogUploadFile,\n        canUpload: state.fileUploadList.length,\n        fileUploadList: state.fileUploadList,\n        fileUploadProgress: state.fileUploadProgress\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClose: (event) => {\n            dispatch(resetFileUploader());\n        },\n        handleUpload: (event) => {\n            event.preventDefault();\n            const files = event.currentTarget.form.querySelector('input[type=file]').files;\n            dispatch(uploadFiles(files));\n        },\n        handleSelectedFiles: (event) => {\n            dispatch(setFileUploadList(\n                [...event.target.files].map(f => ({name: f.name, size: f.size}))\n            ));\n        },\n        handleReset: (event) => {\n            dispatch(setFileUploadList([]));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog);\n","import React from 'react';\nimport DialogSolid from './SolidLogin/SolidLogin.jsx';\nimport DialogContent from './Content/Content.jsx';\nimport DialogEdit from './Edit/Edit.jsx';\nimport DialogCreateFolder from './CreateFolder/CreateFolder.jsx';\nimport DialogRename from './Rename/Rename.jsx';\nimport DialogMove from './Move/Move.jsx';\nimport DialogCopy from './Copy/Copy.jsx';\nimport DialogUploadFile from './UploadFile/UploadFile.jsx';\n\nfunction Dialogs(props) {\n    return (\n        <div className=\"Dialogs\">\n            <DialogSolid />\n            <DialogContent />\n            <DialogEdit />\n            <DialogCreateFolder />\n            <DialogMove />\n            <DialogCopy />\n            <DialogRename />\n            <DialogUploadFile />\n        </div>\n    );\n}\n\nexport default Dialogs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { connect } from 'react-redux';\n\nconst styles = theme => ({\n  close: {\n    padding: theme.spacing.unit / 2,\n  },\n});\n\nclass DynamicSnackbar extends React.Component {\n  render() {\n    const { classes, errorMsg, handleClose, open, notificationDuration } = this.props;\n    return (\n      <div>\n        <Snackbar\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'left',\n          }}\n          open={open}\n          autoHideDuration={notificationDuration}\n          onClose={handleClose}\n          ContentProps={{\n            'aria-describedby': 'message-id',\n          }}\n          message={<span id=\"message-id\">{errorMsg}</span>}\n          action={[\n            <IconButton key=\"close\" aria-label=\"Close\" color=\"inherit\" className={classes.close} onClick={handleClose} >\n              <CloseIcon />\n            </IconButton>,\n          ]}\n        />\n      </div>\n    );\n  }\n}\n\nDynamicSnackbar.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        open: !!state.errorMsg,\n        errorMsg: state.errorMsg,\n        notificationDuration: state.notificationDuration || 60000\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClose: (event) => {\n            dispatch({\n                type: 'SET_ERROR_MSG',\n                value: null\n            });\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(DynamicSnackbar));\n\n","import React, { Component } from 'react';\nimport FileList from './Components/FileList/FileList.jsx';\nimport Navbar from './Components/Navbar/Navbar.jsx';\nimport ContextMenu from './Components/ContextMenu/ContextMenu.jsx';\nimport Dialogs from './Components/Dialogs/Dialogs.jsx';\n\nimport { MuiThemeProvider as MaterialUI, createMuiTheme } from '@material-ui/core/styles';\nimport blue from '@material-ui/core/colors/blue';\nimport { connect } from 'react-redux';\nimport { setContextMenuVisible, refreshFileList } from './Actions/Actions.js';\nimport DynamicSnackbar from './Components/Notification/DynamicSnackbar.jsx'; \n\nconst theme = createMuiTheme({\n    palette: {\n        primary: blue,\n    },\n    typography: {\n        useNextVariants: true,\n    }\n});\n\nclass App extends Component {\n\n    componentDidMount() {\n        this.props.init();\n    };\n\n    render() {\n        return (\n            <MaterialUI theme={theme}>\n                <div onClick={this.props.handleHideContextMenu} onContextMenu={this.props.handleHideContextMenu}>\n                    <Navbar />\n                    <FileList />\n                    <ContextMenu />\n                    <DynamicSnackbar />\n                    <Dialogs />\n                </div>\n            </MaterialUI>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        init: () => {\n            dispatch(refreshFileList());\n        },\n\n        handleHideContextMenu: (event) => {\n            if (! (event.target.tagName === 'INPUT' || /label/i.test(event.target.className))) {\n                event.preventDefault();\n            }\n            dispatch(setContextMenuVisible(false));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport thunk from 'redux-thunk';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux'\nimport MainReducer from './Reducers/MainReducer'\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\nimport './index.css';\n\nconst store = createStore(MainReducer, applyMiddleware(thunk));\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>, \n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}