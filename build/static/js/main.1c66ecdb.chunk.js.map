{"version":3,"sources":["../node_modules/n3/lib sync /^/.//N3.*$","Reducers/MainReducer.js","serviceWorker.js","config.js","Api/Api.js","Api/folderUtils.js","Api/ApiHandler.js","Actions/Actions.js","Components/File/File.jsx","Components/FileList/FileListEmptyMessage.jsx","Components/Loader/Loader.jsx","Components/FileList/FileList.jsx","Components/ContextMenu/ContextMenuActions/CreateFolderAction.jsx","Components/ContextMenu/ContextMenuActions/UploadFileAction.jsx","Components/Navbar/ThreeDotsMenu.jsx","Components/Breadcrumb/BreadcrumbText.jsx","Components/Navbar/Navbar.jsx","Components/ContextMenu/ContextMenuActions/OpenAction.jsx","Components/ContextMenu/ContextMenuActions/RemoveAction.jsx","Components/ContextMenu/ContextMenuActions/MoveAction.jsx","Components/ContextMenu/ContextMenuActions/CopyAction.jsx","Components/ContextMenu/ContextMenuActions/EditAction.jsx","Components/ContextMenu/ContextMenuActions/RenameAction.jsx","Components/ContextMenu/ContextMenuActions/DownloadAction.jsx","Components/ContextMenu/ContextMenuActions/OpenInNewTab.jsx","Components/ContextMenu/ContextMenu.jsx","Components/Dialogs/SolidLogin/SolidLogin.jsx","Components/Dialogs/Content/Content.jsx","Components/Dialogs/Edit/Edit.jsx","Components/Dialogs/CreateFolder/CreateFolder.jsx","Components/Dialogs/Rename/Rename.jsx","Components/File/FileSublist/FileSublist.jsx","Components/FileList/FileListSublist/FileListSublist.jsx","Components/Dialogs/Move/Move.jsx","Components/Dialogs/Copy/Copy.jsx","Components/FileUploader/UploadFileList.jsx","Components/FileUploader/FileUploader.jsx","Components/Dialogs/UploadFile/UploadFile.jsx","Components/Dialogs/Dialogs.jsx","Components/Notification/DynamicSnackbar.jsx","App.js","index.js"],"names":["map","./N3Lexer","./N3Lexer.js","./N3Parser","./N3Parser.js","./N3Store","./N3Store.js","./N3StreamParser","./N3StreamParser.js","./N3StreamWriter","./N3StreamWriter.js","./N3Util","./N3Util.js","./N3Writer","./N3Writer.js","webpackContext","req","id","webpackContextResolve","__webpack_require__","e","Error","code","keys","Object","resolve","module","exports","defaultState","path","pathSublist","host","fileList","fileListSublist","fileListFilter","contextMenuVisible","contextMenuPosition","contextMenuPositionElement","selectedFiles","selectedFolderSublist","loading","loadingSublist","errorMsg","visibleDialogSolidLogin","visibleDialogCreateFolder","visibleDialogUploadFile","visibleDialogContent","visibleDialogEdit","visibleDialogMove","visibleDialogCopy","visibleDialogRename","fileContentBlobUrl","fileUploadProgress","fileUploadList","MainReducer","state","arguments","length","undefined","action","type","assign","value","concat","toConsumableArray","sort","a","b","name","toLowerCase","filter","f","i","self","ff","indexOf","find","parseInt","URL","revokeObjectURL","createObjectURL","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","isEditableFilePattern","isImageFilePattern","isExtractableFilePattern","actions","create_folder","move","copy","copy_folder","compress","extract","edit","remove","upload","upload_by_chunks","preview_images","createDirectory","directory","url","fileClient","Response","itemNames","Promise","all","itemName","removeItem","response","includes","removeFolder","_callee","folderName","folderPath","_ref","files","folders","promises","regenerator_default","wrap","_context","prev","next","sent","_ref2","_ref3","abrupt","stop","_x3","_x4","_x5","_copy","apply","this","_callee2","destination","originFolderUrl","_ref4","_context2","_ref5","_ref6","_ref7","copyFile","_ref8","copyFolder","_callee3","originPath","originName","destinationPath","destinationName","from","to","fileResponse","blob","_context3","solidAuth","method","body","_callee4","_ref9","_context4","_ref10","_ref11","folderType","fileType","getFolderItems","graph","subj","each","rdflib","item","newItem","folderNode","isAnInstanceOfClass","types","index","getFileType","stats","subjectName","subjectNode","mod","size","mtime","modified","any","getStats","label","decodeURIComponent","replace","messageTranslation","unknown_response","TypeError: Failed to fetch","parseFetchSuccess","reject","contentType","headers","get","isJson","test","isTurtle","ok","json","success","data","text","handleFetchError","errorResponse","errJson","JSON","stringify","fixPath","getFileList","API","folderUtils","getFileBody","filename","renameFile","newFileName","renameFolder","newFolderName","moveItems","filenames","uploadFiles","baseUrl","Array","file","updateTextFile","fileName","content","group","groupEnd","getActionsByMultipleFiles","acts","forEach","fileActs","push","compressible","editable","extractable","getActionsByFile","splice","getHumanFileSize","bytes","Math","pow","toFixed","solidLogin","dispatch","getState","setLoading","solidPopupLogin","webId","origin","setVisibleDialogSolidLogin","refreshFileList","r","toString","session","popupUri","setSelectedFiles","APIHandler","join","setFileList","refreshFileListSublist","setLoadingSublist","setSelectedFolderSublist","setFileListSublist","getFileContent","setFileContent","setVisibleDialogContent","downloadFile","msSaveOrOpenBlob","document","createElement","href","download","appendChild","click","setTimeout","removeChild","promptDownload","getFileContentForEdit","setVisibleDialogEdit","createNewFolder","createFolderName","folder","trim","setVisibleDialogCreateFolder","removeItems","copyItems","_getState14","setVisibleDialogCopy","setSelectedFileFromLastTo","lastFile","_getState15","lastPreviouslySelected","pop","lastPreviouslySelectedIndex","lastSelectedIndex","toAdd","element","initSubList","setPathSublist","resetFileUploader","setFileUploadProgress","setVisibleDialogUploadFile","setFileUploadList","enterToPreviousDirectorySublist","slice","setPath","enterToDirectory","setFileListFilter","search","setContextMenuVisible","visible","setVisibleDialogRename","setVisibleDialogMove","percentage","File","_this$props","props","isSelected","handleClick","handleDoubleClick","handleContextMenu","avatarStyle","backgroundColor","blue","realSize","react_default","className","onClick","onDoubleClick","onContextMenu","data-selected","ListItem_default","ListItemAvatar_default","Avatar_default","style","Folder_default","InsertDriveFile_default","ListItemText_default","primary","secondary","Component","connect","ownProps","filePath","event","preventDefault","stopPropagation","x","clientX","touches","pageX","y","clientY","pageY","shiftKey","setContextMenuPosition","ctrlKey","FileListEmptyMessage","withStyles","theme","progress","margin","spacing","unit","classes","Grid_default","container","justify","CircularProgress_default","color","FileList","fileListComponent","key","Components_File_File","Loader_Loader","Components_FileList_FileListEmptyMessage","toLocaleLowerCase","callback","handleClose","MenuItem_default","ListItemIcon_default","CreateNewFolder_default","Typography_default","variant","CloudUpload_default","ThreeDotsMenu","anchorEl","_this","setState","currentTarget","marginLeft","IconButton_default","aria-label","aria-owns","aria-haspopup","MoreVert_default","Menu_default","open","onClose","ContextMenuActions_CreateFolderAction","ContextMenuActions_UploadFileAction","React","BreadcrumbText","handleClickPath","rootTitle","handleGoBack","canGoBack","separator","rootPath","data-index","lastPath","directories","dir","Button_default","display","KeyboardArrowLeft_default","paths","defineProperty","breakpoints","up","root","width","marginBottom","grow","flexGrow","menuButton","marginRight","title","position","borderRadius","shape","fade","palette","common","white","&:hover","searchIcon","height","pointerEvents","alignItems","justifyContent","inputRoot","inputInput","paddingTop","paddingRight","paddingBottom","paddingLeft","transition","transitions","create","&:focus","handleChange","newPath","enterToPreviousDirectoryByIndex","AppBar_default","Toolbar_default","noWrap","Components_Breadcrumb_BreadcrumbText","Search_default","InputBase_default","placeholder","onChange","input","Navbar_ThreeDotsMenu","OpenInBrowser_default","Delete_default","HowToVote_default","FileCopy_default","WrapText_default","CloudDownload_default","Link_default","ContextMenu","actionsComp","act","component","ContextMenuActions_OpenAction","OpenInNewTab","EditAction","ContextMenuActions_CopyAction","ContextMenuActions_MoveAction","RenameAction","ContextMenuActions_DownloadAction","ContextMenuActions_RemoveAction","anchorReference","anchorPosition","top","left","transformOrigin","vertical","horizontal","PaperProps","FormDialog","handleLogin","Dialog_default","aria-labelledby","fullWidth","maxWidth","DialogTitle_default","DialogContent_default","DialogActions_default","lastBlobUrl","blobUrl","src","alt","handleOpen","_this2","fetch","t","form","querySelector","handleSave","textArea","minHeight","defaultValue","DialogContentText_default","bind","TextField_default","autoFocus","realName","newName","FileSublist","FileListSublist","File_FileSublist_FileSublist","selectedPath","canMove","FileList_FileListSublist_FileListSublist","disabled","_getState13","canCopy","UploadFileList","list","dense","List_default","FileUploader","refs","inputfile","handleReset","handleSelectedFiles","styles","inputreset","htmlFor","ref","multiple","FileUploader_UploadFileList","handleUpload","canUpload","Components_FileUploader_FileUploader","LinearProgress_default","target","Dialogs","SolidLogin","Content","Edit","CreateFolder","Move","Copy","Rename","UploadFile","DynamicSnackbar","notificationDuration","Snackbar_default","anchorOrigin","autoHideDuration","ContentProps","aria-describedby","message","close","Close_default","padding","createMuiTheme","typography","useNextVariants","App","init","core_styles","handleHideContextMenu","Navbar","Components_FileList_FileList","Components_ContextMenu_ContextMenu","Notification_DynamicSnackbar","Dialogs_Dialogs","tagName","store","createStore","applyMiddleware","thunk","ReactDOM","render","react_redux_es","src_App","getElementById","process","addEventListener","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.1c66ecdb.chunk.js","sourcesContent":["var map = {\n\t\"./N3Lexer\": 106,\n\t\"./N3Lexer.js\": 106,\n\t\"./N3Parser\": 107,\n\t\"./N3Parser.js\": 107,\n\t\"./N3Store\": 146,\n\t\"./N3Store.js\": 146,\n\t\"./N3StreamParser\": 147,\n\t\"./N3StreamParser.js\": 147,\n\t\"./N3StreamWriter\": 157,\n\t\"./N3StreamWriter.js\": 157,\n\t\"./N3Util\": 108,\n\t\"./N3Util.js\": 108,\n\t\"./N3Writer\": 112,\n\t\"./N3Writer.js\": 112\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 240;","export const defaultState = {\n    path: [],\n    pathSublist: [],\n    host: null,\n    fileList: [],\n    fileListSublist: [],\n    fileListFilter: null,\n    contextMenuVisible: null,\n    contextMenuPosition: [],\n    contextMenuPositionElement: null,\n    selectedFiles: [],\n    selectedFolderSublist: null,\n    loading: false,\n    loadingSublist: false,\n    errorMsg: null,\n    visibleDialogSolidLogin: true,\n    visibleDialogCreateFolder: false,\n    visibleDialogUploadFile: false,\n    visibleDialogContent: false,\n    visibleDialogEdit: false,\n    visibleDialogMove: false,\n    visibleDialogCopy: false,\n    visibleDialogRename: false,\n    fileContentBlobUrl: null,\n    fileUploadProgress: 0,\n    fileUploadList: []\n};\n\n/**\n * Main content reducer\n * @param {Object} state\n * @param {Object} action\n * @returns {Object}\n */\nconst MainReducer = (state = defaultState, action) => {\n    switch (action.type) {\n        case 'SET_PATH':\n            return Object.assign({}, state, {\n                path: action.value\n            });\n        case 'SET_PATH_SUB_LIST':\n            return Object.assign({}, state, {\n                pathSublist: action.value\n            });\n        case 'SET_HOST':\n            return Object.assign({}, state, {\n                host: action.value\n            });\n        case 'ENTER_TO_DIRECTORY':\n            return Object.assign({}, state, {\n                path: [...state.path, action.value]\n            });\n        case 'ENTER_TO_DIRECTORY_SUB_LIST':\n            return Object.assign({}, state, {\n                pathSublist: [...state.pathSublist, action.value]\n            });\n        case 'SET_FILE_LIST':\n            return Object.assign({}, state, {\n                fileList: action.value.sort((a, b) => a.type < b.type ? -1 : a.name.toLowerCase() > b.name.toLowerCase())\n            });\n        case 'SET_FILE_LIST_SUB_LIST':\n            return Object.assign({}, state, {\n                fileListSublist: action.value.sort((a, b) => a.type < b.type ? -1 : a.name.toLowerCase() > b.name.toLowerCase())\n            });\n        case 'SET_FILE_LIST_FILTER':\n            return Object.assign({}, state, { \n                fileListFilter: action.value\n            });\n        case 'SET_CONTEXT_MENU_VISIBLE':\n            return Object.assign({}, state, { \n                contextMenuVisible: action.value\n            });\n        case 'SET_CONTEXT_MENU_POSITION':\n            return Object.assign({}, state, { \n                contextMenuPosition: action.value\n            });\n        case 'SET_CONTEXT_MENU_POSITION_ELEMENT':\n            return Object.assign({}, state, { \n                contextMenuPositionElement: action.value\n            });\n        case 'SET_SELECTED_FILES':\n            return Object.assign({}, state, {\n                selectedFiles: (action.value).filter((f, i, self) => self.map(ff => ff.name).indexOf(f.name) === i)\n            });\n        case 'SET_SELECTED_FOLDER_SUB_LIST':\n            return Object.assign({}, state, {\n                selectedFolderSublist: action.value\n            });\n\n        case 'TOGGLE_SELECTED_FILE':\n            return Object.assign({}, state, {\n                selectedFiles: state.selectedFiles.find(f => f.name === action.value.name) ?\n                    state.selectedFiles.filter(f => f.name !== action.value.name) :\n                    [...state.selectedFiles, action.value]\n            });\n        case 'SET_FILE_UPLOAD_PROGRESS':\n            return Object.assign({}, state, {\n                fileUploadProgress: parseInt(action.value || 0)\n            });\n        case 'SET_LOADING':\n            return Object.assign({}, state, { \n                loading: action.value\n            });\n        case 'SET_LOADING_SUB_LIST':\n            return Object.assign({}, state, { \n                loadingSublist: action.value\n            });\n        case 'SET_ERROR_MSG':\n            return Object.assign({}, state, { \n                errorMsg: action.value\n            });\n\n        case 'SET_VISIBLE_DIALOG_SOLID_LOGIN':\n            return Object.assign({}, state, { \n                visibleDialogSolidLogin: !!action.value\n            });\n\n        case 'SET_VISIBLE_DIALOG_CREATE_FOLDER':\n            return Object.assign({}, state, { \n                visibleDialogCreateFolder: !!action.value\n            });\n            \n        case 'SET_VISIBLE_DIALOG_UPLOAD_FILE':\n            return Object.assign({}, state, { \n                visibleDialogUploadFile: !!action.value\n            });\n\n        case 'SET_VISIBLE_DIALOG_CONTENT':\n            return Object.assign({}, state, { \n                visibleDialogContent: !!action.value\n            });\n\n        case 'SET_VISIBLE_DIALOG_EDIT':\n            return Object.assign({}, state, { \n                visibleDialogEdit: !!action.value\n            });\n\n        case 'SET_VISIBLE_DIALOG_MOVE':\n            return Object.assign({}, state, { \n                visibleDialogMove: !!action.value\n            });\n        case 'SET_VISIBLE_DIALOG_COPY':\n            return Object.assign({}, state, { \n                visibleDialogCopy: !!action.value\n            });\n        case 'SET_VISIBLE_DIALOG_RENAME':\n            return Object.assign({}, state, { \n                visibleDialogRename: !!action.value\n            });\n        case 'SET_FILE_UPLOAD_LIST':\n            return Object.assign({}, state, {\n                fileUploadList: action.value\n            });\n\n        case 'SET_FILE_CONTENT':\n            /**\n             * Removing old blob url\n             */\n            state.fileContentBlobUrl && URL.revokeObjectURL(state.fileContentBlobUrl);\n            return Object.assign({}, state, { \n                fileContentBlobUrl: action.value ? URL.createObjectURL(action.value) : null\n            });\n\n        default:\n            return state;\n    }\n};\n\nexport default MainReducer;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export default {\n    host: null,\n\n    isEditableFilePattern: /\\.(txt|diff?|patch|svg|asc|cnf|cfg|conf|html?|cfm|cgi|aspx?|ini|pl|py|md|css|cs|jsx?|jsp|log|htaccess|htpasswd|gitignore|gitattributes|env|json|atom|eml|rss|markdown|sql|xml|xslt?|sh|rb|as|bat|cmd|cob|for|ftn|frm|frx|inc|lisp|scm|coffee|php[3-6]?|java|c|cbl|go|h|scala|vb|tmpl|lock|go|yml|yaml|tsv|lst)$/i,\n    isImageFilePattern: /\\.(jpe?g|gif|bmp|png|svg|tiff?)$/i,\n    isExtractableFilePattern: /\\.(gz|tar|rar|g?zip)$/i,\n\n    actions: {\n        create_folder: true,\n        move: true,\n        copy: true,\n        copy_folder: true,\n        compress: true,\n        extract: true,\n        edit: true,\n        remove: true,\n        upload: true,\n        upload_by_chunks: true,\n        preview_images: true,\n    }\n};\n","import config from './../config.js';\nimport * as solidAuth from 'solid-auth-client';\nimport * as fileClient from 'solid-file-client';\n\n/**\n * Fetch API to list files from directory\n * @param {String} path\n * @returns {Object}\n */\nexport function list(path) {\n    const url = config.host + path;\n    return solidAuth.fetch(url);\n};\n\n/**\n * Fetch API to create a directory\n * @param {String} path\n * @param {String} directory\n * @returns {Object}\n */\nexport function createDirectory(path, directory) {\n    const url = `${config.host}${path}/${directory}`;\n    return fileClient.createFolder(url)\n        .then(() => new Response());\n};\n\n\n/**\n * Fetch API to get file body\n * @param {String} path\n * @returns {Object}\n */\nexport function getFileContent(path) {\n    const url = config.host + path;\n    return solidAuth.fetch(url);\n};\n\n\n/**\n * Fetch API to remove a file or folder\n * @param {String} path\n * @param {Array} itemNames\n * @returns {Object}\n */\nexport function remove(path, itemNames) {\n    return Promise.all(itemNames.map(itemName => removeItem(path, itemName)))\n        .then(() => new Response());\n};\n\n\nfunction removeItem(path, itemName) {\n    const url = `${config.host}${path}/${itemName}`;\n\n    return fileClient.deleteFile(url)\n        .then(response => {\n            if (response === 'OK') {\n                return new Response();\n            }\n            if (response.includes('409 (Conflict)')) {\n                return removeFolder(path, itemName);\n            }\n            throw response;\n        });\n}\n\nasync function removeFolder(path, folderName) {\n    const folderPath = `${path}/${folderName}`;\n    const url = `${config.host}${folderPath}`;\n\n    const { files, folders } = await fileClient.readFolder(url);\n    const promises = [\n        ...files.map(({ name }) => removeItem(folderPath, name)),\n        ...folders.map(({ name }) => removeFolder(folderPath, name))\n    ];\n    await Promise.all(promises);\n    await fileClient.deleteFolder(url);\n\n    return new Response();\n}\n\n/**\n * Fetch API to move files\n * @param {String} path\n * @param {String} destination\n * @param {Array} filenames\n * @returns {Object}\n */\nexport function move(path, destination, filenames) {\n    return copy(path, destination, filenames)\n        .then(() => remove(path, filenames));\n};\n\n/**\n * Fetch API to rename a file\n * @param {String} path\n * @param {String} from\n * @param {String} to\n * @returns {Object}\n */\nexport function renameFile(path, from, to) {\n    return copyFile(path, from, path, to)\n        .then(() => removeItem(path, from))\n        .then(() => new Response());\n};\n\n\n/**\n * Fetch API to rename files\n * @param {String} path\n * @param {Array} filenames\n * @returns {Object}\n */\nexport function renameFolder(path, folderName, newFolderName) {\n    return copyFolder(path, folderName, path, newFolderName)\n        .then(() => removeFolder(path, folderName))\n        .then(() => new Response());\n};\n\n/**\n * Fetch API to copy files\n * @param {String} path\n * @param {Array} itemNames\n * @param {Boolean} recursive\n * @returns {Object}\n */\nexport async function copy(path, destination, itemNames) {\n    const originFolderUrl = config.host + path;\n\n    let { files, folders } = await fileClient.readFolder(originFolderUrl);\n\n    files = files.filter(({ name }) => itemNames.includes(name));\n    folders = folders.filter(({ name }) => itemNames.includes(name));\n\n    const promises = [\n        ...files.map(({ name }) => copyFile(path, name, destination, name)),\n        ...folders.map(({ name }) => copyFolder(path, name, destination, name))\n    ];\n\n    await Promise.all(promises);\n    return new Response();\n};\n\n\nasync function copyFile(originPath, originName, destinationPath, destinationName) {\n    const from = `${config.host}${originPath}/${originName}`;\n    const to = `${config.host}${destinationPath}/${destinationName}`;\n\n    const fileResponse = await solidAuth.fetch(from);\n    const blob = await fileResponse.blob();\n    return solidAuth.fetch(to, {\n        method: 'PUT',\n        body: blob\n    });\n}\n\nasync function copyFolder(originPath, originName, destinationPath, destinationName) {\n    const from = `${config.host}${originPath}/${originName}`;\n\n    // TODO: Combine these two promises for better performance\n    await createDirectory(destinationPath, destinationName);\n    const { files, folders } = await fileClient.readFolder(from);\n\n    const promises = [\n        ...files.map(({ name }) => copyFile(`${originPath}/${originName}`, name, `${destinationPath}/${destinationName}`, name)),\n        ...folders.map(({ name }) => copyFolder(`${originPath}/${originName}`, name, `${destinationPath}/${destinationName}`, name))\n    ];\n\n    await Promise.all(promises);\n}\n\n/**\n * Fetch API to upload files\n * @param {String} path\n * @param {Object<FileList>} fileList\n * @returns {Object}\n */\nexport function upload(path, fileList) {\n    const baseUrl = config.host + path;\n\n    const promises = Array.from(fileList).map(file => fileClient.updateFile(`${baseUrl}/${file.name}`, file));\n    return Promise.all(promises)\n        .then(() => new Response());\n};\n\n/**\n * Fetch API to upload a text\n * @param {String} path\n * @param {String} fileName\n * @param {String} content\n * @returns {Object} \n*/\nexport function updateTextFile(path, fileName, content) {\n    const url = `${config.host}${path}/${fileName}`;\n    console.group('updateTextFile');\n    console.log(`url: ${url}`);\n    console.log(`content: ${content}`);\n    console.groupEnd();\n    return fileClient.updateFile(url, content)\n        .then(() => new Response());\n}","// Based on https://github.com/jeff-zucker/solid-file-client/blob/master/src/folderUtils.js\nimport * as rdflib from 'rdflib';\n\nconst folderType = 'dir';\nconst fileType = 'file';\n\nexport function getStats(graph, subjectName) {\n    const subjectNode = rdflib.sym(subjectName);\n    const mod = rdflib.sym('http://purl.org/dc/terms/modified');\n    const size = rdflib.sym('http://www.w3.org/ns/posix/stat#size');\n    const mtime = rdflib.sym('http://www.w3.org/ns/posix/stat#mtime');\n    let modified = graph.any(subjectNode, mod, undefined);\n    if (typeof (modified) === \"undefined\") return false;\n    else modified = modified.value;\n    return {\n        modified: modified,\n        size: graph.any(subjectNode, size, undefined).value,\n        mtime: graph.any(subjectNode, mtime, undefined).value,\n    };\n}\n\n/** A type used internally to indicate we are handling a folder */\n/**\n * @param {rdflib.IndexedFormula} graph a rdflib.graph() database instance\n * @param {string} url location of the folder\n * @returns {string} content mime-type of a file, If it's a folder, return 'folder', 'unknown' for not sure\n */\nexport function getFileType(graph, url) {\n    const folderNode = rdflib.sym(url);\n    const isAnInstanceOfClass = rdflib.sym('http://www.w3.org/1999/02/22-rdf-syntax-ns#type');\n    const types = graph.each(folderNode, isAnInstanceOfClass, undefined);\n    for (const index in types) {\n        const contentType = types[index].value;\n        if (contentType.match('ldp#BasicContainer'))\n            return folderType;\n        else\n            return fileType;\n    }\n    return 'unknown';\n}\nexport function getFolderItems(graph, subj) {\n    const items = graph.each(\n        rdflib.sym(subj),\n        rdflib.sym('http://www.w3.org/ns/ldp#contains'),\n        undefined\n    ).map(item => {\n        let newItem = {}\n        newItem.type = getFileType(graph, item.value)\n        const stats = getStats(graph, item.value)\n        newItem.modified = stats.modified\n        newItem.size = stats.size\n        newItem.mtime = stats.mtime\n        newItem.label = decodeURIComponent(item.value).replace(/.*\\//, '')\n\n        if (newItem.type === folderType) {\n            item.value = item.value.replace(/[/]+/g, '/');\n            item.value = item.value.replace(/https:/, 'https:/');\n            const name = item.value.replace(/\\/$/, '')\n            newItem.name = name.replace(/.*\\//, '')\n            newItem.url = item.value\n        }\n        else {\n            newItem.url = item.value\n            newItem.name = item.value.replace(/.*\\//, '')\n        }\n\n        return newItem;\n    });\n\n    return items;\n}","import * as API from './Api.js';\nimport config from './../config.js';\nimport * as rdflib from 'rdflib';\nimport * as folderUtils from './folderUtils.js';\n\nconst messageTranslation = {\n    'unknown_response': 'Unknown error response from connector',\n    'TypeError: Failed to fetch': 'Cannot get a response from connector.',\n};\n\nconst parseFetchSuccess = (response) => {\n    return new Promise((resolve, reject) => {\n        const contentType = response.headers.get('content-type');\n        // const contentDisp = response.headers.get('content-disposition');\n        const isJson = /(application|text)\\/json/.test(contentType);\n        const isTurtle = /text\\/turtle/.test(contentType);\n        // const isAttachment = /attachment/.test(contentDisp);\n\n        if (!response.ok) {\n            if (isJson) {\n                throw response.json();\n            }\n            throw Error(messageTranslation['unknown_response']);\n        }\n        else if (isJson) {\n            response.json().then(json => {\n                if (!json.success) {\n                    throw new Error();\n                }\n                resolve(json.data);\n            });\n        }\n        else if (isTurtle) {\n            const graph = rdflib.graph();\n\n            response.text()\n                .then(text => {\n                    rdflib.parse(text, graph, response.url);\n                    resolve({\n                        graph,\n                        url: response.url,\n                        text\n                    });\n                });\n        }\n        else {\n            resolve(response);\n        }\n    });\n};\n\nconst handleFetchError = (errorResponse) => {\n    return new Promise((resolve, reject) => {\n        // is thrown json\n        if (errorResponse && errorResponse.then) {\n            errorResponse.then(errJson => {\n                return reject(errJson.errorMsg || JSON.stringify(errJson));\n            });\n        } else {\n            return reject(messageTranslation[errorResponse] || errorResponse);\n        }\n    });\n}\n\n/**\n * Clean path string removing double slashes and prepending a slash\n * @param {String} path\n * @returns {String}\n */\nconst fixPath = (path) => {\n    return ('/' + path).replace(/\\/\\//g, '/');\n};\n\n/**\n * Wrap API response for retrive file liest\n * @param {String} path\n * @returns {Object}\n */\nexport const getFileList = (path) => {\n    path = fixPath(path);\n    return API.list(path)\n        .then(parseFetchSuccess)\n        .then(({ graph, url }) => folderUtils.getFolderItems(graph, url))\n        .catch(handleFetchError)\n};\n\n/**\n * Wrap API response for retrive file content\n * @param {String} path\n * @returns {Object}\n */\nexport const getFileBody = (path, filename) => {\n    path = fixPath(path + '/' + filename);\n    return API.getFileContent(path)\n        .then(parseFetchSuccess)\n        .then(response => response.blob())\n        .catch(handleFetchError)\n};\n\n\n/**\n * Wrap API response for retrive file content\n * @param {String} path\n * @returns {Object}\n */\nexport const renameFile = (path, filename, newFileName) => {\n    path = fixPath(path);\n    return API.renameFile(path, filename, newFileName)\n        .then(parseFetchSuccess)\n        .catch(handleFetchError)\n};\n\n\n/**\n * Wrap API response for retrive file content\n * @param {String} path\n * @returns {Object}\n */\nexport const renameFolder = (path, folderName, newFolderName) => {\n    path = fixPath(path);\n    return API.renameFolder(path, folderName, newFolderName)\n        .then(parseFetchSuccess)\n        .catch(handleFetchError)\n};\n\n/**\n * Wrap API response for create folder\n * @param {String} path\n * @param {String} folder\n * @returns {Object}\n */\nexport const createFolder = (path, folder) => {\n    path = fixPath(path);\n    if (!(folder || '').trim()) {\n        return Promise.reject('Invalid folder name');\n    }\n    return API.createDirectory(path, folder)\n        .then(parseFetchSuccess)\n        .catch(handleFetchError)\n};\n\n/**\n * Wrap API response for remove file or folder\n * @param {String} path\n * @param {Array} filenames\n * @returns {Object}\n */\nexport const removeItems = (path, filenames) => {\n    path = fixPath(path);\n    if (!filenames.length) {\n        return Promise.reject('No files to remove');\n    }\n    return API.remove(path, filenames)\n        .then(parseFetchSuccess)\n        .catch(handleFetchError)\n};\n\n/**\n * Wrap API response for move file or folder\n * @param {String} path\n * @param {String} destination\n * @param {Array} filenames\n * @returns {Object}\n */\nexport const moveItems = (path, destination, filenames) => {\n    path = fixPath(path);\n    destination = fixPath(destination);\n    if (!filenames.length) {\n        return Promise.reject('No files to move');\n    }\n    return API.move(path, destination, filenames)\n        .then(parseFetchSuccess)\n        .catch(handleFetchError)\n};\n\n/**\n * Wrap API response for copy file or folder\n * @param {String} path\n * @param {String} destination\n * @param {Array} filenames\n * @returns {Object}\n */\nexport const copyItems = (path, destination, filenames) => {\n    path = fixPath(path);\n    destination = fixPath(destination);\n    if (!filenames.length) {\n        return Promise.reject('No files to copy');\n    }\n    return API.copy(path, destination, filenames)\n        .then(parseFetchSuccess)\n        .catch(handleFetchError)\n};\n\n/**\n * Wrap API response for upload files\n * @param {String} path\n * @param {Object<FileList>} fileList\n * @returns {Object}\n */\nexport const uploadFiles = (path, fileList) => {\n    path = fixPath(path);\n\n    if (!fileList.length) {\n        return Promise.reject('No files to upload');\n    }\n    return API.upload(path, fileList)\n        .then(parseFetchSuccess)\n        .catch(handleFetchError)\n};\n\n/**\n * Wrap API response for uploading a text file\n * @param {String} path\n * @param {String} fileName\n * @param {String} content\n * @returns {Object}\n */\nexport const updateTextFile = (path, fileName, content) => {\n    path = fixPath(path);\n\n    return API.updateTextFile(path, fileName, content)\n        .then(parseFetchSuccess)\n        .catch(handleFetchError);\n};\n\n\n/**\n * Calculate available actions for a file\n * @param {Object} file\n * @returns {Array<String>}\n */\nexport const getActionsByFile = (file, acts = []) => {\n    if (file.type === 'dir') {\n        acts.push('open');\n        acts.push('openInNewTab');\n\n        typeof file.compressible !== 'undefined' ?\n            file.compressible && acts.push('compress') :\n            acts.push('compress');\n    }\n\n    if (file.type === 'file') {\n        acts.push('download');\n        config.isImageFilePattern.test(file.name) && acts.push('open');\n        acts.push('openInNewTab');\n\n        typeof file.editable !== 'undefined' ?\n            file.editable && acts.push('edit') :\n            config.isEditableFilePattern.test(file.name) && acts.push('edit');\n\n        typeof file.extractable !== 'undefined' ?\n            file.extractable && acts.push('extract') :\n            config.isExtractableFilePattern.test(file.name) && acts.push('extract');\n\n        acts.push('copy');\n    }\n\n    acts.push('move');\n    acts.push('rename');\n    acts.push('perms');\n    acts.push('remove');\n\n    return acts;\n}\n\n/**\n * Calculate available actions for selected files, excluding non coincidences\n * @param {Array<Object>} files\n * @returns {Array<String>}\n */\nexport const getActionsByMultipleFiles = (files, acts = []) => {\n    files.forEach(file => {\n        const fileActs = getActionsByFile(file);\n        // intersects previous actions with the following to leave only coincidences\n        acts = acts.length ? acts.filter(value => -1 !== fileActs.indexOf(value)) : fileActs;\n    });\n\n    if (files.length > 1) {\n        acts.splice(acts.indexOf('open'), acts.indexOf('open') >= 0);\n        acts.splice(acts.indexOf('edit'), acts.indexOf('edit') >= 0);\n        acts.splice(acts.indexOf('compress'), acts.indexOf('compress') >= 0);\n        acts.splice(acts.indexOf('download'), acts.indexOf('download') >= 0);\n        acts.splice(acts.indexOf('rename'), acts.indexOf('rename') >= 0);\n        acts.push('compress');\n    }\n    return acts;\n}\n\n/**\n * Calculate file size by bytes in human readable format\n * @param {Number} bytes\n * @returns {String}\n */\nexport const getHumanFileSize = (bytes) => {\n    const e = (Math.log(bytes) / Math.log(1e3)) | 0;\n    return +(bytes / Math.pow(1e3, e)).toFixed(2) + ' ' + ('kMGTPEZY'[e - 1] || '') + 'B';\n};","import * as APIHandler from '../Api/ApiHandler.js';\nimport * as solidAuth from 'solid-auth-client';\nimport config from '../config.js';\n\n/**\n * Request API to get file list for the selected path then refresh UI\n * @returns {Function}\n */\nexport const solidLogin = () => (dispatch, getState) => {\n    dispatch(setLoading(true));\n\n    solidPopupLogin().then(webId => {\n        const origin = (new URL(webId)).origin;\n        config.host = origin;\n        dispatch(setVisibleDialogSolidLogin(false));\n        dispatch(refreshFileList());\n        dispatch(setLoading(false));\n    }).catch(r => {\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoading(false));\n    });\n};\n\nasync function solidPopupLogin() {\n    let session = await solidAuth.currentSession();\n    if (!session) {\n        let popupUri = 'https://solid.community/common/popup.html';\n        session = await solidAuth.popupLogin({ popupUri });\n    }\n    return(session.webId);\n}\n\n\n/**\n * Request API to get file list for the selected path then refresh UI\n * @returns {Function}\n */\nexport const uploadFiles = (fileList) => (dispatch, getState) => {\n    const { path } = getState();\n    dispatch(setLoading(true));\n    dispatch(setSelectedFiles([]));\n    dispatch(setFileUploadProgress(50));\n\n    APIHandler.uploadFiles(path.join('/'), fileList).then(r => {\n        dispatch(setFileUploadProgress(100));\n        setTimeout(f => {\n            dispatch(resetFileUploader());\n        }, 300);\n        dispatch(refreshFileList());\n    }).catch(r => {\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoading(false));\n    });\n};\n\n\nexport const updateTextFile = (fileName, content) => (dispatch, getState) => {\n    const { path } = getState();\n    dispatch(setLoading(true));\n\n    APIHandler.updateTextFile(path.join('/'), fileName, content).then(r => {\n        dispatch(setVisibleDialogEdit(false));\n        dispatch(refreshFileList());\n        dispatch(setLoading(false));\n    }).catch(r => {\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoading(false));\n    });\n}\n\n/**\n * Request API to get file list for the selected path then refresh UI\n * @returns {Function}\n */\nexport const refreshFileList = () => (dispatch, getState) => {\n    const { path } = getState();\n    dispatch(setLoading(true));\n    dispatch(setSelectedFiles([]));\n\n    APIHandler.getFileList(path.join('/')).then(r => {\n        dispatch(setLoading(false));\n        dispatch(setFileList(r));\n    }).catch(r => {\n        dispatch(setFileList([]));\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoading(false));\n    });\n};\n\n\n/**\n * Request API to get file list for the selected path then refresh UI\n * @returns {Function}\n */\nexport const refreshFileListSublist = () => (dispatch, getState) => {\n    const { pathSublist } = getState();\n    dispatch(setLoadingSublist(true));\n    dispatch(setSelectedFolderSublist(null));\n\n    APIHandler.getFileList(pathSublist.join('/')).then(r => {\n        dispatch(setLoadingSublist(false));\n        dispatch(setFileListSublist(r));\n    }).catch(r => {\n        dispatch(setFileListSublist([]));\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoadingSublist(false));\n    });\n};\n\n\n/**\n * Request API to get file content then dispatch defined events\n * @param {String} fileName\n * @returns {Function}\n */\nexport const getFileContent = (fileName) => (dispatch, getState) => {\n    const { path } = getState();\n\n    dispatch(setLoading(true));\n    dispatch(setFileContent(null));\n    dispatch(setVisibleDialogContent(true));\n    APIHandler.getFileBody(path.join('/'), fileName).then(blob => {\n        dispatch(setFileContent(blob));\n        dispatch(setLoading(false));\n    }).catch(r => {\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoading(false));\n    });\n};\n\n/**\n * Request API to rename file then dispatch defined events\n * @param {String} fileName\n * @returns {Function}\n */\nexport const renameFile = (fileName, newFileName) => (dispatch, getState) => {\n    const { path } = getState();\n    dispatch(setLoading(true));\n    APIHandler.renameFile(path.join('/'), fileName, newFileName).then(blob => {\n        dispatch(setVisibleDialogRename(false));\n        dispatch(setLoading(false));\n        dispatch(refreshFileList());\n    }).catch(r => {\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoading(false));\n    });\n};\n\n/**\n * Request API to rename file then dispatch defined events\n * @param {String} folderName\n * @param {String} newFolderName\n * @returns {Function}\n */\nexport const renameFolder = (folderName, newFolderName) => (dispatch, getState) => {\n    const { path } = getState();\n    dispatch(setLoading(true));\n    APIHandler.renameFolder(path.join('/'), folderName, newFolderName).then(blob => {\n        dispatch(setVisibleDialogRename(false));\n        dispatch(setLoading(false));\n        dispatch(refreshFileList());\n    }).catch(r => {\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoading(false));\n    });\n};\n\n/**\n * Request API to get download file then dispatch defined events\n * @param {String} fileName\n * @returns {Function}\n */\nexport const downloadFile = (fileName) => (dispatch, getState) => {\n    const { path } = getState();\n    dispatch(setLoading(true));\n    APIHandler.getFileBody(path.join('/'), fileName).then(file => {\n        promptDownload(file, fileName);\n        dispatch(setLoading(false));\n    }).catch(r => {\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoading(false));\n    });\n};\n\n// code from https://stackoverflow.com/a/30832210/6548154\nfunction promptDownload(file, fileName) {\n    if (window.navigator.msSaveOrOpenBlob) // IE10+\n        window.navigator.msSaveOrOpenBlob(file, fileName);\n    else { // Others\n        const a = document.createElement(\"a\");\n        const url = URL.createObjectURL(file);\n        a.href = url;\n        a.download = fileName;\n        document.body.appendChild(a);\n        a.click();\n        setTimeout(() => {\n            document.body.removeChild(a);\n            window.URL.revokeObjectURL(url);  \n        }, 0);\n    }\n}\n\n\nexport const openInNewTab = (fileName) => (dispatch, getState) => {\n    const { path } = getState();\n    const url = `${config.host}/${path.length ? (path.join('/') + '/') : ''}${fileName}`;\n    window.open(url, '_blank');\n};\n\n\n/**\n * Request API to get file content then dispatch defined events\n * @param {String} fileName\n * @returns {Function}\n */\nexport const getFileContentForEdit = (fileName) => (dispatch, getState) => {\n    const { path } = getState();\n    dispatch(setLoading(true));\n    dispatch(setFileContent(null));\n    dispatch(setVisibleDialogEdit(true));\n    APIHandler.getFileBody(path.join('/'), fileName).then(blob => {\n        dispatch(setFileContent(blob));\n        dispatch(setLoading(false));\n    }).catch(r => {\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoading(false));\n    });\n};\n\n\n/**\n * Request API to create a folder then dispatch defined events\n * @param {String} createFolderName\n * @returns {Function}\n */\nexport const createNewFolder = (createFolderName) => (dispatch, getState) => {\n    const { path } = getState();\n    dispatch(setLoading(true));\n\n    APIHandler.createFolder(path.join('/'), createFolderName).then(r => {\n        dispatch(setVisibleDialogCreateFolder(false));\n        dispatch(setLoading(false));\n        dispatch(refreshFileList());\n    }).catch(r => {\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoading(false));\n    });\n};\n\n\n/**\n * Request API to remove an item then dispatch defined events\n * @param {Array} filenames\n * @returns {Function}\n */\nexport const removeItems = (files) => (dispatch, getState) => {\n    const { path } = getState();\n    const filenames = files.map(f => f.name);\n\n    dispatch(setLoading(true));\n    APIHandler.removeItems(path.join('/'), filenames).then(r => {\n        dispatch(setLoading(false));\n        dispatch(refreshFileList());\n    }).catch(r => {\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoading(false));\n    });\n};\n\n\n/**\n * Request API to move an item then dispatch defined events\n * @param {Array} filenames\n * @returns {Function}\n */\nexport const moveItems = (files) => (dispatch, getState) => {\n    const { path, pathSublist, selectedFolderSublist } = getState();\n    const destination = pathSublist.join('/') + '/' + selectedFolderSublist.name;\n    const filenames = files.map(f => f.name);\n\n    dispatch(setLoading(true));\n    APIHandler.moveItems(path.join('/'), destination, filenames).then(r => {\n        dispatch(setLoading(false));\n        dispatch(setVisibleDialogMove(false));\n        dispatch(refreshFileList());\n    }).catch(r => {\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoading(false));\n    });\n};\n\n\n/**\n * Request API to copy an item then dispatch defined events\n * @param {Array} filenames\n * @returns {Function}\n */\nexport const copyItems = (files) => (dispatch, getState) => {\n    const { path, pathSublist, selectedFolderSublist } = getState();\n    const destination = pathSublist.join('/') + '/' + selectedFolderSublist.name;\n    const filenames = files.map(f => f.name);\n\n    dispatch(setLoading(true));\n    APIHandler.copyItems(path.join('/'), destination, filenames).then(r => {\n        dispatch(setLoading(false));\n        dispatch(setVisibleDialogCopy(false));\n        dispatch(refreshFileList());\n    }).catch(r => {\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoading(false));\n    });\n};\n\n/**\n * This handles multiple selection by using shift key\n * @param {Object} lastFile\n * @returns {Function}\n */\nexport const setSelectedFileFromLastTo = (lastFile) => (dispatch, getState) => {\n    const { fileList, selectedFiles } = getState();\n\n    const lastPreviouslySelected = [...selectedFiles].pop();\n    const lastPreviouslySelectedIndex = fileList.indexOf(fileList.find(f => f.name === lastPreviouslySelected.name))\n    const lastSelectedIndex = fileList.indexOf(fileList.find(f => f.name === lastFile.name))\n\n    let toAdd = [];\n    if (lastSelectedIndex > lastPreviouslySelectedIndex) {\n        toAdd = fileList.filter((index, element) => {\n            return fileList.indexOf(index) <= lastSelectedIndex && fileList.indexOf(index) >= lastPreviouslySelectedIndex\n        });\n    } else {\n        toAdd = fileList.filter((index, element) => {\n            return fileList.indexOf(index) >= lastSelectedIndex && fileList.indexOf(index) <= lastPreviouslySelectedIndex\n        });\n    }\n    dispatch(setSelectedFiles([...selectedFiles, ...toAdd]));\n};\n\n\n/**\n * @returns {Function}\n */\nexport const initSubList = () => (dispatch, getState) => {\n    const { path } = getState();\n    dispatch(setSelectedFolderSublist(null));\n    dispatch(setFileListSublist([]));    \n    dispatch(setPathSublist([...path]));\n    dispatch(refreshFileListSublist());\n};\n\nexport const resetFileUploader = () => (dispatch, getState) => {\n    dispatch(setFileUploadProgress(0));\n    dispatch(setVisibleDialogUploadFile(false));\n    dispatch(setFileUploadList([]));\n};\n\nexport const enterToPreviousDirectory = () => (dispatch, getState) => {\n    const { path } = getState();\n    dispatch(setPath(path.slice(0, -1)));\n    dispatch(setFileListFilter(null));\n    dispatch(refreshFileList());\n};\n\nexport const enterToPreviousDirectoryByIndex = (index) => (dispatch, getState) => {\n    const { path } = getState();\n    const newPath = [...path].slice(0, ++index);\n    dispatch(setPath(newPath));\n    dispatch(refreshFileList());\n    dispatch(setFileListFilter(null));\n};\n\nexport const enterToPreviousDirectorySublist = () => (dispatch, getState) => {\n    const { pathSublist } = getState();\n    dispatch(setPathSublist(pathSublist.slice(0, -1)));\n    dispatch(refreshFileListSublist());\n};\n\nexport const setPath = (path) => {\n    return {\n        type: 'SET_PATH',\n        value: path\n    };\n};\n\nexport const setPathSublist = (path) => {\n    return {\n        type: 'SET_PATH_SUB_LIST',\n        value: path\n    };\n};\n\nexport const setHost = (host) => {\n    return {\n        type: 'SET_HOST',\n        value: host\n    };\n};\n\nexport const enterToDirectory = (directory) => (dispatch, getState) => {\n    dispatch({\n        type: 'ENTER_TO_DIRECTORY',\n        value: directory\n    });\n    dispatch(setFileListFilter(null));\n    dispatch(refreshFileList());\n};\n\nexport const enterToDirectorySublist = (directory) => (dispatch, getState) => {\n    dispatch({\n        type: 'ENTER_TO_DIRECTORY_SUB_LIST',\n        value: directory\n    });\n    dispatch(refreshFileListSublist());\n};\n\nexport const setFileList = (fileList) => {\n    return {\n        type: 'SET_FILE_LIST',\n        value: fileList\n    };\n};\n\nexport const setFileListSublist = (fileList) => {\n    return {\n        type: 'SET_FILE_LIST_SUB_LIST',\n        value: fileList\n    };\n};\n\nexport const setSelectedFiles = (files) => {\n    return {\n        type: 'SET_SELECTED_FILES',\n        value: files\n    };\n};\n\nexport const setSelectedFolderSublist = (file) => {\n    return {\n        type: 'SET_SELECTED_FOLDER_SUB_LIST',\n        value: file\n    };\n};\n\nexport const setFileListFilter = (search) => {\n    return {\n        type: 'SET_FILE_LIST_FILTER',\n        value: search\n    };\n};\n\nexport const setContextMenuVisible = (visible) => {\n    return {\n        type: 'SET_CONTEXT_MENU_VISIBLE',\n        value: !!visible\n    };\n};\n\nexport const setContextMenuPosition = (x, y) => {\n    return {\n        type: 'SET_CONTEXT_MENU_POSITION',\n        value: [x, y]\n    };\n};\n\nexport const setContextMenuPositionElement = (element) => {\n    return {\n        type: 'SET_CONTEXT_MENU_POSITION_ELEMENT',\n        value: element\n    };\n};\n\nexport const toggleSelectedFile = (file) => {\n    return {\n        type: 'TOGGLE_SELECTED_FILE',\n        value: file\n    };\n};\n\nexport const rightClickOnFile = (file) => (dispatch, getState) => {\n    const { selectedFiles } = getState();\n    const isSelected = selectedFiles.indexOf(selectedFiles.find(f => f.name === file.name)) !== -1;\n\n    !isSelected && dispatch(setSelectedFiles([file]));\n};\n\nexport const setLoading = (value) => {\n    return {\n        type: 'SET_LOADING',\n        value: value\n    };\n};\n\nexport const setLoadingSublist = (value) => {\n    return {\n        type: 'SET_LOADING_SUB_LIST',\n        value: value\n    };\n};\n\nexport const setVisibleDialogSolidLogin = (visible) => {\n    return {\n        type: 'SET_VISIBLE_DIALOG_SOLID_LOGIN',\n        value: !!visible\n    };\n};\n\nexport const setVisibleDialogCreateFolder = (visible) => {\n    return {\n        type: 'SET_VISIBLE_DIALOG_CREATE_FOLDER',\n        value: !!visible\n    };\n};\n\nexport const setVisibleDialogUploadFile = (visible) => {\n    return {\n        type: 'SET_VISIBLE_DIALOG_UPLOAD_FILE',\n        value: !!visible\n    };\n};\n\nexport const setVisibleDialogRename = (visible) => {\n    return {\n        type: 'SET_VISIBLE_DIALOG_RENAME',\n        value: !!visible\n    };\n};\n\nexport const setVisibleDialogMove = (visible) => {\n    return {\n        type: 'SET_VISIBLE_DIALOG_MOVE',\n        value: !!visible\n    };\n};\n\nexport const setVisibleDialogCopy = (visible) => {\n    return {\n        type: 'SET_VISIBLE_DIALOG_COPY',\n        value: !!visible\n    };\n};\n\nexport const setVisibleDialogContent = (visible) => {\n    return {\n        type: 'SET_VISIBLE_DIALOG_CONTENT',\n        value: !!visible\n    };\n};\n\nexport const setVisibleDialogEdit = (visible) => {\n    return {\n        type: 'SET_VISIBLE_DIALOG_EDIT',\n        value: !!visible\n    };\n};\n\nexport const setFileContent = (blob) => {\n   return {\n        type: 'SET_FILE_CONTENT',\n        value: blob\n    };\n};\n\nexport const setFileUploadProgress = (percentage) => {\n   return {\n        type: 'SET_FILE_UPLOAD_PROGRESS',\n        value: percentage\n    };\n};\n\nexport const setFileUploadList = (files) => {\n   return {\n        type: 'SET_FILE_UPLOAD_LIST',\n        value: files\n    };\n};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport {\n    enterToDirectory, setContextMenuVisible, toggleSelectedFile, setContextMenuPosition,\n    setSelectedFileFromLastTo, getFileContent, getFileContentForEdit, \n    rightClickOnFile, setSelectedFiles\n} from '../../Actions/Actions.js';\nimport './File.css';\n\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport FolderIcon from '@material-ui/icons/Folder';\nimport FileIcon from '@material-ui/icons/InsertDriveFile';\nimport blue from '@material-ui/core/colors/blue';\nimport config from '../../config.js';\nimport { getHumanFileSize } from '../../Api/ApiHandler';\n\nclass File extends Component {\n    render() {\n        const { isSelected, type, name, size, handleClick, handleDoubleClick, handleContextMenu } = this.props;\n        const avatarStyle = {\n            backgroundColor: isSelected ? blue['A200'] : null\n        };\n        const realSize = typeof size !== 'undefined' && type !== 'dir' ? getHumanFileSize(size) : null;\n        return (\n            <div className=\"File\" onClick={handleClick} onDoubleClick={handleDoubleClick} onContextMenu={handleContextMenu} data-selected={isSelected}>\n                <ListItem>\n                    <ListItemAvatar>\n                        <Avatar style={avatarStyle}>\n                            { type === 'dir' ? <FolderIcon /> : <FileIcon />}\n                        </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText className=\"filename\" primary={name} secondary={realSize} />\n                </ListItem>\n            </div>\n        );\n    }\n}\n\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        filePath: [...state.path, ownProps.name],\n        isSelected: !!state.selectedFiles.find(f => f.name === ownProps.name)\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        /**\n         * @param {Object} event\n         * @returns {undefined}\n         */\n        handleDoubleClick: (event) => {\n            if (ownProps.type === 'file') {\n                if (config.isEditableFilePattern.test(ownProps.name) || ownProps.editable) {\n                    dispatch(getFileContentForEdit(ownProps.name));\n                } else if (config.isImageFilePattern.test(ownProps.name)) {\n                    dispatch(getFileContent(ownProps.name));\n                }\n                return;\n            }\n\n            dispatch(enterToDirectory(ownProps.name));\n        },\n\n        /**\n         * @param {Object} event\n         * @returns {undefined}\n         */\n        handleContextMenu: (event) => {\n            event.preventDefault();\n            event.stopPropagation();\n\n            const x = event.clientX || (event.touches && event.touches[0].pageX);\n            const y = event.clientY || (event.touches && event.touches[0].pageY);\n\n            if (event.shiftKey) {\n                dispatch(setSelectedFileFromLastTo(ownProps));\n            } else {\n                dispatch(rightClickOnFile(ownProps));\n            }\n            \n            dispatch(setContextMenuVisible(true));\n            dispatch(setContextMenuPosition(x, y));\n        },\n\n        /**\n         * @param {Object} event\n         * @returns {undefined}\n         */\n        handleClick: (event) => {\n            event.stopPropagation();\n\n            if (event.ctrlKey) {\n                dispatch(toggleSelectedFile(ownProps));\n            } else if (event.shiftKey) {\n                dispatch(setSelectedFileFromLastTo(ownProps));\n            } else {\n                dispatch(setSelectedFiles([ownProps]));\n            }\n        }\n    };\n};\n\nFile.propTypes = {\n    name: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    size: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number\n    ]),\n    editable: PropTypes.oneOfType([\n        PropTypes.bool, PropTypes.number\n    ])\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(File);\n\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './FileListEmptyMessage.css';\n\nclass FileListEmptyMessage extends Component {\n    render() {\n        return (\n            <div className=\"FileListEmptyMessage\">\n                No files in this folder\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n    };\n};\n\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FileListEmptyMessage);\n\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Grid from '@material-ui/core/Grid';\n\nconst styles = theme => ({\n  progress: {\n    margin: theme.spacing.unit * 10,\n  },\n});\n\nfunction Loader(props) {\n    const { classes } = props;\n    return (\n        <Grid container justify=\"center\">\n            <CircularProgress className={classes.progress} color=\"secondary\" />\n        </Grid>\n    );\n}\n\nLoader.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Loader);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport File from '../File/File.jsx'; \nimport FileListEmptyMessage from './FileListEmptyMessage';\nimport Loader from '../Loader/Loader.jsx'; \nimport './FileList.css';\n\nclass FileList extends Component {\n    render() {\n        const { fileList, loading } = this.props;\n        \n        const fileListComponent = fileList.map((file, key) => {\n            return <File type={file.type} name={file.name} editable={file.editable} size={file.size} key={key} />\n        });\n\n        return <div className=\"FileList\">\n            { loading ? \n                <Loader /> : \n                fileListComponent.length ? fileListComponent : <FileListEmptyMessage />\n            }\n        </div>\n    }\n}\n\n\nconst mapStateToProps = (state) => {\n    const filteredList = state.fileList.filter(\n        file => state.fileListFilter ? file.name.toLocaleLowerCase().match(state.fileListFilter.toLocaleLowerCase()) : true\n    );\n    return {\n        fileList: filteredList,\n        loading: state.loading\n    };\n};\n\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        handleClick: (event) => {\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FileList);\n\n\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { connect } from 'react-redux';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from '@material-ui/core/Typography';\nimport CreateNewFolderIcon from '@material-ui/icons/CreateNewFolder';\nimport { setVisibleDialogCreateFolder } from '../../../Actions/Actions.js';\n\nfunction CreateFolderAction(props) {\n    const {handleClick, handleClose} = props;\n\n    const handleCloseAfter = (callback) => (event) => {\n        callback();\n        handleClose();\n    };\n\n    return (\n        <MenuItem onClick={handleCloseAfter(handleClick)}>\n            <ListItemIcon>\n                <CreateNewFolderIcon />\n            </ListItemIcon>\n            <Typography variant=\"inherit\">\n                Create folder\n            </Typography>\n        </MenuItem>        \n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClick: (event) => {\n            dispatch(setVisibleDialogCreateFolder(true));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateFolderAction);\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { connect } from 'react-redux';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from '@material-ui/core/Typography';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport { setVisibleDialogUploadFile } from '../../../Actions/Actions.js';\n\nfunction UploadFileAction(props) {\n    const {handleClick, handleClose} = props;\n\n    const handleCloseAfter = (callback) => (event) => {\n        callback();\n        handleClose();\n    };\n\n    return (\n        <MenuItem onClick={handleCloseAfter(handleClick)}>\n            <ListItemIcon>\n                <CloudUploadIcon />\n            </ListItemIcon>\n            <Typography variant=\"inherit\">\n                Upload files\n            </Typography>\n        </MenuItem>        \n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClick: (event) => {\n            dispatch(setVisibleDialogUploadFile(true));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UploadFileAction);\n","import React from 'react';\nimport Menu from '@material-ui/core/Menu';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport { connect } from 'react-redux';\nimport CreateFolderAction from '../ContextMenu/ContextMenuActions/CreateFolderAction.jsx';\nimport UploadFileAction from '../ContextMenu/ContextMenuActions/UploadFileAction.jsx';\n\nclass ThreeDotsMenu extends React.Component {\n  state = {\n    anchorEl: null,\n  };\n\n  handleClick = event => {\n    this.setState({ anchorEl: event.currentTarget });\n  };\n\n  handleClose = () => {\n    this.setState({ anchorEl: null });\n  };\n\n  render() {\n    const { anchorEl } = this.state;\n    return (\n      <div style={{marginLeft:'1em'}}>\n        <IconButton color=\"inherit\" \n          aria-label=\"More\"\n          aria-owns={Boolean(anchorEl) ? 'long-menu' : undefined}\n          aria-haspopup=\"true\"\n          onClick={this.handleClick}>\n          <MoreVertIcon />\n        </IconButton>\n\n        <Menu anchorEl={anchorEl} open={Boolean(anchorEl)} onClose={this.handleClose}>\n          <CreateFolderAction handleClose={this.handleClose} />\n          <UploadFileAction handleClose={this.handleClose} />\n        </Menu>\n      </div>\n    );\n  }\n}\n\n\nconst mapStateToProps = (state) => {\n    return {\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ThreeDotsMenu);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport KeyboardArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft';\nimport Button from '@material-ui/core/Button';\nimport './BreadcrumbText.css';\n\nconst styles = theme => ({\n  lastPath: {\n    display: 'block',\n    [theme.breakpoints.up('sm')]: {\n      display: 'none'\n    }\n  },\n  paths: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    }\n  }\n});\n\nclass BreadcrumbText extends Component {\n\n    render() {\n        const { classes, handleClickPath, path, rootTitle, handleGoBack, canGoBack } = this.props;\n\n        const separator = <span>&gt;</span>;\n        const rootPath = <span onClick={(e) => handleClickPath(e, -1, path)} data-index={0}>\n            { rootTitle } { path.length ? separator : '' }\n        </span>;\n        const lastPath = [...path].pop() || rootTitle;\n\n        const directories = path.map((dir, index) => {\n            return <span key={index} data-index={index} onClick={(e) => handleClickPath(e, index, path)}>\n                <span>{dir}</span> { path.length -1 !== index ? separator : '' }&nbsp;\n            </span>\n        });\n\n        return (\n            <div className=\"BreadcrumbText\">\n                <div className={classes.lastPath}>\n                    <Button onClick={handleGoBack} color=\"inherit\" type=\"button\" style={{display: canGoBack ? 'inline-flex' : 'none'}}>\n                        <KeyboardArrowLeftIcon />\n                    </Button>\n                    {lastPath}\n                </div>\n                <div className={classes.paths}>{rootPath} {directories}</div>\n            </div>\n        );\n    }\n}\n\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n    };\n};\n\nconst mapStateToProps = (state) => {\n    return {\n    };\n};\n\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(BreadcrumbText));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport { fade } from '@material-ui/core/styles/colorManipulator';\nimport { withStyles } from '@material-ui/core/styles';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { connect } from 'react-redux';\nimport { setFileListFilter, enterToPreviousDirectoryByIndex } from '../../Actions/Actions.js';\nimport ThreeDotsMenu from './ThreeDotsMenu.jsx';\nimport BreadcrumbText from '../Breadcrumb/BreadcrumbText.jsx';\nimport { enterToPreviousDirectory } from '../../Actions/Actions.js';\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    marginBottom: '4.3em'\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20,\n  },\n  title: {\n    display: 'block', // was none\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginLeft: 0,\n    width: '100%',\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing.unit,\n      width: 'auto',\n      display: 'block'\n    },\n  },\n  searchIcon: {\n    width: theme.spacing.unit * 9,\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n    width: '100%',\n  },\n  inputInput: {\n    paddingTop: theme.spacing.unit,\n    paddingRight: theme.spacing.unit,\n    paddingBottom: theme.spacing.unit,\n    paddingLeft: theme.spacing.unit * 10,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: 100,\n      '&:focus': {\n        width: 200,\n      },\n    },\n  },\n});\n\nfunction SearchAppBar(props) {\n  const { classes, path, handleClickPath, handleGoBack, canGoBack } = props;\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"fixed\">\n        <Toolbar>\n          <Typography className={classes.title} variant=\"h6\" color=\"inherit\" noWrap>\n            <BreadcrumbText \n                path={path} \n                handleClickPath={handleClickPath} \n                handleGoBack={handleGoBack}\n                canGoBack={canGoBack}\n                rootTitle=\"Solid Filemanager\"\n            />\n          </Typography>\n          <div className={classes.grow} />\n\n          <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <InputBase\n              placeholder=\"Search…\"\n              value={props.value}\n              onChange={props.handleChange}\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n            />\n          </div>\n          <ThreeDotsMenu />\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\nSearchAppBar.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\n\nconst mapStateToProps = (state) => {\n    return {\n        value: state.fileListFilter || '',\n        path: state.path,\n        canGoBack: state.path.length\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        handleChange: (event) => {\n            dispatch(setFileListFilter(event.currentTarget.value));\n        },\n        handleGoBack: (event) => {\n            dispatch(enterToPreviousDirectory());\n        },\n        /**\n         * @param {Object} event\n         * @param {Number} index\n         * @param {Array} path\n         * @returns {undefined}\n         */        \n        handleClickPath: (event, index) => {\n            dispatch(enterToPreviousDirectoryByIndex(index));\n            event.preventDefault();\n        }\n    };\n};\n\n\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(SearchAppBar));\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { connect } from 'react-redux';\nimport { getFileContent, enterToDirectory } from '../../../Actions/Actions.js';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from '@material-ui/core/Typography';\nimport OpenInBrowserIcon from '@material-ui/icons/OpenInBrowser';\n\nfunction OpenAction(props) {\n    const {handleClick, selectedFiles} = props;\n    return (\n        <MenuItem onClick={(e) => handleClick(e, selectedFiles)}>\n            <ListItemIcon>\n                <OpenInBrowserIcon />\n            </ListItemIcon>\n            <Typography variant=\"inherit\">\n                Open\n            </Typography>\n        </MenuItem>        \n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        selectedFiles: state.selectedFiles\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClick: (event, selectedFiles) => {\n            if (selectedFiles[0].type === 'dir') {\n                dispatch(enterToDirectory(selectedFiles[0].name));\n                return;\n            }\n            dispatch(getFileContent(selectedFiles[0].name));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OpenAction);\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { connect } from 'react-redux';\nimport { removeItems } from '../../../Actions/Actions.js';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from '@material-ui/core/Typography';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nfunction RemoveAction(props) {\n    const {handleClick, selectedFiles} = props;\n    return (\n        <MenuItem onClick={(e) => handleClick(e, selectedFiles)}>\n            <ListItemIcon>\n                <DeleteIcon />\n            </ListItemIcon>\n            <Typography variant=\"inherit\">\n                Remove\n            </Typography>\n        </MenuItem>        \n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        selectedFiles: state.selectedFiles\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClick: (event, selectedFiles) => {\n            dispatch(removeItems(selectedFiles));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RemoveAction);\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { connect } from 'react-redux';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from '@material-ui/core/Typography';\nimport HowToVoteIcon from '@material-ui/icons/HowToVote';\nimport { initSubList, setVisibleDialogMove } from '../../../Actions/Actions.js';\n\nfunction MoveAction(props) {\n    const {handleClick, selectedFiles} = props;\n\n    return (\n        <MenuItem onClick={(e) => handleClick(e, selectedFiles)}>\n            <ListItemIcon>\n                <HowToVoteIcon />\n            </ListItemIcon>\n            <Typography variant=\"inherit\">\n                Move\n            </Typography>\n        </MenuItem>        \n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        selectedFiles: state.selectedFiles\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClick: (event, selectedFiles) => {\n            dispatch(initSubList());\n            dispatch(setVisibleDialogMove(true));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MoveAction);\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { connect } from 'react-redux';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from '@material-ui/core/Typography';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport { initSubList, setVisibleDialogCopy } from '../../../Actions/Actions.js';\n\nfunction CopyAction(props) {\n    const {handleClick, selectedFiles} = props;\n\n    return (\n        <MenuItem onClick={(e) => handleClick(e, selectedFiles)}>\n            <ListItemIcon>\n                <FileCopyIcon />\n            </ListItemIcon>\n            <Typography variant=\"inherit\">\n                Copy\n            </Typography>\n        </MenuItem>        \n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        selectedFiles: state.selectedFiles\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClick: (event, selectedFiles) => {\n            dispatch(initSubList());\n            dispatch(setVisibleDialogCopy(true));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CopyAction);\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { connect } from 'react-redux';\nimport { getFileContentForEdit } from '../../../Actions/Actions.js';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from '@material-ui/core/Typography';\nimport OpenInBrowserIcon from '@material-ui/icons/OpenInBrowser';\n\nfunction OpenAction(props) {\n    const {handleClick, selectedFiles} = props;\n    return (\n        <MenuItem onClick={(e) => handleClick(e, selectedFiles)}>\n            <ListItemIcon>\n                <OpenInBrowserIcon />\n            </ListItemIcon>\n            <Typography variant=\"inherit\">\n                Edit\n            </Typography>\n        </MenuItem>        \n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        selectedFiles: state.selectedFiles\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClick: (event, selectedFiles) => {\n            dispatch(getFileContentForEdit(selectedFiles[0].name));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OpenAction);\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { connect } from 'react-redux';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from '@material-ui/core/Typography';\nimport WrapTextIcon from '@material-ui/icons/WrapText';\nimport { setVisibleDialogRename } from '../../../Actions/Actions.js';\n\nfunction MoveAction(props) {\n    const {handleClick, selectedFiles} = props;\n\n    return (\n        <MenuItem onClick={(e) => handleClick(e, selectedFiles)}>\n            <ListItemIcon>\n                <WrapTextIcon />\n            </ListItemIcon>\n            <Typography variant=\"inherit\">\n                Rename\n            </Typography>\n        </MenuItem>        \n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        selectedFiles: state.selectedFiles\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClick: (event, selectedFiles) => {\n            dispatch(setVisibleDialogRename(true));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MoveAction);\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { connect } from 'react-redux';\nimport { downloadFile } from '../../../Actions/Actions.js';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from '@material-ui/core/Typography';\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\n\nfunction DownloadAction(props) {\n    const {handleClick, selectedFiles} = props;\n    return (\n        <MenuItem onClick={(e) => handleClick(e, selectedFiles)}>\n            <ListItemIcon>\n                <CloudDownloadIcon   />\n            </ListItemIcon>\n            <Typography variant=\"inherit\">\n                Download\n            </Typography>\n        </MenuItem>        \n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        selectedFiles: state.selectedFiles\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClick: (event, selectedFiles) => {\n            dispatch(downloadFile(selectedFiles[0].name));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DownloadAction);\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { connect } from 'react-redux';\nimport { openInNewTab } from '../../../Actions/Actions.js';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from '@material-ui/core/Typography';\nimport LinkIcon from '@material-ui/icons/Link';\n\nfunction OpenInNewTabAction(props) {\n    const {handleClick, selectedFiles} = props;\n    return (\n        <MenuItem onClick={(e) => handleClick(e, selectedFiles)}>\n            <ListItemIcon>\n                <LinkIcon   />\n            </ListItemIcon>\n            <Typography variant=\"inherit\">\n                Open in new Tab\n            </Typography>\n        </MenuItem>        \n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        selectedFiles: state.selectedFiles\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClick: (event, selectedFiles) => {\n            dispatch(openInNewTab(selectedFiles[0].name));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OpenInNewTabAction);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './ContextMenu.css';\nimport Menu from '@material-ui/core/Menu';\nimport { getActionsByMultipleFiles } from '../../Api/ApiHandler.js';\nimport OpenAction from './ContextMenuActions/OpenAction.jsx';\nimport RemoveAction from './ContextMenuActions/RemoveAction.jsx';\nimport MoveAction from './ContextMenuActions/MoveAction.jsx';\nimport CopyAction from './ContextMenuActions/CopyAction.jsx';\nimport EditAction from './ContextMenuActions/EditAction.jsx';\nimport RenameAction from './ContextMenuActions/RenameAction.jsx';\nimport DownloadAction from './ContextMenuActions/DownloadAction.jsx';\nimport OpenInNewTab from './ContextMenuActions/OpenInNewTab.jsx';\n\nclass ContextMenu extends Component {\n\n    render() {\n        const { acts, visible, x, y } = this.props;\n        const actionsComp = acts.map((act, key) => {\n            let component;\n            if (act === 'open') {\n                component = <OpenAction key={key} />;\n            }\n            if (act === 'openInNewTab') {\n                component = <OpenInNewTab key={key} />;\n            }\n            if (act === 'edit') {\n                component = <EditAction key={key} />;\n            }\n            if (act === 'copy') {\n                component = <CopyAction key={key} />;\n            }\n            if (act === 'move') {\n                component = <MoveAction key={key} />;\n            }\n            if (act === 'rename') {\n                component = <RenameAction key={key} />;\n            }\n            if (act === 'download') {\n                component = <DownloadAction key={key} />;\n            }\n            if (act === 'remove') {\n                component = <RemoveAction key={key} />;\n            }\n            return component;\n        });\n\n        return (\n            <div>\n                <Menu\n                    anchorReference=\"anchorPosition\"\n                    anchorPosition={{ top: y, left: x }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left',\n                    }}\n                    open={visible}\n                    onClose={() => { }}\n                    PaperProps={{ style: { width: 190 } }}>\n                    {actionsComp}\n                </Menu>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        x: state.contextMenuPosition[0] || 0,\n        y: state.contextMenuPosition[1] || 0,\n        visible: !!state.contextMenuVisible,\n        acts: getActionsByMultipleFiles(state.selectedFiles),\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContextMenu);\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { connect } from 'react-redux';\nimport { solidLogin, setVisibleDialogSolidLogin } from '../../../Actions/Actions.js';\n\nclass FormDialog extends Component {\n\n    render() {\n        const { handleClose, handleLogin, open } = this.props;\n\n        return (\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-solid-login\" fullWidth={true} maxWidth={'sm'}>\n                <form>\n                  <DialogTitle id=\"form-dialog-solid-login\">Login to your Solid pod</DialogTitle>\n                  <DialogContent>\n                    <p>Please login to your solid pod to access this app by clicking the login button below.</p>\n                  </DialogContent>\n                  <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\" type=\"button\">\n                      Cancel\n                    </Button>\n                    <Button color=\"primary\" type=\"submit\" onClick={handleLogin}>\n                      Login\n                    </Button>\n                  </DialogActions>\n                </form>\n            </Dialog>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        //createFolderName: state.createFolderName,\n        open: state.visibleDialogSolidLogin\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClose: event => {\n            dispatch(setVisibleDialogSolidLogin(false));\n        },\n        handleLogin: event => {\n            event.preventDefault();\n            dispatch(solidLogin());\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog);\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { connect } from 'react-redux';\nimport { setVisibleDialogContent } from '../../../Actions/Actions.js';\n\nclass FormDialog extends Component {\n\n    state = {\n        lastBlobUrl: null,\n        content: '...',\n        loading: false\n    };\n\n    componentDidUpdate() {\n        if (this.props.blobUrl !== this.state.lastBlobUrl) {\n            this.setState({\n                lastBlobUrl: this.props.blobUrl\n            });\n            this.setState({\n                loading: true\n            });\n        }\n    }\n\n    render() {\n        const { handleClose, open } = this.props;\n        return (\n          <div style={{marginLeft:'1em'}}>\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-content\" fullWidth={true} maxWidth={'sm'}>\n              <DialogTitle id=\"form-dialog-content\">Viewing file </DialogTitle>\n              <DialogContent>\n                <img src={this.props.blobUrl} alt=\"\" style={{maxWidth: '100%'}}/>\n              </DialogContent>\n              <DialogActions>\n                <Button onClick={handleClose} color=\"primary\" type=\"button\">\n                  Close\n                </Button>\n              </DialogActions>\n            </Dialog>\n          </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        open: state.visibleDialogContent,\n        blobUrl: state.fileContentBlobUrl\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClose: (event) => {\n            dispatch(setVisibleDialogContent(false));\n        },\n        handleOpen: (event) => {\n            dispatch(setVisibleDialogContent(true));\n        },\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog);\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { connect } from 'react-redux';\nimport { setVisibleDialogEdit, updateTextFile } from '../../../Actions/Actions.js';\n\nclass FormDialog extends Component {\n\n    state = {\n        lastBlobUrl: null,\n        content: null,\n        loading: false\n    };\n\n    componentDidUpdate() {\n        if (this.props.blobUrl !== this.state.lastBlobUrl) {\n            this.setState({\n                lastBlobUrl: this.props.blobUrl\n            });\n            this.setState({\n                loading: true\n            });\n\n            this.props.blobUrl && fetch(this.props.blobUrl).then(r => {\n                return r.text();\n            }).then(t => {\n                this.setState({\n                    content: t\n                });\n                this.setState({\n                    loading: false\n                });\n            });\n        }\n    }\n\n    handleSave (event) {\n        event.preventDefault();\n        const content = event.currentTarget.form.querySelector('textarea').value;\n\n        this.props.handleSave(event)(this.props.fileName, content);\n    }\n\n    render() {\n        const { handleClose, open } = this.props;\n        const textAreaStyle = {\n            width: '100%',\n            minHeight: '300px'\n        };\n        const textArea = <textarea style={textAreaStyle} defaultValue={this.state.content || ''} />;\n\n        return (\n            <div>\n              <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-edit\" fullWidth={true} maxWidth={'sm'}>\n                <form>\n                  <DialogTitle id=\"form-dialog-edit\">Editing file </DialogTitle>\n                  <DialogContent>\n                    <DialogContentText>\n                      {this.state.loading ? 'Loading...' : textArea}\n                    </DialogContentText>\n                  </DialogContent>\n                  <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\" type=\"button\">\n                      Close\n                    </Button>\n                    <Button color=\"primary\" onClick={this.handleSave.bind(this)} type=\"submit\">\n                      Update\n                    </Button>\n                  </DialogActions>\n                </form>\n              </Dialog>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        open: state.visibleDialogEdit,\n        fileName: state.selectedFiles.length ? state.selectedFiles[0].name : '',\n        blobUrl: state.fileContentBlobUrl\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClose: (event) => {\n            dispatch(setVisibleDialogEdit(false));\n        },\n        handleOpen: (event) => {\n            dispatch(setVisibleDialogEdit(true));\n        },\n        handleSave: (event) => (fileName, content) => {\n            console.group('handleSave');\n            console.log(fileName);\n            console.log(content);\n            console.groupEnd();\n            dispatch(updateTextFile(fileName, content));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog);\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { connect } from 'react-redux';\nimport { createNewFolder, setVisibleDialogCreateFolder } from '../../../Actions/Actions.js';\n\nclass FormDialog extends Component {\n\n    render() {\n        const { handleClose, handleSave, value, open } = this.props;\n\n        return (\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-create-folder\" fullWidth={true} maxWidth={'sm'}>\n                <form>\n                  <DialogTitle id=\"form-dialog-create-folder\">Create folder</DialogTitle>\n                  <DialogContent>\n                    <TextField autoFocus fullWidth margin=\"dense\" label=\"Folder name\" type=\"text\" value={value} />\n                  </DialogContent>\n                  <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\" type=\"button\">\n                      Cancel\n                    </Button>\n                    <Button color=\"primary\" type=\"submit\" onClick={handleSave}>\n                      Save\n                    </Button>\n                  </DialogActions>\n                </form>\n            </Dialog>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        createFolderName: state.createFolderName,\n        open: state.visibleDialogCreateFolder\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClose: event => {\n            dispatch(setVisibleDialogCreateFolder(false));\n        },\n        handleSave: event => {\n            event.preventDefault();\n            const folderName = event.currentTarget.form.querySelector('input').value;\n            dispatch(createNewFolder(folderName));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog);\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { connect } from 'react-redux';\nimport { renameFile, renameFolder, setVisibleDialogRename } from '../../../Actions/Actions.js';\n\nclass FormDialog extends Component {\n\n    state = {\n        value: ''\n    };\n\n    componentWillReceiveProps (props) {\n        this.setState({value: props.realName});\n    }\n\n    handleChange (event) {\n        this.setState({value: event.currentTarget.form.querySelector('input').value});\n    }\n\n    handleSave (event) {\n        this.props.handleSave(event)(this.props.realName, this.state.value, this.props.type);\n    }\n\n    render() {\n        const { value } = this.state;\n        const { handleClose, open } = this.props;\n\n        return (\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-create-folder\" fullWidth={true} maxWidth={'sm'}>\n                <form>\n                  <DialogTitle id=\"form-dialog-create-folder\">Rename</DialogTitle>\n                  <DialogContent>\n                    <TextField autoFocus fullWidth margin=\"dense\" label=\"Item name\" type=\"text\" onChange={this.handleChange.bind(this)} value={value} />\n                  </DialogContent>\n                  <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\" type=\"button\">\n                      Cancel\n                    </Button>\n                    <Button color=\"primary\" type=\"submit\" onClick={this.handleSave.bind(this)}>\n                      Save\n                    </Button>\n                  </DialogActions>\n                </form>\n            </Dialog>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        open: state.visibleDialogRename,\n        realName: state.selectedFiles.length ? state.selectedFiles[0].name : '',\n        type: state.selectedFiles.length ? state.selectedFiles[0].type : ''\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClose: event => {\n            dispatch(setVisibleDialogRename(false));\n        },\n        handleSave: event => (realName, newName, type) => {\n            event.preventDefault();\n            if (type === 'dir')\n                dispatch(renameFolder(realName, newName));\n            else\n               dispatch(renameFile(realName, newName));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { \n    setSelectedFolderSublist, enterToDirectorySublist \n} from '../../../Actions/Actions.js';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport FolderIcon from '@material-ui/icons/Folder';\nimport FileIcon from '@material-ui/icons/InsertDriveFile';\nimport blue from '@material-ui/core/colors/blue';\nimport '../File.css';\n\nconst styles = theme => ({\n});\n\n\nclass FileSublist extends Component {\n    render() {\n        const { type, name, handleClick, isSelected, handleDoubleClick } = this.props;\n        const avatarStyle = {\n            backgroundColor: isSelected ? blue['A200'] : null\n        };\n        return (\n            <div className=\"File\" onClick={handleClick} data-selected={isSelected} onDoubleClick={handleDoubleClick}>\n                <ListItem>\n                    <ListItemAvatar>\n                        <Avatar style={avatarStyle}>\n                            { type === 'dir' ? <FolderIcon /> : <FileIcon />}\n                        </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText primary={name} secondary=\"\" />\n                </ListItem>\n            </div>\n        );\n    }\n}\n\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        filePath: [...state.path, ownProps.name],\n        isSelected: state.selectedFolderSublist && (state.selectedFolderSublist.name === ownProps.name)\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        /**\n         * @param {Object} event\n         * @returns {undefined}\n         */\n        handleDoubleClick: (event) => {\n            dispatch(enterToDirectorySublist(ownProps.name));\n            dispatch(setSelectedFolderSublist(null));\n        },\n\n        /**\n         * @param {Object} event\n         * @returns {undefined}\n         */\n        handleClick: (event) => {\n            event.stopPropagation(); \n            dispatch(setSelectedFolderSublist(ownProps));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(FileSublist));\n\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport FileSublist from '../../File//FileSublist/FileSublist.jsx'; \nimport Loader from '../../Loader/Loader.jsx'; \nimport FileListEmptyMessage from '../FileListEmptyMessage';\nimport './FileListSublist.css'; \n\nclass FileListSublist extends Component {\n    render() {\n        const { fileList, loadingSublist } = this.props;\n        \n        const fileListComponent = fileList.map((file, key) => {\n            return <FileSublist type={file.type} name={file.name} key={key} />\n        });\n\n        return <div className=\"FileListSublist\">\n            { loadingSublist ? \n                <Loader /> : \n                fileListComponent.length ? fileListComponent : <FileListEmptyMessage />\n            }\n        </div>\n    }\n}\n\nconst mapStateToProps = (state) => {\n    const filteredList = state.fileListSublist\n        .filter(file => file.type === 'dir')\n        .filter(file => state.path.join('').trim() === state.pathSublist.join('').trim() ? \n            !state.selectedFiles.find(f => f.name === file.name) : true\n        );\n    return {\n        fileList: filteredList,\n        loadingSublist: state.loadingSublist,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FileListSublist);","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { connect } from 'react-redux';\nimport { setVisibleDialogMove, setSelectedFolderSublist, enterToPreviousDirectorySublist, moveItems } from '../../../Actions/Actions.js';\nimport FileListSublist from '../../FileList/FileListSublist/FileListSublist.jsx'; \nimport KeyboardArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft';\n\nclass FormDialog extends Component {\n\n    render() {\n        const { \n            selectedPath, handleClose, handleSave, open, \n            selectedFiles, canGoBack, canMove, handleGoBack \n        } = this.props;\n\n        return (\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-move\" fullWidth={true} maxWidth={'sm'}>\n                <form>\n                    <DialogTitle id=\"form-dialog-move\">\n                        Move files to <small style={{color: 'grey'}}>{ selectedPath.join('/') }</small>\n                    </DialogTitle>\n                    <DialogContent>\n                        <FileListSublist />\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={handleGoBack} color=\"primary\" type=\"button\" disabled={!canGoBack}>\n                            <KeyboardArrowLeftIcon /> Go back directory\n                        </Button>\n\n                        <Button onClick={handleClose} color=\"primary\" type=\"button\">\n                            Cancel\n                        </Button>\n                        <Button color=\"primary\" onClick={(e) => handleSave(e, selectedFiles)} disabled={!canMove} type=\"submit\">\n                            Move\n                        </Button>\n                    </DialogActions>\n                </form>\n            </Dialog>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    // prevent moving to same folder\n    const canMove = state.path.join('') !== state.pathSublist.join('') + (state.selectedFolderSublist ? state.selectedFolderSublist.name : '');\n\n    return {\n        open: state.visibleDialogMove,\n        selectedFolderSublist: state.selectedFolderSublist,\n        selectedPath: state.selectedFolderSublist ? [...state.pathSublist, state.selectedFolderSublist.name] : [],\n        selectedFiles: state.selectedFiles,\n        pathSublist: state.pathSublist,\n        canGoBack: state.pathSublist.length,\n        canMove: state.selectedFolderSublist && canMove\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClose: (event) => {\n            dispatch(setSelectedFolderSublist(null));\n            dispatch(setVisibleDialogMove(false));\n        },\n        handleSave: (event, selectedFiles) => {\n            dispatch(moveItems(selectedFiles));\n        },\n        handleGoBack: (event) => {\n            dispatch(setSelectedFolderSublist(null));\n            dispatch(enterToPreviousDirectorySublist());\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog);\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { connect } from 'react-redux';\nimport { setVisibleDialogCopy, setSelectedFolderSublist, enterToPreviousDirectorySublist, copyItems } from '../../../Actions/Actions.js';\nimport FileListSublist from '../../FileList/FileListSublist/FileListSublist.jsx'; \nimport KeyboardArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft';\n\nclass FormDialog extends Component {\n\n    render() {\n        const { \n            selectedPath, handleClose, handleSave, open, \n            canGoBack, canCopy, selectedFiles, handleGoBack \n        } = this.props;\n\n        return (\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-copy\" fullWidth={true} maxWidth={'sm'}>\n                <form>\n                    <DialogTitle id=\"form-dialog-copy\">\n                        Copy files to <small style={{color: 'grey'}}>{ selectedPath.join('/') }</small>\n                    </DialogTitle>\n                    <DialogContent>\n                        <FileListSublist />\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={handleGoBack} color=\"primary\" type=\"button\" disabled={!canGoBack}>\n                            <KeyboardArrowLeftIcon /> Go back directory\n                        </Button>\n\n                        <Button onClick={handleClose} color=\"primary\" type=\"button\">\n                            Cancel\n                        </Button>\n                        <Button color=\"primary\" onClick={(e) => handleSave(e, selectedFiles)} disabled={!canCopy} type=\"submit\">\n                            Copy\n                        </Button>\n                    </DialogActions>\n                </form>\n            </Dialog>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    // prevent copying to same folder\n    const canCopy = state.path.join('') !== state.pathSublist.join('') + (state.selectedFolderSublist ? state.selectedFolderSublist.name : '');\n\n    return {\n        open: state.visibleDialogCopy,\n        selectedFolderSublist: state.selectedFolderSublist,\n        selectedPath: state.selectedFolderSublist ? [...state.pathSublist, state.selectedFolderSublist.name] : [],\n        canGoBack: state.pathSublist.length,\n        canCopy: state.selectedFolderSublist && canCopy,\n        selectedFiles: state.selectedFiles\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClose: (event) => {\n            dispatch(setSelectedFolderSublist(null));\n            dispatch(setVisibleDialogCopy(false));\n        },\n        handleSave: (event, selectedFiles) => {\n            dispatch(copyItems(selectedFiles));\n        },\n        handleGoBack: (event) => {\n            dispatch(setSelectedFolderSublist(null));\n            dispatch(enterToPreviousDirectorySublist());\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport FileIcon from '@material-ui/icons/InsertDriveFile';\nimport { getHumanFileSize } from '../../Api/ApiHandler';\n\nfunction UploadFileList(props) {\n    const { files } = props;\n    const list = files.map((f, i) =>\n        <ListItem dense key={i}>\n            <ListItemIcon>\n                <FileIcon />\n            </ListItemIcon>\n            <ListItemText primary={`${f.name} (${getHumanFileSize(f.size)})`} />\n        </ListItem>\n    );\n\n    return (\n        <div>\n            <List component=\"nav\">\n                {list}\n            </List>\n        </div>\n    );\n}\n\nUploadFileList.propTypes = {\n    files: PropTypes.array.isRequired\n};\n\nexport default UploadFileList;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport UploadFileList from './UploadFileList';\n\nclass FileUploader extends Component {\n\n    handleReset(event) {\n        this.refs.inputfile.value = '';\n        this.props.handleReset(event);\n    }\n\n    render() {\n        const { fileUploadList, handleSelectedFiles } = this.props;\n        const styles = {\n            inputfile: {\n                // TODO: Change this to display none as soon, as the label button works\n                // display: 'none'\n            }, inputreset: {\n                display: fileUploadList.length ? 'inline-flex' : 'none'\n            }\n        }\n\n        return (\n            <div>\n                <label htmlFor=\"button-file\">\n                    <input style={styles.inputfile} id=\"button-file\" ref=\"inputfile\" multiple type=\"file\" onChange={handleSelectedFiles} />\n                    {/*<Button component=\"span\" variant=\"contained\" color=\"primary\">\n                        Select Files\n                    </Button>*/}\n                </label>\n\n                <Button style={styles.inputreset} component=\"span\" type=\"reset\" onClick={this.handleReset.bind(this)}>\n                    Clear\n                </Button>\n\n                <UploadFileList files={fileUploadList} />\n            </div>\n        );\n    }\n}\n\nFileUploader.propTypes = {\n    fileUploadList: PropTypes.array.isRequired,\n    handleReset: PropTypes.func.isRequired,\n    handleSelectedFiles: PropTypes.func.isRequired,\n};\n\nexport default FileUploader;\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { connect } from 'react-redux';\nimport { resetFileUploader, uploadFiles, setFileUploadList } from '../../../Actions/Actions.js';\nimport FileUploader from '../../FileUploader/FileUploader.jsx';\n\nclass FormDialog extends Component {\n\n    render() {\n        const { handleClose, handleReset, handleUpload, open, canUpload, fileUploadProgress, fileUploadList, handleSelectedFiles } = this.props;\n\n        return (\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-upload\" fullWidth={true} maxWidth={'sm'}>\n                <form>\n                    <DialogTitle id=\"form-dialog-upload\">\n                        Upload files\n                    </DialogTitle>\n                    <DialogContent>\n                        <FileUploader handleUpload={handleUpload} fileUploadList={fileUploadList} handleSelectedFiles={handleSelectedFiles} handleReset={handleReset}/>\n                        {canUpload ? <LinearProgress variant=\"determinate\" value={fileUploadProgress} /> : null }\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={handleClose} color=\"primary\" type=\"button\">\n                            Cancel\n                        </Button>\n                        <Button color=\"primary\" onClick={handleUpload} disabled={!canUpload} type=\"submit\">\n                            Upload\n                        </Button>\n                    </DialogActions>\n                </form>\n            </Dialog>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        open: state.visibleDialogUploadFile,\n        canUpload: state.fileUploadList.length,\n        fileUploadList: state.fileUploadList,\n        fileUploadProgress: state.fileUploadProgress\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClose: (event) => {\n            dispatch(resetFileUploader());\n        },\n        handleUpload: (event) => {\n            event.preventDefault();\n            const files = event.currentTarget.form.querySelector('input[type=file]').files;\n            dispatch(uploadFiles(files));\n        },\n        handleSelectedFiles: (event) => {\n            dispatch(setFileUploadList(\n                [...event.target.files].map(f => ({name: f.name, size: f.size}))\n            ));\n        },\n        handleReset: (event) => {\n            dispatch(setFileUploadList([]));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog);\n","import React from 'react';\nimport DialogSolid from './SolidLogin/SolidLogin.jsx';\nimport DialogContent from './Content/Content.jsx';\nimport DialogEdit from './Edit/Edit.jsx';\nimport DialogCreateFolder from './CreateFolder/CreateFolder.jsx';\nimport DialogRename from './Rename/Rename.jsx';\nimport DialogMove from './Move/Move.jsx';\nimport DialogCopy from './Copy/Copy.jsx';\nimport DialogUploadFile from './UploadFile/UploadFile.jsx';\n\nfunction Dialogs(props) {\n    return (\n        <div className=\"Dialogs\">\n            <DialogSolid />\n            <DialogContent />\n            <DialogEdit />\n            <DialogCreateFolder />\n            <DialogMove />\n            <DialogCopy />\n            <DialogRename />\n            <DialogUploadFile />\n        </div>\n    );\n}\n\nexport default Dialogs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { connect } from 'react-redux';\n\nconst styles = theme => ({\n  close: {\n    padding: theme.spacing.unit / 2,\n  },\n});\n\nclass DynamicSnackbar extends React.Component {\n  render() {\n    const { classes, errorMsg, handleClose, open, notificationDuration } = this.props;\n    return (\n      <div>\n        <Snackbar\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'left',\n          }}\n          open={open}\n          autoHideDuration={notificationDuration}\n          onClose={handleClose}\n          ContentProps={{\n            'aria-describedby': 'message-id',\n          }}\n          message={<span id=\"message-id\">{errorMsg}</span>}\n          action={[\n            <IconButton key=\"close\" aria-label=\"Close\" color=\"inherit\" className={classes.close} onClick={handleClose} >\n              <CloseIcon />\n            </IconButton>,\n          ]}\n        />\n      </div>\n    );\n  }\n}\n\nDynamicSnackbar.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        open: !!state.errorMsg,\n        errorMsg: state.errorMsg,\n        notificationDuration: state.notificationDuration || 60000\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClose: (event) => {\n            dispatch({\n                type: 'SET_ERROR_MSG',\n                value: null\n            });\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(DynamicSnackbar));\n\n","import React, { Component } from 'react';\nimport FileList from './Components/FileList/FileList.jsx';\nimport Navbar from './Components/Navbar/Navbar.jsx';\nimport ContextMenu from './Components/ContextMenu/ContextMenu.jsx';\nimport Dialogs from './Components/Dialogs/Dialogs.jsx';\n\nimport { MuiThemeProvider as MaterialUI, createMuiTheme } from '@material-ui/core/styles';\nimport blue from '@material-ui/core/colors/blue';\nimport { connect } from 'react-redux';\nimport { setContextMenuVisible, refreshFileList } from './Actions/Actions.js';\nimport DynamicSnackbar from './Components/Notification/DynamicSnackbar.jsx'; \n\nconst theme = createMuiTheme({\n    palette: {\n        primary: blue,\n    },\n    typography: {\n        useNextVariants: true,\n    }\n});\n\nclass App extends Component {\n\n    componentDidMount() {\n        this.props.init();\n    };\n\n    render() {\n        return (\n            <MaterialUI theme={theme}>\n                <div onClick={this.props.handleHideContextMenu} onContextMenu={this.props.handleHideContextMenu}>\n                    <Navbar />\n                    <FileList />\n                    <ContextMenu />\n                    <DynamicSnackbar />\n                    <Dialogs />\n                </div>\n            </MaterialUI>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        init: () => {\n            // dispatch(refreshFileList());\n        },\n\n        handleHideContextMenu: (event) => {\n            if (! (event.target.tagName === 'INPUT' || /label/i.test(event.target.className))) {\n                event.preventDefault();\n            }\n            dispatch(setContextMenuVisible(false));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport thunk from 'redux-thunk';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux'\nimport MainReducer from './Reducers/MainReducer'\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\nimport './index.css';\n\nconst store = createStore(MainReducer, applyMiddleware(thunk));\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>, \n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}