{"version":3,"sources":["../node_modules/n3/lib sync /^/.//N3.*$","Reducers/MainReducer.js","serviceWorker.js","config.js","Api/folderUtils.js","Api/Api.js","Api/ApiHandler.js","Actions/Actions.js","Components/File/File.jsx","Components/FileList/FileListEmptyMessage.jsx","Components/Loader/Loader.jsx","Components/FileList/FileList.jsx","Components/ContextMenu/ContextMenuActions/CreateFolderAction.jsx","Components/ContextMenu/ContextMenuActions/CreateFileAction.jsx","Components/ContextMenu/ContextMenuActions/UploadFileAction.jsx","Components/ContextMenu/ContextMenuActions/SolidLoginAction.jsx","Components/ContextMenu/ContextMenuActions/SolidLogoutAction.jsx","Components/Navbar/ThreeDotsMenu.jsx","Components/Breadcrumb/BreadcrumbText.jsx","Components/Navbar/Navbar.jsx","Components/ContextMenu/ContextMenuActions/OpenAction.jsx","Components/ContextMenu/ContextMenuActions/RemoveAction.jsx","Components/ContextMenu/ContextMenuActions/MoveAction.jsx","Components/ContextMenu/ContextMenuActions/CopyAction.jsx","Components/ContextMenu/ContextMenuActions/EditAction.jsx","Components/ContextMenu/ContextMenuActions/RenameAction.jsx","Components/ContextMenu/ContextMenuActions/ZipAction.jsx","Components/ContextMenu/ContextMenuActions/ExtractAction.jsx","Components/ContextMenu/ContextMenuActions/DownloadAction.jsx","Components/ContextMenu/ContextMenuActions/OpenInNewTabAction.jsx","Components/ContextMenu/ContextMenu.jsx","Components/Dialogs/SolidLogin/SolidLogin.jsx","Components/Dialogs/SolidLogout/SolidLogout.jsx","Components/Dialogs/Content/Content.jsx","Components/Dialogs/Media/Media.jsx","Components/Dialogs/Edit/Edit.jsx","Components/Dialogs/CreateFolder/CreateFolder.jsx","Components/Dialogs/CreateFile/CreateFile.jsx","Components/Dialogs/Rename/Rename.jsx","Components/File/FileSublist/FileSublist.jsx","Components/FileList/FileListSublist/FileListSublist.jsx","Components/Dialogs/Move/Move.jsx","Components/Dialogs/Copy/Copy.jsx","Components/FileUploader/UploadFileList.jsx","Components/FileUploader/FileUploader.jsx","Components/Dialogs/UploadFile/UploadFile.jsx","Components/Dialogs/Dialogs.jsx","Components/Notification/DynamicSnackbar.jsx","App.js","index.js"],"names":["map","./N3Lexer","./N3Lexer.js","./N3Parser","./N3Parser.js","./N3Store","./N3Store.js","./N3StreamParser","./N3StreamParser.js","./N3StreamWriter","./N3StreamWriter.js","./N3Util","./N3Util.js","./N3Writer","./N3Writer.js","webpackContext","req","id","webpackContextResolve","__webpack_require__","e","Error","code","keys","Object","resolve","module","exports","defaultState","path","pathSublist","host","isLoggedIn","webId","fileList","fileListSublist","fileListFilter","contextMenuVisible","contextMenuPosition","contextMenuPositionElement","selectedFiles","selectedFolderSublist","loading","loadingSublist","errorMsg","visibleDialogSolidLogin","visibleDialogSolidLogout","visibleDialogCreateFolder","visibleDialogCreateFile","visibleDialogUploadFile","visibleDialogContent","visibleDialogMedia","visibleDialogEdit","visibleDialogMove","visibleDialogCopy","visibleDialogRename","fileContentBlobUrl","fileUploadProgress","fileUploadList","MainReducer","state","arguments","length","undefined","action","type","assign","value","concat","toConsumableArray","sort","a","b","name","toLowerCase","filter","f","i","self","ff","indexOf","find","parseInt","URL","revokeObjectURL","createObjectURL","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","getHost","setHost","newHost","slice","isEditableFilePattern","isImageFilePattern","isMediaFilePattern","isVideoFilePattern","isExtractableFilePattern","actions","create_folder","move","copy","copy_folder","compress","extract","edit","remove","upload","upload_by_chunks","preview_images","folderType","fileType","getFolderItems","graph","subj","files","folders","each","rdflib","forEach","item","newItem","url","folderNode","isAnInstanceOfClass","types","index","getFileType","size","subjectName","subjectNode","nsSize","any","getSizeByGraph","label","decodeURIComponent","replace","push","text2graph","_x","_x2","_x3","_text2graph","apply","this","_callee","text","contentType","regenerator_default","wrap","_context","prev","next","abrupt","Promise","reject","guessFileType","err","stop","ext","fetchFile","_fetchFile","fileName","_args","buildFileUrl","solidAuth","assertSuccessfulResponse","fetchFolder","_fetchFolder","_callee2","folderName","_args2","_context2","buildFolderUrl","headers","Accept","readFolder","_readFolder","_callee3","response","folderRDF","folderItems","_args3","_context3","sent","folderUtils","_callee4","destination","itemNames","_context4","copyItems","removeItems","_callee5","oldName","newName","_context5","copyFile","removeItem","_callee6","oldFolderName","newFolderName","_context6","copyFolder","removeFolderRecursively","_x13","_x14","_x15","_copyItems","_callee7","_ref","promises","_context7","_ref2","includes","_ref3","_ref4","_ref5","all","Response","_x16","_x17","_x18","_x19","_copyFile","_callee8","originPath","originName","destinationPath","destinationName","destinationUrl","fileResponse","content","_context8","get","t0","blob","method","body","_x20","_x21","_x22","_x23","_copyFolder","_callee9","_ref6","_context9","createFolder","_ref7","_ref8","_callee10","_context10","Array","from","file","updateItem","_x26","_x27","_createFolder","_callee11","_context11","folderExists","createItem","_x28","_x29","_x30","_x31","_updateItem","_callee12","itemName","_context12","_callee13","baseUrl","request","_context13","link","slug","Content-Type","_x36","_x37","_removeItems","_callee14","_context14","_x38","_x39","_removeItem","_callee15","_context15","status","_x40","_x41","_removeFolderRecursively","_callee16","_context16","removeFolderContents","_x42","_x43","_removeFolderContents","_callee17","folderPath","_ref9","_context17","_ref10","_ref11","_x44","_x45","_folderExists","_callee18","_context18","ok","handleFetchError","asyncToGenerator","mark","detailedErrorMessage","displayErrorMessage","displayMessages","group","401","403","404","500","message","stack","JSON","stringify","groupEnd","fixPath","getItemList","API","getFileBlob","filename","renameFile","newFileName","_x7","_x8","_x9","_renameFile","renameFolder","_x10","_x11","_x12","_renameFolder","folder","trim","moveItems","filenames","_x4","_x5","_x6","_moveItems","uploadFiles","_x24","_x25","_upload","updateFile","getAsZip","itemList","zip","JSZip","addItemsToZip","zipFolder","binary","extractZipArchive","uploadExtractedZipArchive","curFolder","_args5","getItemsInZipFolder","relativePath","getItemNameFromPath","getParentPathFromPath","dir","async","key","getActionsByMultipleFiles","acts","fileActs","compressible","test","editable","extractable","getActionsByFile","removeAction","splice","getHumanFileSize","bytes","Math","pow","toFixed","endsWith","substr","lastIndexOf","solidLogin","dispatch","getState","setLoading","solidPopupLogin","setWebId","setIsLoggedIn","r","toString","session","popupUri","refreshFileList","setSelectedFiles","APIHandler","join","setFileList","refreshFileListSublist","setLoadingSublist","setSelectedFolderSublist","setFileListSublist","promptDownload","msSaveOrOpenBlob","document","createElement","href","download","appendChild","click","setTimeout","removeChild","getFileContent","setFileContent","loadAndEditFile","setVisibleDialogEdit","loadAndDisplayFile","setVisibleDialogContent","displayMediaFile","setVisibleDialogMedia","_getState16","setVisibleDialogCopy","setSelectedFileFromLastTo","lastFile","_getState17","lastPreviouslySelected","pop","lastPreviouslySelectedIndex","lastSelectedIndex","toAdd","element","initSubList","setPathSublist","resetFileUploader","setFileUploadProgress","setVisibleDialogUploadFile","setFileUploadList","enterToPreviousDirectorySublist","setPath","enterToDirectory","directory","setFileListFilter","search","setContextMenuVisible","visible","setVisibleDialogSolidLogin","setVisibleDialogSolidLogout","setVisibleDialogCreateFolder","setVisibleDialogCreateFile","setVisibleDialogRename","setVisibleDialogMove","percentage","File","_this$props","props","isSelected","handleClick","handleDoubleClick","handleContextMenu","avatarStyle","backgroundColor","blue","realSize","react_default","className","onClick","onDoubleClick","onContextMenu","data-selected","ListItem_default","ListItemAvatar_default","Avatar_default","style","Folder_default","InsertDriveFile_default","ListItemText_default","primary","decodeURI","secondary","Component","connect","ownProps","filePath","event","preventDefault","stopPropagation","x","clientX","touches","pageX","y","clientY","pageY","shiftKey","setContextMenuPosition","ctrlKey","FileListEmptyMessage","withStyles","theme","progress","margin","spacing","unit","classes","Grid_default","container","justify","CircularProgress_default","color","FileList","fileListComponent","Components_File_File","Loader_Loader","Components_FileList_FileListEmptyMessage","toLocaleLowerCase","callback","handleClose","MenuItem_default","ListItemIcon_default","CreateNewFolder_default","Typography_default","variant","CloudUpload_default","PermIdentity_default","Clear_default","ThreeDotsMenu","anchorEl","_this","setState","currentTarget","marginLeft","IconButton_default","aria-label","aria-owns","aria-haspopup","MoreVert_default","Menu_default","open","onClose","ContextMenuActions_CreateFolderAction","ContextMenuActions_CreateFileAction","ContextMenuActions_UploadFileAction","ContextMenuActions_SolidLogoutAction","ContextMenuActions_SolidLoginAction","React","BreadcrumbText","handleClickPath","rootTitle","handleGoBack","canGoBack","separator","rootPath","data-index","lastPath","directories","Button_default","display","KeyboardArrowLeft_default","paths","defineProperty","breakpoints","up","root","width","marginBottom","grow","flexGrow","menuButton","marginRight","title","position","borderRadius","shape","fade","palette","common","white","&:hover","searchIcon","height","pointerEvents","alignItems","justifyContent","inputRoot","inputInput","paddingTop","paddingRight","paddingBottom","paddingLeft","transition","transitions","create","&:focus","handleChange","newPath","enterToPreviousDirectoryByIndex","AppBar_default","Toolbar_default","noWrap","Components_Breadcrumb_BreadcrumbText","Search_default","InputBase_default","placeholder","onChange","input","Navbar_ThreeDotsMenu","OpenInBrowser_default","Delete_default","HowToVote_default","FileCopy_default","WrapText_default","archiveName","generateAsync","Archive_default","Unarchive_default","_getState8","downloadName","CloudDownload_default","Link_default","ContextMenu","anchorReference","anchorPosition","top","left","transformOrigin","vertical","horizontal","PaperProps","ContextMenuActions_OpenAction","ContextMenuActions_OpenInNewTabAction","ContextMenuActions_DownloadAction","ContextMenuActions_ZipAction","ContextMenuActions_ExtractAction","EditAction","ContextMenuActions_CopyAction","ContextMenuActions_MoveAction","RenameAction","ContextMenuActions_RemoveAction","FormDialog","storageLocation","origin","form","querySelector","handleSubmit","handleLogin","Dialog_default","aria-labelledby","fullWidth","maxWidth","DialogTitle_default","DialogContent_default","TextField_default","autoFocus","bind","DialogActions_default","disabled","handleLogout","lastBlobUrl","blobUrl","src","alt","handleOpen","provider","react_plyr_lib_default","_this2","fetch","t","handleSave","textArea","minHeight","defaultValue","DialogContentText_default","updateTextFile","createFolderName","handleCreate","encodeURI","createFile","realName","FileSublist","FileListSublist","File_FileSublist_FileSublist","selectedPath","canMove","FileList_FileListSublist_FileListSublist","_getState15","canCopy","UploadFileList","list","dense","List_default","component","FileUploader","refs","inputfile","handleReset","handleSelectedFiles","styles","inputreset","htmlFor","ref","multiple","FileUploader_UploadFileList","handleUpload","canUpload","Components_FileUploader_FileUploader","LinearProgress_default","target","Dialogs","SolidLogin","SolidLogout","Content","Media","Edit","CreateFolder","CreateFile","Move","Copy","Rename","UploadFile","DynamicSnackbar","notificationDuration","Snackbar_default","anchorOrigin","autoHideDuration","ContentProps","aria-describedby","close","Close_default","padding","createMuiTheme","typography","useNextVariants","App","init","core_styles","handleHideContextMenu","Navbar","Components_FileList_FileList","Components_ContextMenu_ContextMenu","Notification_DynamicSnackbar","Dialogs_Dialogs","tagName","store","createStore","applyMiddleware","thunk","ReactDOM","render","react_redux_es","src_App","getElementById","process","addEventListener","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.7e29e1fe.chunk.js","sourcesContent":["var map = {\n\t\"./N3Lexer\": 113,\n\t\"./N3Lexer.js\": 113,\n\t\"./N3Parser\": 114,\n\t\"./N3Parser.js\": 114,\n\t\"./N3Store\": 152,\n\t\"./N3Store.js\": 152,\n\t\"./N3StreamParser\": 153,\n\t\"./N3StreamParser.js\": 153,\n\t\"./N3StreamWriter\": 161,\n\t\"./N3StreamWriter.js\": 161,\n\t\"./N3Util\": 115,\n\t\"./N3Util.js\": 115,\n\t\"./N3Writer\": 120,\n\t\"./N3Writer.js\": 120\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 266;","export const defaultState = {\n    path: [],\n    pathSublist: [],\n    host: null,\n    isLoggedIn: false,\n    webId: null,\n    fileList: [],\n    fileListSublist: [],\n    fileListFilter: null,\n    contextMenuVisible: null,\n    contextMenuPosition: [],\n    contextMenuPositionElement: null,\n    selectedFiles: [],\n    selectedFolderSublist: null,\n    loading: false,\n    loadingSublist: false,\n    errorMsg: null,\n    visibleDialogSolidLogin: false,\n    visibleDialogSolidLogout: false,\n    visibleDialogCreateFolder: false,\n    visibleDialogCreateFile: false,\n    visibleDialogUploadFile: false,\n    visibleDialogContent: false,\n    visibleDialogMedia: false,\n    visibleDialogEdit: false,\n    visibleDialogMove: false,\n    visibleDialogCopy: false,\n    visibleDialogRename: false,\n    fileContentBlobUrl: null,\n    fileUploadProgress: 0,\n    fileUploadList: []\n};\n\n/**\n * Main content reducer\n * @param {Object} state\n * @param {Object} action\n * @returns {Object}\n */\nconst MainReducer = (state = defaultState, action) => {\n    switch (action.type) {\n        case 'SET_PATH':\n            return Object.assign({}, state, {\n                path: action.value\n            });\n        case 'SET_PATH_SUB_LIST':\n            return Object.assign({}, state, {\n                pathSublist: action.value\n            });\n        case 'SET_HOST':\n            return Object.assign({}, state, {\n                host: action.value\n            });\n        case 'SET_IS_LOGGED_IN':\n            return Object.assign({}, state, {\n                isLoggedIn: action.value\n            });\n        case 'SET_WEB_ID':\n            return Object.assign({}, state, {\n                webId: action.value\n            });\n        case 'ENTER_TO_DIRECTORY':\n            return Object.assign({}, state, {\n                path: [...state.path, action.value]\n            });\n        case 'ENTER_TO_DIRECTORY_SUB_LIST':\n            return Object.assign({}, state, {\n                pathSublist: [...state.pathSublist, action.value]\n            });\n        case 'SET_FILE_LIST':\n            return Object.assign({}, state, {\n                fileList: action.value.sort((a, b) => a.type < b.type ? -1 : a.name.toLowerCase() > b.name.toLowerCase())\n            });\n        case 'SET_FILE_LIST_SUB_LIST':\n            return Object.assign({}, state, {\n                fileListSublist: action.value.sort((a, b) => a.type < b.type ? -1 : a.name.toLowerCase() > b.name.toLowerCase())\n            });\n        case 'SET_FILE_LIST_FILTER':\n            return Object.assign({}, state, {\n                fileListFilter: action.value\n            });\n        case 'SET_CONTEXT_MENU_VISIBLE':\n            return Object.assign({}, state, {\n                contextMenuVisible: action.value\n            });\n        case 'SET_CONTEXT_MENU_POSITION':\n            return Object.assign({}, state, {\n                contextMenuPosition: action.value\n            });\n        case 'SET_CONTEXT_MENU_POSITION_ELEMENT':\n            return Object.assign({}, state, {\n                contextMenuPositionElement: action.value\n            });\n        case 'SET_SELECTED_FILES':\n            return Object.assign({}, state, {\n                selectedFiles: (action.value).filter((f, i, self) => self.map(ff => ff.name).indexOf(f.name) === i)\n            });\n        case 'SET_SELECTED_FOLDER_SUB_LIST':\n            return Object.assign({}, state, {\n                selectedFolderSublist: action.value\n            });\n\n        case 'TOGGLE_SELECTED_FILE':\n            return Object.assign({}, state, {\n                selectedFiles: state.selectedFiles.find(f => f.name === action.value.name) ?\n                    state.selectedFiles.filter(f => f.name !== action.value.name) :\n                    [...state.selectedFiles, action.value]\n            });\n        case 'SET_FILE_UPLOAD_PROGRESS':\n            return Object.assign({}, state, {\n                fileUploadProgress: parseInt(action.value || 0)\n            });\n        case 'SET_LOADING':\n            return Object.assign({}, state, {\n                loading: action.value\n            });\n        case 'SET_LOADING_SUB_LIST':\n            return Object.assign({}, state, {\n                loadingSublist: action.value\n            });\n        case 'SET_ERROR_MSG':\n            return Object.assign({}, state, {\n                errorMsg: action.value\n            });\n\n        case 'SET_VISIBLE_DIALOG_SOLID_LOGIN':\n            return Object.assign({}, state, {\n                visibleDialogSolidLogin: !!action.value\n            });\n\n        case 'SET_VISIBLE_DIALOG_SOLID_LOGOUT':\n            return Object.assign({}, state, {\n                visibleDialogSolidLogout: !!action.value\n            });\n\n        case 'SET_VISIBLE_DIALOG_CREATE_FOLDER':\n            return Object.assign({}, state, {\n                visibleDialogCreateFolder: !!action.value\n            });\n\n        case 'SET_VISIBLE_DIALOG_CREATE_FILE':\n            return Object.assign({}, state, {\n                visibleDialogCreateFile: !!action.value\n            });\n\n        case 'SET_VISIBLE_DIALOG_UPLOAD_FILE':\n            return Object.assign({}, state, {\n                visibleDialogUploadFile: !!action.value\n            });\n\n        case 'SET_VISIBLE_DIALOG_CONTENT':\n            return Object.assign({}, state, {\n                visibleDialogContent: !!action.value\n            });\n\n        case 'SET_VISIBLE_DIALOG_MEDIA':\n            return Object.assign({}, state, {\n                visibleDialogMedia: !!action.value\n            });\n\n        case 'SET_VISIBLE_DIALOG_EDIT':\n            return Object.assign({}, state, {\n                visibleDialogEdit: !!action.value\n            });\n\n        case 'SET_VISIBLE_DIALOG_MOVE':\n            return Object.assign({}, state, {\n                visibleDialogMove: !!action.value\n            });\n        case 'SET_VISIBLE_DIALOG_COPY':\n            return Object.assign({}, state, {\n                visibleDialogCopy: !!action.value\n            });\n        case 'SET_VISIBLE_DIALOG_RENAME':\n            return Object.assign({}, state, {\n                visibleDialogRename: !!action.value\n            });\n        case 'SET_FILE_UPLOAD_LIST':\n            return Object.assign({}, state, {\n                fileUploadList: action.value\n            });\n\n        case 'SET_FILE_CONTENT':\n            /**\n             * Removing old blob url\n             */\n            state.fileContentBlobUrl && URL.revokeObjectURL(state.fileContentBlobUrl);\n            return Object.assign({}, state, {\n                fileContentBlobUrl: action.value ? URL.createObjectURL(action.value) : null\n            });\n\n        default:\n            return state;\n    }\n};\n\nexport default MainReducer;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","let host = null;\n\nexport default {\n    getHost() {\n        return host;\n    },\n    setHost(newHost) {\n        host = newHost;\n        while (host.slice(-1) === '/')\n            host = host.slice(0, -1);\n    },\n\n    isEditableFilePattern: /\\.(txt|diff?|patch|svg|asc|cnf|cfg|conf|html?|cfm|cgi|aspx?|ini|pl|py|md|css|cs|jsx?|jsp|log|htaccess|htpasswd|gitignore|gitattributes|env|json|atom|eml|rss|markdown|sql|xml|xslt?|sh|rb|as|bat|cmd|cob|for|ftn|frm|frx|inc|lisp|scm|coffee|php[3-6]?|java|c|cbl|go|h|scala|vb|tmpl|lock|go|yml|yaml|tsv|lst|ttl)$/i,\n    isImageFilePattern: /\\.(jpe?g|gif|bmp|png|svg|tiff?)$/i,\n    isMediaFilePattern: /\\.(mp3|ogg|wav|mp4|webm)$/i,\n    isVideoFilePattern: /\\.(mp4|webm|ogg)$/i,\n    isExtractableFilePattern: /\\.(zip)$/i,\n\n    actions: {\n        create_folder: true,\n        move: true,\n        copy: true,\n        copy_folder: true,\n        compress: true,\n        extract: true,\n        edit: true,\n        remove: true,\n        upload: true,\n        upload_by_chunks: true,\n        preview_images: true,\n    }\n};\n","// Based on https://github.com/jeff-zucker/solid-file-client/blob/master/src/folderUtils.js\nimport * as rdflib from 'rdflib';\n\nconst folderType = 'dir';\nconst fileType = 'file';\n\n/*\nexport function getStats(graph, subjectName) {\n    const subjectNode = rdflib.sym(subjectName);\n    const mod = rdflib.sym('http://purl.org/dc/terms/modified');\n    const size = rdflib.sym('http://www.w3.org/ns/posix/stat#size');\n    // const mtime = rdflib.sym('http://www.w3.org/ns/posix/stat#mtime');\n    let modified = graph.any(subjectNode, mod, undefined);\n    if (typeof (modified) === \"undefined\") return false;\n    else modified = modified.value;\n    return {\n        modified: modified,\n        size: graph.any(subjectNode, size, undefined).value,\n        // mtime: graph.any(subjectNode, mtime, undefined).value,\n    };\n}\n*/\n\nexport function getSizeByGraph(graph, subjectName) {\n    const subjectNode = rdflib.sym(subjectName);\n    const nsSize = rdflib.sym('http://www.w3.org/ns/posix/stat#size');\n    const size = graph.any(subjectNode, nsSize, undefined);\n\n    return (size && 'value' in size) ? size.value : undefined;\n}\n\n/** A type used internally to indicate we are handling a folder */\n/**\n * @param {rdflib.IndexedFormula} graph a rdflib.graph() database instance\n * @param {string} url location of the folder\n * @returns {string} content mime-type of a file, If it's a folder, return 'folder', 'unknown' for not sure\n */\nexport function getFileType(graph, url) {\n    const folderNode = rdflib.sym(url);\n    const isAnInstanceOfClass = rdflib.sym('http://www.w3.org/1999/02/22-rdf-syntax-ns#type');\n    const types = graph.each(folderNode, isAnInstanceOfClass, undefined);\n    for (const index in types) {\n        const contentType = types[index].value;\n        if (contentType.match('ldp#BasicContainer'))\n            return folderType;\n        else\n            return fileType;\n    }\n    return 'unknown';\n}\nexport function getFolderItems(graph, subj) {\n    const files = [];\n    const folders = [];\n    graph.each(\n        rdflib.sym(subj),\n        rdflib.sym('http://www.w3.org/ns/ldp#contains'),\n        undefined\n    ).forEach(item => {\n        let newItem = {}\n        newItem.type = getFileType(graph, item.value)\n        newItem.size = getSizeByGraph(graph, item.value);\n        newItem.label = decodeURIComponent(item.value).replace(/.*\\//, '')\n\n        if (newItem.type === folderType) {\n            item.value = item.value.replace(/[/]+/g, '/');\n            item.value = item.value.replace(/https:/, 'https:/');\n            const name = item.value.replace(/\\/$/, '')\n            newItem.name = name.replace(/.*\\//, '')\n            newItem.url = item.value\n\n            folders.push(newItem);\n        }\n        else {\n            newItem.url = item.value\n            newItem.name = item.value.replace(/.*\\//, '')\n\n            files.push(newItem);\n        }\n    });\n\n    return { files, folders };\n}\n\n/**\n * @param {string} text RDF text that can be passed to $rdf.parse()\n * @param {*} content the request body\n * @param {string} contentType Content-Type of the request\n * @returns {$rdf.IndexedFormula} a $rdf.graph() database instance with parsed RDF\n */\nexport async function text2graph(text, url, contentType) {\n    return new Promise((resolve, reject) => {\n        contentType = contentType || guessFileType(url)\n        var graph = rdflib.graph();\n        try {\n            rdflib.parse(text, graph, url, contentType);\n            resolve(graph);\n        } catch (err) {\n            reject(err)\n        }\n    })\n}\n\n/*cjs*/ function guessFileType(url) {\n    const ext = url.replace(/.*\\./, '');\n    if (ext.match(/\\/$/)) return folderType;\n    if (ext.match(/(md|markdown)/)) return 'text/markdown';\n    if (ext.match(/html/)) return 'text/html';\n    if (ext.match(/xml/)) return 'text/xml';\n    if (ext.match(/ttl/)) return 'text/turtle';\n    if (ext.match(/n3/)) return 'text/n3';\n    if (ext.match(/rq/)) return 'application/sparql';\n    if (ext.match(/css/)) return 'text/css';\n    if (ext.match(/txt/)) return 'text/plain';\n    if (ext.match(/json/)) return 'application/json';\n    if (ext.match(/js/)) return 'application/javascript';\n    if (ext.match(/(png|gif|jpeg|tif)/)) return 'image';\n    if (ext.match(/(mp3|aif|ogg)/)) return 'audio';\n    if (ext.match(/(avi|mp4|mpeg)/)) return 'video';\n    /* default */ return 'text/turtle';\n}\n","import config from './../config.js';\nimport * as folderUtils from './folderUtils.js';\nimport * as solidAuth from 'solid-auth-client';\n\n/**\n * @typedef {Object} FolderItems\n * @property {Array<{Object}>} files\n * @property {Array<{Object}>} folders\n */\n\n\n/**\n * Fetch API to get item\n * @param {String} path\n * @param {String} fileName\n * @returns {Response}\n */\nexport async function fetchFile(path, fileName = '') {\n    const url = buildFileUrl(path, fileName);\n    return solidAuth.fetch(url)\n        .then(assertSuccessfulResponse);\n};\n\n\n/**\n * Fetch API to get folder\n * @param {String} path\n * @param {String} folderName\n * @returns {Response}\n */\nexport async function fetchFolder(path, folderName = '') {\n    const url = buildFolderUrl(path, folderName);\n    return solidAuth.fetch(url, { headers: { \"Accept\": \"text/turtle\" } })\n        .then(assertSuccessfulResponse);\n};\n\n\n/**\n * Fetch API to retrieve object containing a files and folders array\n * @param {String} path\n * @param {String} folderName\n * @returns {Promise<FolderItems>}\n */\nexport async function readFolder(path, folderName = '') {\n    const url = buildFolderUrl(path, folderName);\n\n    const response = await fetchFolder(path, folderName);\n    const folderRDF = await response.text();\n    const graph = await folderUtils.text2graph(folderRDF, url, 'text/turtle');\n    const folderItems = folderUtils.getFolderItems(graph, url);\n\n    return folderItems;\n}\n\n\n/**\n * Fetch API to move items\n * @param {String} path\n * @param {String} destination\n * @param {Array<String>} itemNames\n * @returns {Response}\n */\nexport async function moveItems(path, destination, itemNames) {\n    await copyItems(path, destination, itemNames);\n    return removeItems(path, itemNames);\n};\n\n\n/**\n * Fetch API to rename a file\n * @param {String} path\n * @param {String} oldName\n * @param {String} newName\n * @returns {Response}\n */\nexport async function renameFile(path, oldName, newName) {\n    await copyFile(path, oldName, path, newName);\n    return removeItem(path, oldName);\n};\n\n\n/**\n * Fetch API to rename a folder\n * @param {String} path\n * @param {String} oldFolderName\n * @param {String} newFolderName\n * @returns {Response}\n */\nexport async function renameFolder(path, oldFolderName, newFolderName) {\n    await copyFolder(path, oldFolderName, path, newFolderName);\n    return removeFolderRecursively(path, oldFolderName);\n};\n\n\n/**\n * Fetch API to copy files\n * @param {String} path\n * @param {String} destination\n * @param {Array} itemNames\n * @returns {Response}\n */\nexport async function copyItems(path, destination, itemNames) {\n    let { files, folders } = await readFolder(path);\n\n    files = files.filter(({ name }) => itemNames.includes(name));\n    folders = folders.filter(({ name }) => itemNames.includes(name));\n\n    const promises = [\n        ...files.map(({ name }) => copyFile(path, name, destination, name)),\n        ...folders.map(({ name }) => copyFolder(path, name, destination, name))\n    ];\n\n    await Promise.all(promises);\n    return new Response();\n};\n\n\n/**\n * Fetch API to copy a file\n * @param {String} originPath\n * @param {String} originName\n * @param {String} destinationPath\n * @param {String} destinationName\n * @returns {Response}\n */\nexport async function copyFile(originPath, originName, destinationPath, destinationName) {\n    const destinationUrl = buildFileUrl(destinationPath, destinationName);\n\n    const fileResponse = await fetchFile(originPath, originName);\n    const content = (fileResponse.headers.get('Content-Type') === 'application/json') ?\n        await fileResponse.text()\n        : await fileResponse.blob();\n\n    return solidAuth.fetch(destinationUrl, {\n        method: 'PUT',\n        body: content\n    }).then(assertSuccessfulResponse);\n}\n\n\n/**\n * Fetch API to copy a folder recursively\n * @param {String} originPath \n * @param {String} originName \n * @param {String} destinationPath \n * @param {String} destinationName \n * @return {Response}\n */\nexport async function copyFolder(originPath, originName, destinationPath, destinationName) {\n    // TODO: Combine these two promises for better performance\n    await createFolder(destinationPath, destinationName);\n    const { files, folders } = await readFolder(originPath, originName);\n\n    const promises = [\n        ...files.map(({ name }) => copyFile(`${originPath}/${originName}`, name, `${destinationPath}/${destinationName}`, name)),\n        ...folders.map(({ name }) => copyFolder(`${originPath}/${originName}`, name, `${destinationPath}/${destinationName}`, name))\n    ];\n\n    await Promise.all(promises);\n    return new Response();\n}\n\n\n/**\n * Fetch API to upload files\n * @param {String} path\n * @param {FileList} fileList\n * @returns {Response}\n */\nexport async function upload(path, fileList) {\n    const promises = Array.from(fileList).map(file => updateItem(path, file.name, file));\n    await Promise.all(promises);\n    return new Response();\n};\n\n\n/**\n * Fetch API to create a folder\n * @param {String} path\n * @param {String} folderName\n * @returns {Response}\n */\nexport async function createFolder(path, folderName) {\n    if (await folderExists(path, folderName))\n        return new Response();\n\n    return createItem(path, folderName, '', 'dir');\n}\n\n\n/**\n * Fetch API to create update or create an item\n * @param {String} path\n * @param {String} itemName\n * @param {String} content\n * @param {String} contentType\n * @returns {Response}\n */\nexport async function updateItem(path, itemName, content, contentType) {\n    await removeItem(path, itemName);\n    return createItem(path, itemName, content, contentType);\n}\n\n\n/**\n * Fetch API to create create an item\n * @param {String} path\n * @param {String} itemName\n * @param {String} content\n * @param {String} contentType\n * @returns {Response}\n */\nasync function createItem(path, itemName, content, contentType) {\n    const baseUrl = `${config.getHost()}${path}`;\n    const link = (contentType === 'dir') ?\n        '<http://www.w3.org/ns/ldp#BasicContainer>; rel=\"type\"'\n        : '<http://www.w3.org/ns/ldp#Resource>; rel=\"type\"';\n\n    const request = {\n        method: 'POST',\n        headers: {\n            link,\n            slug: itemName,\n            'Content-Type': contentType\n        },\n        body: content\n    };\n\n    return solidAuth.fetch(baseUrl, request)\n        .then(assertSuccessfulResponse);\n}\n\n\n/**\n * Fetch API to remove multiple items\n * @param {String} path\n * @param {Array} itemNames\n * @returns {Response}\n */\nexport async function removeItems(path, itemNames) {\n    await Promise.all(itemNames.map(itemName => removeItem(path, itemName)));\n    return new Response();\n};\n\n\n/**\n * Fetch API to remove one item\n * @param {String} path \n * @param {String} itemName \n * @returns {Response}\n */\nexport async function removeItem(path, itemName) {\n    const url = buildFileUrl(path, itemName);\n\n    const response = await solidAuth.fetch(url, { method: 'DELETE' });\n    if (response.status === 409 || response.status === 301) {\n        // Solid pod returns 409 if the item is a folder and is not empty\n        // Solid pod returns 301 if is attempted to read a folder url without '/' at the end (from buildFileUrl)\n        return removeFolderRecursively(path, itemName);\n    }\n    else if (response.status === 404) {\n        // Don't throw if the item didn't exist\n        return response;\n    }\n    else {\n        assertSuccessfulResponse(response);\n        return response;\n    }\n}\n\n\n/**\n * Fetch API to remove contents and folder itself recursively\n * @param {String} path \n * @param {String} folderName\n * @returns {Response}\n */\nexport async function removeFolderRecursively(path, folderName) {\n    await removeFolderContents(path, folderName);\n    return removeItem(path, folderName);\n}\n\n\n/**\n * Fetch API to remove contents of one folder recursively\n * @param {String} path \n * @param {String} folderName\n * @returns {Response}\n */\nexport async function removeFolderContents(path, folderName) {\n    const folderPath = `${path}/${folderName}`;\n\n    const { files, folders } = await readFolder(path, folderName);\n    const promises = [\n        ...files.map(({ name }) => removeItem(folderPath, name)),\n        ...folders.map(({ name }) => removeFolderRecursively(folderPath, name))\n    ];\n    await Promise.all(promises);\n    return new Response();\n}\n\n\n/**\n * Fetch API to check if a folder exists\n * @param {String} path\n * @param {String} folderName\n * @returns {Promise<Boolean>}\n */\nexport async function folderExists(path, folderName) {\n    try {\n        await fetchFolder(path, folderName);\n        return true;\n    }\n    catch (error) {\n        if (error instanceof Response && error.status === 404)\n            return false;\n\n        throw error;\n    }\n}\n\n\n/**\n * Build up an url from a path relative to the storage location and a folder name\n * @param {String} path\n * @param {String} folderName\n * @return {String}\n */\nfunction buildFolderUrl(path, folderName = '') {\n    return buildFileUrl(path, folderName) + '/';\n}\n\n\n/**\n * Build up an url from a path relative to the storage location and a fileName\n * @param {String} path \n * @param {Sting} fileName \n * @return {String}\n */\nfunction buildFileUrl(path, fileName = '') {\n    let url = `${config.getHost()}${path}/${fileName}`;\n    while (url.slice(-1) === '/')\n        url = url.slice(0, -1);\n\n    return url;\n}\n\n\n/**\n * Throw response if fetch response was unsuccessful\n * @param {Response} response\n * @returns {Response}\n */\nconst assertSuccessfulResponse = (response) => {\n    if (!response.ok)\n        throw response;\n    return response;\n};","import * as API from './Api.js';\nimport config from './../config.js';\nimport * as JSZip from 'jszip';\n\n\n/**\n * Log a fetch response error and throw it again\n * @param {*} error \n */\nconst handleFetchError = async (error) => {\n    let detailedErrorMessage = '';\n    let displayErrorMessage;\n\n    console.group('handleFetchError');\n    if (error instanceof Response) {\n        detailedErrorMessage = await error.text();\n\n        console.error(`url: ${error.url}`);\n        console.error(`status: ${error.status}`);\n\n        const displayMessages = {\n            '401': `The ressource at ${error.url} requires you to login.`,\n            '403': `You don't have permission to access the ressource at ${error.url}.\n            Please make sure that you are logged in with the correct account.\n            If the server runs with version 5.0.0 or higher, make sure you gave this app read/write permission`,\n            '404': `The ressource at ${error.url} was not found`,\n            '500': `An internal server error occured...\n            ${detailedErrorMessage}`,\n        };\n        if (error.status in displayMessages)\n            displayErrorMessage = displayMessages[error.status];\n    }\n    else if (error instanceof Error) {\n        detailedErrorMessage = error.message;\n        console.error(error.stack);\n    }\n    else if (typeof error === 'string') {\n        detailedErrorMessage = error;\n    }\n    else {\n        detailedErrorMessage = JSON.stringify(error);\n    }\n    console.error(`errorMessage: ${detailedErrorMessage}`);\n    console.error(`error: ${error}`);\n    console.groupEnd();\n\n    throw new Error((displayErrorMessage) ? displayErrorMessage : detailedErrorMessage);\n}\n\n/**\n * Clean path string removing double slashes and prepending a slash if non-empty\n * @param {String} path\n * @returns {String}\n */\nconst fixPath = (path) => {\n    if (path === \"\")\n        return path;\n    return ('/' + path).replace(/\\/\\//g, '/');\n};\n\n/**\n * Wrap API response for retrieving item list\n * @param {String} path\n * @returns {Promise<API.FolderItems>}\n */\nexport const getItemList = (path) => {\n    path = fixPath(path);\n    return API.readFolder(path)\n        .then(({ files, folders }) => [...files, ...folders])\n        .catch(handleFetchError);\n};\n\n/**\n * Wrap API response for retrieving file content\n * @param {String} path\n * @param {String} filename\n * @returns {Promise<Blob>}\n */\nexport const getFileBlob = (path, filename) => {\n    path = fixPath(path);\n    return API.fetchFile(path, filename)\n        .then(response => response.blob())\n        .catch(handleFetchError);\n};\n\n\n/**\n * Wrap API response for renaming a file\n * @param {String} path\n * @param {String} fileName\n * @param {String} newFileName\n * @returns {Promise<Response>}\n */\nexport const renameFile = (path, fileName, newFileName) => {\n    path = fixPath(path);\n    return API.renameFile(path, fileName, newFileName)\n        .catch(handleFetchError)\n};\n\n\n/**\n * Wrap API response for renaming a folder\n * @param {String} path\n * @param {String} folderName\n * @param {String} newFolderName\n * @returns {Promise<Response>}\n */\nexport const renameFolder = (path, folderName, newFolderName) => {\n    path = fixPath(path);\n    return API.renameFolder(path, folderName, newFolderName)\n        .catch(handleFetchError)\n};\n\n/**\n * Wrap API response for creating a folder\n * @param {String} path\n * @param {String} folder\n * @returns {Promise<Response>}\n */\nexport const createFolder = (path, folder) => {\n    path = fixPath(path);\n    if (!(folder || '').trim()) {\n        return Promise.reject('Invalid folder name');\n    }\n    return API.createFolder(path, folder)\n        .catch(handleFetchError)\n};\n\n/**\n * Wrap API response for removing a file or folder\n * @param {String} path\n * @param {Array<String>} filenames\n * @returns {Promise<Response>}\n */\nexport const removeItems = (path, filenames) => {\n    path = fixPath(path);\n    if (!filenames.length) {\n        return Promise.reject('No files to remove');\n    }\n    return API.removeItems(path, filenames)\n        .catch(handleFetchError)\n};\n\n/**\n * Wrap API response for moving a file or folder\n * @param {String} path\n * @param {String} destination\n * @param {Array<String>} filenames\n * @returns {Promise<Response>}\n */\nexport const moveItems = (path, destination, filenames) => {\n    path = fixPath(path);\n    destination = fixPath(destination);\n    if (!filenames.length) {\n        return Promise.reject('No files to move');\n    }\n    return API.moveItems(path, destination, filenames)\n        .catch(handleFetchError)\n};\n\n/**\n * Wrap API response for copying a file or folder\n * @param {String} path\n * @param {String} destination\n * @param {Array<String>} filenames\n * @returns {Promise<Response>}\n */\nexport const copyItems = (path, destination, filenames) => {\n    path = fixPath(path);\n    destination = fixPath(destination);\n    if (!filenames.length) {\n        return Promise.reject('No files to copy');\n    }\n    return API.copyItems(path, destination, filenames)\n        .catch(handleFetchError)\n};\n\n/**\n * Wrap API response for uploading files\n * @param {String} path\n * @param {Object<FileList>} fileList\n * @returns {Promise<Response>}\n */\nexport const uploadFiles = (path, fileList) => {\n    path = fixPath(path);\n\n    if (!fileList.length) {\n        return Promise.reject('No files to upload');\n    }\n    return API.upload(path, fileList)\n        .catch(handleFetchError)\n};\n\n/**\n * Wrap API response for uploading a file\n * @param {String} path\n * @param {String} fileName\n * @param {Blob} content\n * @returns {Promise<Response>}\n */\nexport const updateFile = (path, fileName, content) => {\n    path = fixPath(path);\n    return API.updateItem(path, fileName, content)\n        .catch(handleFetchError);\n};\n\n/**\n * Wrap API response for zipping multiple items\n * @param {String} path\n * @param {Array<API.FolderItems>} itemList\n * @returns {Promise<Object>}\n */\nexport const getAsZip = (path, itemList) => {\n    path = fixPath(path);\n    const zip = new JSZip();\n\n    return addItemsToZip(zip, path, itemList)\n        .then(() => zip);\n}\n\n/**\n * Add items to a zip object recursively\n * @param {Object} zip\n * @param {String} path\n * @param {Array<API.FolderItems>} itemList\n * @returns {Promise<Object>}\n */\nconst addItemsToZip = (zip, path, itemList) => {\n    const promises = itemList.map(async item => {\n        if (item.type === 'dir') {\n            const zipFolder = zip.folder(item.name);\n            const folderPath = `${path}/${item.name}`;\n            const folderItems = await getItemList(folderPath);\n            return addItemsToZip(zipFolder, folderPath, folderItems);\n        }\n        else if (item.type === 'file') {\n            const blob = await getFileBlob(path, item.name);\n            return zip.file(item.name, blob, { binary: true });\n        }\n    });\n\n    return Promise.all(promises);\n}\n\n/**\n * Wrap API response for extracting a zip archive\n * @param {String} path\n * @param {String} destination\n * @param {String} fileName\n */\nexport const extractZipArchive = async (path, destination = path, fileName) => {\n    const blob = await getFileBlob(path, fileName);\n    const zip = await JSZip.loadAsync(blob);\n\n    return uploadExtractedZipArchive(zip, destination);\n};\n\n/**\n * Recursively upload all files and folders from an extracted zip archive\n * @param {Object} zip \n * @param {String} destination \n * @param {String} curFolder \n */\nasync function uploadExtractedZipArchive(zip, destination, curFolder = '') {\n    const promises = getItemsInZipFolder(zip, curFolder)\n        .map(async item => {\n            const relativePath = item.name;\n            const itemName = getItemNameFromPath(relativePath);\n            const path = getParentPathFromPath(`${destination}/${relativePath}`);\n\n            if (item.dir) {\n                await createFolder(path, itemName);\n                return uploadExtractedZipArchive(zip, destination, relativePath);\n            }\n            else {\n                const blob = await item.async('blob');\n                return updateFile(path, itemName, blob);\n            }\n        });\n\n    return Promise.all(promises);\n};\n\nfunction getItemsInZipFolder(zip, folderPath) {\n    return Object.keys(zip.files)\n        .filter(fileName => {\n            // Only items in the current folder and subfolders\n            const relativePath = fileName.slice(folderPath.length, fileName.length);\n            if (!relativePath || fileName.slice(0, folderPath.length) !== folderPath)\n                return false;\n            \n            // No items from subfolders\n            if (relativePath.includes('/') && relativePath.slice(0, -1).includes('/'))\n                return false;\n            \n            console.log(`found in folder: ${fileName}`);\n            return true;\n        })\n        .map(key => zip.files[key]);\n};\n\n\n/**\n * Calculate available actions for a file\n * @param {Object} file\n * @returns {Array<String>}\n */\nexport const getActionsByFile = (file, acts = []) => {\n    if (file.type === 'dir') {\n        acts.push('open');\n\n        typeof file.compressible !== 'undefined' ?\n            file.compressible && acts.push('compress') :\n            acts.push('compress');\n    }\n\n    if (file.type === 'file') {\n        config.isImageFilePattern.test(file.name) && acts.push('open');\n        config.isMediaFilePattern.test(file.name) && acts.push('open');\n\n        typeof file.editable !== 'undefined' ?\n            file.editable && acts.push('edit') :\n            config.isEditableFilePattern.test(file.name) && acts.push('edit');\n\n        typeof file.extractable !== 'undefined' ?\n            file.extractable && acts.push('extract') :\n            config.isExtractableFilePattern.test(file.name) && acts.push('extract');\n    }\n\n    acts.push('openInNewTab');\n    acts.push('download');\n    acts.push('copy');\n    acts.push('move');\n    acts.push('rename');\n    acts.push('perms');\n    acts.push('remove');\n\n    return acts;\n}\n\n/**\n * Calculate available actions for selected files, only leaving common actions\n * @param {Array<Object>} files\n * @returns {Array<String>}\n */\nexport const getActionsByMultipleFiles = (files, acts = []) => {\n    files.forEach(file => {\n        const fileActs = getActionsByFile(file);\n        // intersects previous actions with the following to leave only common actions\n        acts = acts.length ?\n            acts.filter(value => -1 !== fileActs.indexOf(value)) \n            : fileActs;\n    });\n\n    if (files.length > 1) {\n        const removeAction = name => acts.splice(acts.indexOf(name), acts.indexOf(name) > -1);\n        const addAction = name => acts.includes(name) || acts.push(name);\n        removeAction('open');\n        removeAction('openInNewTab');\n        removeAction('edit');\n        removeAction('rename');\n\n        addAction('compress');\n    }\n    return acts;\n}\n\n/**\n * Calculate file size by bytes in human readable format\n * @param {Number} bytes\n * @returns {String}\n */\nexport const getHumanFileSize = (bytes) => {\n    const e = (Math.log(bytes) / Math.log(1e3)) | 0;\n    return +(bytes / Math.pow(1e3, e)).toFixed(2) + ' ' + ('kMGTPEZY'[e - 1] || '') + 'B';\n};\n\n\nfunction getItemNameFromPath(path) {\n    path = path.endsWith('/') ? path.slice(0, -1) : path;\n    return path.substr(path.lastIndexOf('/') + 1);\n}\n\nfunction getParentPathFromPath(path) {\n    path = path.endsWith('/') ? path.slice(0, -1) : path;\n    path = path.substr(0, path.lastIndexOf('/'));\n    return path;\n}\n","import * as APIHandler from '../Api/ApiHandler.js';\nimport * as solidAuth from 'solid-auth-client';\nimport config from '../config.js';\n\n\nexport const solidLogin = () => (dispatch, getState) => {\n    dispatch(setLoading(true));\n\n    solidPopupLogin().then(webId => {\n        dispatch(setWebId(webId));\n        dispatch(setIsLoggedIn(true));\n        dispatch(setLoading(false));\n    }).catch(r => {\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoading(false));\n    });\n};\n\nasync function solidPopupLogin() {\n    let session = await solidAuth.currentSession();\n    if (!session) {\n        let popupUri = 'https://solid.community/common/popup.html';\n        session = await solidAuth.popupLogin({ popupUri });\n    }\n    return (session.webId);\n}\n\n\nexport const solidLogout = () => (dispatch, getState) => {\n    dispatch(setLoading(true));\n\n    solidAuth.logout().then(() => {\n        dispatch(setPath([]));\n        dispatch(setPathSublist([]));\n        dispatch(setFileList([]));\n        dispatch(setSelectedFiles([]));\n        dispatch(setIsLoggedIn(false));\n        dispatch(setWebId(''));\n        dispatch(setVisibleDialogSolidLogout(false));\n        dispatch(setVisibleDialogSolidLogin(true));\n        dispatch(setLoading(false));\n    }).catch(r => {\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoading(false));\n    });\n};\n\n\n/**\n * Request API to get file list for the selected path then refresh UI\n * @returns {Function}\n */\nexport const uploadFiles = (fileList) => (dispatch, getState) => {\n    const { path } = getState();\n    dispatch(setLoading(true));\n    dispatch(setSelectedFiles([]));\n    dispatch(setFileUploadProgress(50));\n\n    APIHandler.uploadFiles(path.join('/'), fileList).then(r => {\n        dispatch(setFileUploadProgress(100));\n        setTimeout(f => {\n            dispatch(resetFileUploader());\n        }, 300);\n        dispatch(refreshFileList());\n    }).catch(r => {\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoading(false));\n    });\n};\n\n\nexport const createFile = (fileName) => (dispatch, getState) => {\n    const { path } = getState();\n    dispatch(setLoading(true));\n\n    APIHandler.updateFile(path.join('/'), fileName, '').then(r => {\n        dispatch(setVisibleDialogCreateFile(false));\n        dispatch(refreshFileList());\n\n        APIHandler.getItemList(path.join('/')).then(itemList => {\n            const file = itemList.find(item => item.name === fileName || item.name === encodeURI(fileName));\n            dispatch(setSelectedFiles([file]));\n            dispatch(getFileContent(file.name));\n            dispatch(setVisibleDialogEdit(true));\n        });\n    });\n};\n\n\nexport const updateTextFile = (fileName, content) => (dispatch, getState) => {\n    const { path } = getState();\n    dispatch(setLoading(true));\n\n    APIHandler.updateFile(path.join('/'), fileName, content).then(r => {\n        dispatch(setVisibleDialogEdit(false));\n        dispatch(refreshFileList());\n        dispatch(setLoading(false));\n    }).catch(r => {\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoading(false));\n    });\n}\n\n/**\n * Request API to get file list for the selected path then refresh UI\n * @returns {Function}\n */\nexport const refreshFileList = () => (dispatch, getState) => {\n    const { path } = getState();\n    dispatch(setLoading(true));\n    dispatch(setSelectedFiles([]));\n    APIHandler.getItemList(path.join('/')).then(r => {\n        dispatch(setLoading(false));\n        dispatch(setFileList(r));\n    }).catch(r => {\n        dispatch(setFileList([]));\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoading(false));\n    });\n};\n\n\n/**\n * Request API to get file list for the selected path then refresh UI\n * @returns {Function}\n */\nexport const refreshFileListSublist = () => (dispatch, getState) => {\n    const { pathSublist } = getState();\n    dispatch(setLoadingSublist(true));\n    dispatch(setSelectedFolderSublist(null));\n\n    APIHandler.getItemList(pathSublist.join('/')).then(r => {\n        dispatch(setLoadingSublist(false));\n        dispatch(setFileListSublist(r));\n    }).catch(r => {\n        dispatch(setFileListSublist([]));\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoadingSublist(false));\n    });\n};\n\n\n/**\n * Request API to rename file then dispatch defined events\n * @param {String} fileName\n * @returns {Function}\n */\nexport const renameFile = (fileName, newFileName) => (dispatch, getState) => {\n    const { path } = getState();\n    dispatch(setLoading(true));\n    APIHandler.renameFile(path.join('/'), fileName, newFileName).then(blob => {\n        dispatch(setVisibleDialogRename(false));\n        dispatch(setLoading(false));\n        dispatch(refreshFileList());\n    }).catch(r => {\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoading(false));\n    });\n};\n\n/**\n * Request API to rename file then dispatch defined events\n * @param {String} folderName\n * @param {String} newFolderName\n * @returns {Function}\n */\nexport const renameFolder = (folderName, newFolderName) => (dispatch, getState) => {\n    const { path } = getState();\n    dispatch(setLoading(true));\n    APIHandler.renameFolder(path.join('/'), folderName, newFolderName).then(blob => {\n        dispatch(setVisibleDialogRename(false));\n        dispatch(setLoading(false));\n        dispatch(refreshFileList());\n    }).catch(r => {\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoading(false));\n    });\n};\n\n/**\n * Request API to download the specified items\n * @param {Array<Object>} itemList\n * @returns {Function}\n */\nexport const downloadItems = (itemList) => async (dispatch, getState) => {\n    const { path } = getState();\n\n    dispatch(setLoading(true));\n    try {\n        let blob;\n        let downloadName = itemList[0].name;\n        if (itemList.length === 1 && itemList[0].type === 'file') {\n            blob = await APIHandler.getFileBlob(path.join('/'), itemList[0].name);\n        }\n        else {\n            const zip = await APIHandler.getAsZip(path.join('/'), itemList);\n            blob = await zip.generateAsync({ type: 'blob' });\n\n            if (itemList.length > 1)\n                downloadName = 'Archive';\n            downloadName = `${downloadName}.zip`;\n        }\n\n        promptDownload(blob, downloadName);\n        dispatch(setLoading(false));\n    }\n    catch (e) {\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: e.toString()\n        });\n        dispatch(setLoading(false));\n    }\n};\n\n/**\n * Request API to upload the items as zip archive\n * @param {Array<Object>} itemList\n * @returns {Function}\n */\nexport const zipAndUpload = (itemList) => (dispatch, getState) => {\n    const { path } = getState();\n    const archiveName = (itemList.length === 1 && itemList[0].type === 'dir') ? `${itemList[0].name}.zip` : 'Archive.zip';\n\n    dispatch(setLoading(true));\n    APIHandler.getAsZip(path.join('/'), itemList)\n        .then(zip => zip.generateAsync({ type: 'blob' }))\n        .then(blob => APIHandler.updateFile(path.join('/'), archiveName, blob))\n        .then(() => {\n            dispatch(setLoading(false));\n            dispatch(refreshFileList());\n        })\n        .catch(r => {\n            dispatch({\n                type: 'SET_ERROR_MSG',\n                value: r.toString()\n            });\n            dispatch(setLoading(false));\n        });\n};\n\n/**\n * Request API for extracting a zip archive\n * @param {String} fileName\n * @returns {Function}\n */\nexport const extractZipFile = (fileName) => (dispatch, getState) => {\n    const { path } = getState();\n\n    dispatch(setLoading(true));\n    APIHandler.extractZipArchive(path.join('/'), path.join('/'), fileName).then(r => {\n        dispatch(setLoading(false));\n        dispatch(refreshFileList());\n    }).catch(r => {\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoading(false));\n    });\n};\n\n// code from https://stackoverflow.com/a/30832210/6548154\nfunction promptDownload(file, fileName) {\n    if (window.navigator.msSaveOrOpenBlob) // IE10+\n        window.navigator.msSaveOrOpenBlob(file, fileName);\n    else { // Others\n        const a = document.createElement(\"a\");\n        const url = URL.createObjectURL(file);\n        a.href = url;\n        a.download = fileName;\n        document.body.appendChild(a);\n        a.click();\n        setTimeout(() => {\n            document.body.removeChild(a);\n            window.URL.revokeObjectURL(url);\n        }, 0);\n    }\n}\n\n\nexport const openInNewTab = (fileName) => (dispatch, getState) => {\n    const { path } = getState();\n    const url = `${config.getHost()}/${path.length ? (path.join('/') + '/') : ''}${fileName}`;\n    window.open(url, '_blank');\n};\n\n\n/**\n * Request API to get file content then dispatch defined events\n * @param {String} fileName\n * @returns {Function}\n */\nexport const getFileContent = (fileName) => (dispatch, getState) => {\n    const { path } = getState();\n    dispatch(setLoading(true));\n    dispatch(setFileContent(null));\n    APIHandler.getFileBlob(path.join('/'), fileName).then(blob => {\n        dispatch(setFileContent(blob));\n        dispatch(setLoading(false));\n    }).catch(r => {\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoading(false));\n    });\n};\n\n\n/**\n * Request API to get file content and open the edit dialogue\n * @param {String} fileName\n * @returns {Function} \n */\nexport const loadAndEditFile = (fileName) => (dispatch, getState) => {\n    dispatch(getFileContent(fileName));\n    dispatch(setVisibleDialogEdit(true));\n};\n\n\n/**\n * Request API to get file content and display it\n * @param {String} fileName\n * @returns {Function} \n */\nexport const loadAndDisplayFile = (fileName) => (dispatch, getState) => {\n    dispatch(getFileContent(fileName));\n    dispatch(setVisibleDialogContent(true));\n};\n\n\n/**\n * Request API to display an audio or video file\n * @param {String} fileName\n * @returns {Function}\n */\nexport const displayMediaFile = (fileName) => (dispatch, getState) => {\n    dispatch(setVisibleDialogMedia(true));\n};\n\n\n/**\n * Request API to create a folder then dispatch defined events\n * @param {String} createFolderName\n * @returns {Function}\n */\nexport const createNewFolder = (createFolderName) => (dispatch, getState) => {\n    const { path } = getState();\n    dispatch(setLoading(true));\n\n    APIHandler.createFolder(path.join('/'), createFolderName).then(r => {\n        dispatch(setVisibleDialogCreateFolder(false));\n        dispatch(setLoading(false));\n        dispatch(refreshFileList());\n    }).catch(r => {\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoading(false));\n    });\n};\n\n\n/**\n * Request API to remove an item then dispatch defined events\n * @param {Array} filenames\n * @returns {Function}\n */\nexport const removeItems = (files) => (dispatch, getState) => {\n    const { path } = getState();\n    const filenames = files.map(f => f.name);\n\n    dispatch(setLoading(true));\n    APIHandler.removeItems(path.join('/'), filenames).then(r => {\n        dispatch(setLoading(false));\n        dispatch(refreshFileList());\n    }).catch(r => {\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoading(false));\n    });\n};\n\n\n/**\n * Request API to move an item then dispatch defined events\n * @param {Array} filenames\n * @returns {Function}\n */\nexport const moveItems = (files) => (dispatch, getState) => {\n    const { path, pathSublist, selectedFolderSublist } = getState();\n    const destination = pathSublist.join('/') + '/' + selectedFolderSublist.name;\n    const filenames = files.map(f => f.name);\n\n    dispatch(setLoading(true));\n    APIHandler.moveItems(path.join('/'), destination, filenames).then(r => {\n        dispatch(setLoading(false));\n        dispatch(setVisibleDialogMove(false));\n        dispatch(refreshFileList());\n    }).catch(r => {\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoading(false));\n    });\n};\n\n\n/**\n * Request API to copy an item then dispatch defined events\n * @param {Array} filenames\n * @returns {Function}\n */\nexport const copyItems = (files) => (dispatch, getState) => {\n    const { path, pathSublist, selectedFolderSublist } = getState();\n    const destination = pathSublist.join('/') + '/' + selectedFolderSublist.name;\n    const filenames = files.map(f => f.name);\n\n    dispatch(setLoading(true));\n    APIHandler.copyItems(path.join('/'), destination, filenames).then(r => {\n        dispatch(setLoading(false));\n        dispatch(setVisibleDialogCopy(false));\n        dispatch(refreshFileList());\n    }).catch(r => {\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoading(false));\n    });\n};\n\n\n/**\n * This handles multiple selection by using shift key\n * @param {Object} lastFile\n * @returns {Function}\n */\nexport const setSelectedFileFromLastTo = (lastFile) => (dispatch, getState) => {\n    const { fileList, selectedFiles } = getState();\n\n    const lastPreviouslySelected = [...selectedFiles].pop();\n    const lastPreviouslySelectedIndex = fileList.indexOf(fileList.find(f => f.name === lastPreviouslySelected.name))\n    const lastSelectedIndex = fileList.indexOf(fileList.find(f => f.name === lastFile.name))\n\n    let toAdd = [];\n    if (lastSelectedIndex > lastPreviouslySelectedIndex) {\n        toAdd = fileList.filter((index, element) => {\n            return fileList.indexOf(index) <= lastSelectedIndex && fileList.indexOf(index) >= lastPreviouslySelectedIndex\n        });\n    } else {\n        toAdd = fileList.filter((index, element) => {\n            return fileList.indexOf(index) >= lastSelectedIndex && fileList.indexOf(index) <= lastPreviouslySelectedIndex\n        });\n    }\n    dispatch(setSelectedFiles([...selectedFiles, ...toAdd]));\n};\n\n\n/**\n * @returns {Function}\n */\nexport const initSubList = () => (dispatch, getState) => {\n    const { path } = getState();\n    dispatch(setSelectedFolderSublist(null));\n    dispatch(setFileListSublist([]));\n    dispatch(setPathSublist([...path]));\n    dispatch(refreshFileListSublist());\n};\n\nexport const resetFileUploader = () => (dispatch, getState) => {\n    dispatch(setFileUploadProgress(0));\n    dispatch(setVisibleDialogUploadFile(false));\n    dispatch(setFileUploadList([]));\n};\n\nexport const enterToPreviousDirectory = () => (dispatch, getState) => {\n    const { path } = getState();\n    dispatch(setPath(path.slice(0, -1)));\n    dispatch(setFileListFilter(null));\n    dispatch(refreshFileList());\n};\n\nexport const enterToPreviousDirectoryByIndex = (index) => (dispatch, getState) => {\n    const { path } = getState();\n    const newPath = [...path].slice(0, ++index);\n    dispatch(setPath(newPath));\n    dispatch(refreshFileList());\n    dispatch(setFileListFilter(null));\n};\n\nexport const enterToPreviousDirectorySublist = () => (dispatch, getState) => {\n    const { pathSublist } = getState();\n    dispatch(setPathSublist(pathSublist.slice(0, -1)));\n    dispatch(refreshFileListSublist());\n};\n\nexport const setPath = (path) => {\n    return {\n        type: 'SET_PATH',\n        value: path\n    };\n};\n\nexport const setPathSublist = (path) => {\n    return {\n        type: 'SET_PATH_SUB_LIST',\n        value: path\n    };\n};\n\nexport const setHost = (host) => {\n    return {\n        type: 'SET_HOST',\n        value: host\n    };\n};\n\nexport const setIsLoggedIn = (isLoggedIn) => {\n    return {\n        type: 'SET_IS_LOGGED_IN',\n        value: isLoggedIn\n    };\n};\n\nexport const setWebId = (webId) => {\n    return {\n        type: 'SET_WEB_ID',\n        value: webId\n    };\n};\n\nexport const enterToDirectory = (directory) => (dispatch, getState) => {\n    dispatch({\n        type: 'ENTER_TO_DIRECTORY',\n        value: directory\n    });\n    dispatch(setFileListFilter(null));\n    dispatch(refreshFileList());\n};\n\nexport const enterToDirectorySublist = (directory) => (dispatch, getState) => {\n    dispatch({\n        type: 'ENTER_TO_DIRECTORY_SUB_LIST',\n        value: directory\n    });\n    dispatch(refreshFileListSublist());\n};\n\nexport const setFileList = (fileList) => {\n    return {\n        type: 'SET_FILE_LIST',\n        value: fileList\n    };\n};\n\nexport const setFileListSublist = (fileList) => {\n    return {\n        type: 'SET_FILE_LIST_SUB_LIST',\n        value: fileList\n    };\n};\n\nexport const setSelectedFiles = (files) => {\n    return {\n        type: 'SET_SELECTED_FILES',\n        value: files\n    };\n};\n\nexport const setSelectedFolderSublist = (file) => {\n    return {\n        type: 'SET_SELECTED_FOLDER_SUB_LIST',\n        value: file\n    };\n};\n\nexport const setFileListFilter = (search) => {\n    return {\n        type: 'SET_FILE_LIST_FILTER',\n        value: search\n    };\n};\n\nexport const setContextMenuVisible = (visible) => {\n    return {\n        type: 'SET_CONTEXT_MENU_VISIBLE',\n        value: !!visible\n    };\n};\n\nexport const setContextMenuPosition = (x, y) => {\n    return {\n        type: 'SET_CONTEXT_MENU_POSITION',\n        value: [x, y]\n    };\n};\n\nexport const setContextMenuPositionElement = (element) => {\n    return {\n        type: 'SET_CONTEXT_MENU_POSITION_ELEMENT',\n        value: element\n    };\n};\n\nexport const toggleSelectedFile = (file) => {\n    return {\n        type: 'TOGGLE_SELECTED_FILE',\n        value: file\n    };\n};\n\nexport const rightClickOnFile = (file) => (dispatch, getState) => {\n    const { selectedFiles } = getState();\n    const isSelected = selectedFiles.indexOf(selectedFiles.find(f => f.name === file.name)) !== -1;\n\n    !isSelected && dispatch(setSelectedFiles([file]));\n};\n\nexport const setLoading = (value) => {\n    return {\n        type: 'SET_LOADING',\n        value: value\n    };\n};\n\nexport const setLoadingSublist = (value) => {\n    return {\n        type: 'SET_LOADING_SUB_LIST',\n        value: value\n    };\n};\n\nexport const setVisibleDialogSolidLogin = (visible) => {\n    return {\n        type: 'SET_VISIBLE_DIALOG_SOLID_LOGIN',\n        value: !!visible\n    };\n};\n\nexport const setVisibleDialogSolidLogout = (visible) => {\n    return {\n        type: 'SET_VISIBLE_DIALOG_SOLID_LOGOUT',\n        value: !!visible\n    };\n};\n\nexport const setVisibleDialogCreateFolder = (visible) => {\n    return {\n        type: 'SET_VISIBLE_DIALOG_CREATE_FOLDER',\n        value: !!visible\n    };\n};\n\nexport const setVisibleDialogCreateFile = (visible) => {\n    return {\n        type: 'SET_VISIBLE_DIALOG_CREATE_FILE',\n        value: !!visible\n    };\n};\n\nexport const setVisibleDialogUploadFile = (visible) => {\n    return {\n        type: 'SET_VISIBLE_DIALOG_UPLOAD_FILE',\n        value: !!visible\n    };\n};\n\nexport const setVisibleDialogRename = (visible) => {\n    return {\n        type: 'SET_VISIBLE_DIALOG_RENAME',\n        value: !!visible\n    };\n};\n\nexport const setVisibleDialogMove = (visible) => {\n    return {\n        type: 'SET_VISIBLE_DIALOG_MOVE',\n        value: !!visible\n    };\n};\n\nexport const setVisibleDialogCopy = (visible) => {\n    return {\n        type: 'SET_VISIBLE_DIALOG_COPY',\n        value: !!visible\n    };\n};\n\nexport const setVisibleDialogContent = (visible) => {\n    return {\n        type: 'SET_VISIBLE_DIALOG_CONTENT',\n        value: !!visible\n    };\n};\n\nexport const setVisibleDialogMedia = (visible) => {\n    return {\n        type: 'SET_VISIBLE_DIALOG_MEDIA',\n        value: !!visible\n    };\n};\n\nexport const setVisibleDialogEdit = (visible) => {\n    return {\n        type: 'SET_VISIBLE_DIALOG_EDIT',\n        value: !!visible\n    };\n};\n\nexport const setFileContent = (blob) => {\n    return {\n        type: 'SET_FILE_CONTENT',\n        value: blob\n    };\n};\n\nexport const setFileUploadProgress = (percentage) => {\n    return {\n        type: 'SET_FILE_UPLOAD_PROGRESS',\n        value: percentage\n    };\n};\n\nexport const setFileUploadList = (files) => {\n    return {\n        type: 'SET_FILE_UPLOAD_LIST',\n        value: files\n    };\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport {\n    enterToDirectory, setContextMenuVisible, toggleSelectedFile, setContextMenuPosition,\n    setSelectedFileFromLastTo, loadAndEditFile, loadAndDisplayFile, displayMediaFile,\n    rightClickOnFile, setSelectedFiles\n} from '../../Actions/Actions.js';\nimport './File.css';\n\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport FolderIcon from '@material-ui/icons/Folder';\nimport FileIcon from '@material-ui/icons/InsertDriveFile';\nimport blue from '@material-ui/core/colors/blue';\nimport config from '../../config.js';\nimport { getHumanFileSize } from '../../Api/ApiHandler';\n\nclass File extends Component {\n    render() {\n        const { isSelected, type, name, size, handleClick, handleDoubleClick, handleContextMenu } = this.props;\n        const avatarStyle = {\n            backgroundColor: isSelected ? blue['A200'] : null\n        };\n        const realSize = typeof size !== 'undefined' && type !== 'dir' ? getHumanFileSize(size) : null;\n        return (\n            <div className=\"File\" onClick={handleClick} onDoubleClick={handleDoubleClick} onContextMenu={handleContextMenu} data-selected={isSelected}>\n                <ListItem>\n                    <ListItemAvatar>\n                        <Avatar style={avatarStyle}>\n                            { type === 'dir' ? <FolderIcon /> : <FileIcon />}\n                        </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText className=\"filename\" primary={decodeURI(name)} secondary={realSize} />\n                </ListItem>\n            </div>\n        );\n    }\n}\n\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        filePath: [...state.path, ownProps.name],\n        isSelected: !!state.selectedFiles.find(f => f.name === ownProps.name)\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        /**\n         * @param {Object} event\n         * @returns {undefined}\n         */\n        handleDoubleClick: (event) => {\n            if (ownProps.type === 'file') {\n                if (config.isEditableFilePattern.test(ownProps.name) || ownProps.editable) {\n                    dispatch(loadAndEditFile(ownProps.name));\n                } else if (config.isImageFilePattern.test(ownProps.name)) {\n                    dispatch(loadAndDisplayFile(ownProps.name));\n                } else if (config.isMediaFilePattern.test(ownProps.name)) {\n                    dispatch(displayMediaFile(ownProps.name));\n                }\n                return;\n            }\n\n            dispatch(enterToDirectory(ownProps.name));\n        },\n\n        /**\n         * @param {Object} event\n         * @returns {undefined}\n         */\n        handleContextMenu: (event) => {\n            event.preventDefault();\n            event.stopPropagation();\n\n            const x = event.clientX || (event.touches && event.touches[0].pageX);\n            const y = event.clientY || (event.touches && event.touches[0].pageY);\n\n            if (event.shiftKey) {\n                dispatch(setSelectedFileFromLastTo(ownProps));\n            } else {\n                dispatch(rightClickOnFile(ownProps));\n            }\n            \n            dispatch(setContextMenuVisible(true));\n            dispatch(setContextMenuPosition(x, y));\n        },\n\n        /**\n         * @param {Object} event\n         * @returns {undefined}\n         */\n        handleClick: (event) => {\n            event.stopPropagation();\n\n            if (event.ctrlKey) {\n                dispatch(toggleSelectedFile(ownProps));\n            } else if (event.shiftKey) {\n                dispatch(setSelectedFileFromLastTo(ownProps));\n            } else {\n                dispatch(setSelectedFiles([ownProps]));\n            }\n        }\n    };\n};\n\nFile.propTypes = {\n    name: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    size: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number\n    ]),\n    editable: PropTypes.oneOfType([\n        PropTypes.bool, PropTypes.number\n    ])\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(File);\n\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './FileListEmptyMessage.css';\n\nclass FileListEmptyMessage extends Component {\n    render() {\n        return (\n            <div className=\"FileListEmptyMessage\">\n                No files in this folder\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n    };\n};\n\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FileListEmptyMessage);\n\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Grid from '@material-ui/core/Grid';\n\nconst styles = theme => ({\n  progress: {\n    margin: theme.spacing.unit * 10,\n  },\n});\n\nfunction Loader(props) {\n    const { classes } = props;\n    return (\n        <Grid container justify=\"center\">\n            <CircularProgress className={classes.progress} color=\"secondary\" />\n        </Grid>\n    );\n}\n\nLoader.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Loader);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport File from '../File/File.jsx'; \nimport FileListEmptyMessage from './FileListEmptyMessage';\nimport Loader from '../Loader/Loader.jsx'; \nimport './FileList.css';\n\nclass FileList extends Component {\n    render() {\n        const { fileList, loading } = this.props;\n        \n        const fileListComponent = fileList.map((file, key) => {\n            return <File type={file.type} name={file.name} editable={file.editable} size={file.size} key={key} />\n        });\n\n        return <div className=\"FileList\">\n            { loading ? \n                <Loader /> : \n                fileListComponent.length ? fileListComponent : <FileListEmptyMessage />\n            }\n        </div>\n    }\n}\n\n\nconst mapStateToProps = (state) => {\n    const filteredList = state.fileList.filter(\n        file => state.fileListFilter ? file.name.toLocaleLowerCase().match(state.fileListFilter.toLocaleLowerCase()) : true\n    );\n    return {\n        fileList: filteredList,\n        loading: state.loading\n    };\n};\n\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        handleClick: (event) => {\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FileList);\n\n\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { connect } from 'react-redux';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from '@material-ui/core/Typography';\nimport CreateNewFolderIcon from '@material-ui/icons/CreateNewFolder';\nimport { setVisibleDialogCreateFolder } from '../../../Actions/Actions.js';\n\nfunction CreateFolderAction(props) {\n    const {handleClick, handleClose} = props;\n\n    const handleCloseAfter = (callback) => (event) => {\n        callback();\n        handleClose();\n    };\n\n    return (\n        <MenuItem onClick={handleCloseAfter(handleClick)}>\n            <ListItemIcon>\n                <CreateNewFolderIcon />\n            </ListItemIcon>\n            <Typography variant=\"inherit\">\n                Create folder\n            </Typography>\n        </MenuItem>        \n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClick: (event) => {\n            dispatch(setVisibleDialogCreateFolder(true));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateFolderAction);\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { connect } from 'react-redux';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from '@material-ui/core/Typography';\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\nimport { setVisibleDialogCreateFile } from '../../../Actions/Actions.js';\n\nfunction CreateFileAction(props) {\n    const {handleClick, handleClose} = props;\n\n    const handleCloseAfter = (callback) => (event) => {\n        callback();\n        handleClose();\n    };\n\n    return (\n        <MenuItem onClick={handleCloseAfter(handleClick)}>\n            <ListItemIcon>\n                <InsertDriveFileIcon />\n            </ListItemIcon>\n            <Typography variant=\"inherit\">\n                Create file\n            </Typography>\n        </MenuItem>        \n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClick: (event) => {\n            dispatch(setVisibleDialogCreateFile(true));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateFileAction);\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { connect } from 'react-redux';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from '@material-ui/core/Typography';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport { setVisibleDialogUploadFile } from '../../../Actions/Actions.js';\n\nfunction UploadFileAction(props) {\n    const {handleClick, handleClose} = props;\n\n    const handleCloseAfter = (callback) => (event) => {\n        callback();\n        handleClose();\n    };\n\n    return (\n        <MenuItem onClick={handleCloseAfter(handleClick)}>\n            <ListItemIcon>\n                <CloudUploadIcon />\n            </ListItemIcon>\n            <Typography variant=\"inherit\">\n                Upload files\n            </Typography>\n        </MenuItem>        \n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClick: (event) => {\n            dispatch(setVisibleDialogUploadFile(true));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UploadFileAction);\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { connect } from 'react-redux';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from '@material-ui/core/Typography';\nimport PermIdentityIcon from '@material-ui/icons/PermIdentity';\nimport { setVisibleDialogSolidLogin } from '../../../Actions/Actions.js';\n\nfunction SolidLoginAction(props) {\n    const {handleClick, handleClose} = props;\n\n    const handleCloseAfter = (callback) => (event) => {\n        callback();\n        handleClose();\n    };\n\n    return (\n        <MenuItem onClick={handleCloseAfter(handleClick)}>\n            <ListItemIcon>\n                <PermIdentityIcon />\n            </ListItemIcon>\n            <Typography variant=\"inherit\">\n                Login\n            </Typography>\n        </MenuItem>        \n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClick: (event) => {\n            dispatch(setVisibleDialogSolidLogin(true));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SolidLoginAction);\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { connect } from 'react-redux';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from '@material-ui/core/Typography';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport { setVisibleDialogSolidLogout } from '../../../Actions/Actions.js';\n\nfunction SolidLogoutAction(props) {\n    const {handleClick, handleClose} = props;\n\n    const handleCloseAfter = (callback) => (event) => {\n        callback();\n        handleClose();\n    };\n\n    return (\n        <MenuItem onClick={handleCloseAfter(handleClick)}>\n            <ListItemIcon>\n                <ClearIcon />\n            </ListItemIcon>\n            <Typography variant=\"inherit\">\n                Logout\n            </Typography>\n        </MenuItem>        \n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClick: (event) => {\n            dispatch(setVisibleDialogSolidLogout(true));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SolidLogoutAction);\n","import React from 'react';\nimport Menu from '@material-ui/core/Menu';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport { connect } from 'react-redux';\nimport CreateFolderAction from '../ContextMenu/ContextMenuActions/CreateFolderAction.jsx';\nimport CreateFileAction from '../ContextMenu/ContextMenuActions/CreateFileAction.jsx';\nimport UploadFileAction from '../ContextMenu/ContextMenuActions/UploadFileAction.jsx';\nimport SolidLoginAction from '../ContextMenu/ContextMenuActions/SolidLoginAction';\nimport SolidLogoutAction from '../ContextMenu/ContextMenuActions/SolidLogoutAction.jsx';\n\nclass ThreeDotsMenu extends React.Component {\n  state = {\n    anchorEl: null,\n  };\n\n  handleClick = event => {\n    this.setState({ anchorEl: event.currentTarget });\n  };\n\n  handleClose = () => {\n    this.setState({ anchorEl: null });\n  };\n\n  render() {\n    const { anchorEl } = this.state;\n    const { isLoggedIn } = this.props;\n\n    return (\n      <div style={{marginLeft:'1em'}}>\n        <IconButton color=\"inherit\" \n          aria-label=\"More\"\n          aria-owns={Boolean(anchorEl) ? 'long-menu' : undefined}\n          aria-haspopup=\"true\"\n          onClick={this.handleClick}>\n          <MoreVertIcon />\n        </IconButton>\n\n        <Menu anchorEl={anchorEl} open={Boolean(anchorEl)} onClose={this.handleClose}>\n          <CreateFolderAction handleClose={this.handleClose} />\n          <CreateFileAction handleClose={this.handleClose} />\n          <UploadFileAction handleClose={this.handleClose} />\n          { isLoggedIn ?\n            <SolidLogoutAction handleClose={this.handleClose} />\n            : <SolidLoginAction handleClose={this.handleClose} />\n          }\n        </Menu>\n      </div>\n    );\n  }\n}\n\n\nconst mapStateToProps = (state) => {\n    return {\n      isLoggedIn: state.isLoggedIn\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ThreeDotsMenu);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport KeyboardArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft';\nimport Button from '@material-ui/core/Button';\nimport './BreadcrumbText.css';\n\nconst styles = theme => ({\n  lastPath: {\n    display: 'block',\n    [theme.breakpoints.up('sm')]: {\n      display: 'none'\n    }\n  },\n  paths: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    }\n  }\n});\n\nclass BreadcrumbText extends Component {\n\n    render() {\n        const { classes, handleClickPath, path, rootTitle, handleGoBack, canGoBack } = this.props;\n\n        const separator = <span>&gt;</span>;\n        const rootPath = <span onClick={(e) => handleClickPath(e, -1, path)} data-index={0}>\n            { rootTitle } { path.length ? separator : '' }\n        </span>;\n        const lastPath = [...path].pop() || rootTitle;\n\n        const directories = path.map((dir, index) => {\n            return <span key={index} data-index={index} onClick={(e) => handleClickPath(e, index, path)}>\n                <span>{dir}</span> { path.length -1 !== index ? separator : '' }&nbsp;\n            </span>\n        });\n\n        return (\n            <div className=\"BreadcrumbText\">\n                <div className={classes.lastPath}>\n                    <Button onClick={handleGoBack} color=\"inherit\" type=\"button\" style={{display: canGoBack ? 'inline-flex' : 'none'}}>\n                        <KeyboardArrowLeftIcon />\n                    </Button>\n                    {lastPath}\n                </div>\n                <div className={classes.paths}>{rootPath} {directories}</div>\n            </div>\n        );\n    }\n}\n\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n    };\n};\n\nconst mapStateToProps = (state) => {\n    return {\n    };\n};\n\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(BreadcrumbText));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport { fade } from '@material-ui/core/styles/colorManipulator';\nimport { withStyles } from '@material-ui/core/styles';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { connect } from 'react-redux';\nimport { setFileListFilter, enterToPreviousDirectoryByIndex } from '../../Actions/Actions.js';\nimport ThreeDotsMenu from './ThreeDotsMenu.jsx';\nimport BreadcrumbText from '../Breadcrumb/BreadcrumbText.jsx';\nimport { enterToPreviousDirectory } from '../../Actions/Actions.js';\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    marginBottom: '4.3em'\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20,\n  },\n  title: {\n    display: 'block', // was none\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginLeft: 0,\n    width: '100%',\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing.unit,\n      width: 'auto',\n      display: 'block'\n    },\n  },\n  searchIcon: {\n    width: theme.spacing.unit * 9,\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n    width: '100%',\n  },\n  inputInput: {\n    paddingTop: theme.spacing.unit,\n    paddingRight: theme.spacing.unit,\n    paddingBottom: theme.spacing.unit,\n    paddingLeft: theme.spacing.unit * 10,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: 100,\n      '&:focus': {\n        width: 200,\n      },\n    },\n  },\n});\n\nfunction SearchAppBar(props) {\n  const { classes, path, handleClickPath, handleGoBack, canGoBack } = props;\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"fixed\">\n        <Toolbar>\n          <Typography className={classes.title} variant=\"h6\" color=\"inherit\" noWrap>\n            <BreadcrumbText \n                path={path} \n                handleClickPath={handleClickPath} \n                handleGoBack={handleGoBack}\n                canGoBack={canGoBack}\n                rootTitle=\"Solid Filemanager\"\n            />\n          </Typography>\n          <div className={classes.grow} />\n\n          <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <InputBase\n              placeholder=\"Search…\"\n              value={props.value}\n              onChange={props.handleChange}\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n            />\n          </div>\n          <ThreeDotsMenu />\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\nSearchAppBar.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\n\nconst mapStateToProps = (state) => {\n    return {\n        value: state.fileListFilter || '',\n        path: state.path,\n        canGoBack: state.path.length\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        handleChange: (event) => {\n            dispatch(setFileListFilter(event.currentTarget.value));\n        },\n        handleGoBack: (event) => {\n            dispatch(enterToPreviousDirectory());\n        },\n        /**\n         * @param {Object} event\n         * @param {Number} index\n         * @param {Array} path\n         * @returns {undefined}\n         */        \n        handleClickPath: (event, index) => {\n            dispatch(enterToPreviousDirectoryByIndex(index));\n            event.preventDefault();\n        }\n    };\n};\n\n\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(SearchAppBar));\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { connect } from 'react-redux';\nimport { loadAndDisplayFile, displayMediaFile, loadAndEditFile, enterToDirectory } from '../../../Actions/Actions.js';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from '@material-ui/core/Typography';\nimport OpenInBrowserIcon from '@material-ui/icons/OpenInBrowser';\nimport config from '../../../config.js';\n\nfunction OpenAction(props) {\n    const {handleClick, selectedFiles} = props;\n    return (\n        <MenuItem onClick={(e) => handleClick(e, selectedFiles)}>\n            <ListItemIcon>\n                <OpenInBrowserIcon />\n            </ListItemIcon>\n            <Typography variant=\"inherit\">\n                Open\n            </Typography>\n        </MenuItem>        \n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        selectedFiles: state.selectedFiles\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClick: (event, selectedFiles) => {\n            const file = selectedFiles[0];\n            if (file.type === 'dir') {\n                dispatch(enterToDirectory(file.name));\n                return;\n            }\n\n            if (config.isEditableFilePattern.test(file.name) || file.editable) {\n                dispatch(loadAndEditFile(file.name));\n            } else if (config.isImageFilePattern.test(file.name)) {\n                dispatch(loadAndDisplayFile(file.name));\n            } else if (config.isMediaFilePattern.test(file.name)) {\n                dispatch(displayMediaFile(file.name));\n            }\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OpenAction);\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { connect } from 'react-redux';\nimport { removeItems } from '../../../Actions/Actions.js';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from '@material-ui/core/Typography';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nfunction RemoveAction(props) {\n    const {handleClick, selectedFiles} = props;\n    return (\n        <MenuItem onClick={(e) => handleClick(e, selectedFiles)}>\n            <ListItemIcon>\n                <DeleteIcon />\n            </ListItemIcon>\n            <Typography variant=\"inherit\">\n                Remove\n            </Typography>\n        </MenuItem>        \n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        selectedFiles: state.selectedFiles\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClick: (event, selectedFiles) => {\n            dispatch(removeItems(selectedFiles));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RemoveAction);\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { connect } from 'react-redux';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from '@material-ui/core/Typography';\nimport HowToVoteIcon from '@material-ui/icons/HowToVote';\nimport { initSubList, setVisibleDialogMove } from '../../../Actions/Actions.js';\n\nfunction MoveAction(props) {\n    const {handleClick, selectedFiles} = props;\n\n    return (\n        <MenuItem onClick={(e) => handleClick(e, selectedFiles)}>\n            <ListItemIcon>\n                <HowToVoteIcon />\n            </ListItemIcon>\n            <Typography variant=\"inherit\">\n                Move\n            </Typography>\n        </MenuItem>        \n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        selectedFiles: state.selectedFiles\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClick: (event, selectedFiles) => {\n            dispatch(initSubList());\n            dispatch(setVisibleDialogMove(true));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MoveAction);\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { connect } from 'react-redux';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from '@material-ui/core/Typography';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport { initSubList, setVisibleDialogCopy } from '../../../Actions/Actions.js';\n\nfunction CopyAction(props) {\n    const {handleClick, selectedFiles} = props;\n\n    return (\n        <MenuItem onClick={(e) => handleClick(e, selectedFiles)}>\n            <ListItemIcon>\n                <FileCopyIcon />\n            </ListItemIcon>\n            <Typography variant=\"inherit\">\n                Copy\n            </Typography>\n        </MenuItem>        \n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        selectedFiles: state.selectedFiles\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClick: (event, selectedFiles) => {\n            dispatch(initSubList());\n            dispatch(setVisibleDialogCopy(true));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CopyAction);\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { connect } from 'react-redux';\nimport { loadAndEditFile } from '../../../Actions/Actions.js';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from '@material-ui/core/Typography';\nimport OpenInBrowserIcon from '@material-ui/icons/OpenInBrowser';\n\nfunction OpenAction(props) {\n    const {handleClick, selectedFiles} = props;\n    return (\n        <MenuItem onClick={(e) => handleClick(e, selectedFiles)}>\n            <ListItemIcon>\n                <OpenInBrowserIcon />\n            </ListItemIcon>\n            <Typography variant=\"inherit\">\n                Edit\n            </Typography>\n        </MenuItem>        \n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        selectedFiles: state.selectedFiles\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClick: (event, selectedFiles) => {\n            dispatch(loadAndEditFile(selectedFiles[0].name));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OpenAction);\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { connect } from 'react-redux';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from '@material-ui/core/Typography';\nimport WrapTextIcon from '@material-ui/icons/WrapText';\nimport { setVisibleDialogRename } from '../../../Actions/Actions.js';\n\nfunction MoveAction(props) {\n    const {handleClick, selectedFiles} = props;\n\n    return (\n        <MenuItem onClick={(e) => handleClick(e, selectedFiles)}>\n            <ListItemIcon>\n                <WrapTextIcon />\n            </ListItemIcon>\n            <Typography variant=\"inherit\">\n                Rename\n            </Typography>\n        </MenuItem>        \n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        selectedFiles: state.selectedFiles\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClick: (event, selectedFiles) => {\n            dispatch(setVisibleDialogRename(true));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MoveAction);\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { connect } from 'react-redux';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from '@material-ui/core/Typography';\nimport ArchiveIcon from '@material-ui/icons/Archive';\nimport { zipAndUpload } from '../../../Actions/Actions.js';\n\nfunction ZipAction(props) {\n    const {handleClick, selectedFiles} = props;\n\n    return (\n        <MenuItem onClick={(e) => handleClick(e, selectedFiles)}>\n            <ListItemIcon>\n                <ArchiveIcon />\n            </ListItemIcon>\n            <Typography variant=\"inherit\">\n                Zip here\n            </Typography>\n        </MenuItem>        \n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        selectedFiles: state.selectedFiles\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClick: (event, selectedFiles) => {\n            dispatch(zipAndUpload(selectedFiles));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ZipAction);\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { connect } from 'react-redux';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from '@material-ui/core/Typography';\nimport UnarchiveIcon from '@material-ui/icons/Unarchive';\nimport { extractZipFile } from '../../../Actions/Actions.js';\n\nfunction ExtractAction(props) {\n    const {handleClick, selectedFiles} = props;\n\n    return (\n        <MenuItem onClick={(e) => handleClick(e, selectedFiles)}>\n            <ListItemIcon>\n                <UnarchiveIcon />\n            </ListItemIcon>\n            <Typography variant=\"inherit\">\n                Extract here\n            </Typography>\n        </MenuItem>        \n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        selectedFiles: state.selectedFiles\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClick: (event, selectedFiles) => {\n            dispatch(extractZipFile(selectedFiles[0].name));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ExtractAction);\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { connect } from 'react-redux';\nimport { downloadItems } from '../../../Actions/Actions.js';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from '@material-ui/core/Typography';\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\n\nfunction DownloadAction(props) {\n    const {handleClick, selectedFiles} = props;\n    return (\n        <MenuItem onClick={(e) => handleClick(e, selectedFiles)}>\n            <ListItemIcon>\n                <CloudDownloadIcon />\n            </ListItemIcon>\n            <Typography variant=\"inherit\">\n                {(selectedFiles.length === 1 && selectedFiles[0].type === 'file') ? \n                    'Download'\n                    : 'Download Zip'\n                }\n            </Typography>\n        </MenuItem>        \n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        selectedFiles: state.selectedFiles\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClick: (event, selectedFiles) => {\n            dispatch(downloadItems(selectedFiles));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DownloadAction);\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { connect } from 'react-redux';\nimport { openInNewTab } from '../../../Actions/Actions.js';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from '@material-ui/core/Typography';\nimport LinkIcon from '@material-ui/icons/Link';\n\nfunction OpenInNewTabAction(props) {\n    const {handleClick, selectedFiles} = props;\n    return (\n        <MenuItem onClick={(e) => handleClick(e, selectedFiles)}>\n            <ListItemIcon>\n                <LinkIcon   />\n            </ListItemIcon>\n            <Typography variant=\"inherit\">\n                Open in new Tab\n            </Typography>\n        </MenuItem>        \n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        selectedFiles: state.selectedFiles\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClick: (event, selectedFiles) => {\n            dispatch(openInNewTab(selectedFiles[0].name));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OpenInNewTabAction);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './ContextMenu.css';\nimport Menu from '@material-ui/core/Menu';\nimport { getActionsByMultipleFiles } from '../../Api/ApiHandler.js';\nimport OpenAction from './ContextMenuActions/OpenAction.jsx';\nimport RemoveAction from './ContextMenuActions/RemoveAction.jsx';\nimport MoveAction from './ContextMenuActions/MoveAction.jsx';\nimport CopyAction from './ContextMenuActions/CopyAction.jsx';\nimport EditAction from './ContextMenuActions/EditAction.jsx';\nimport RenameAction from './ContextMenuActions/RenameAction.jsx';\nimport ZipAction from './ContextMenuActions/ZipAction.jsx';\nimport ExtractAction from './ContextMenuActions/ExtractAction.jsx';\nimport DownloadAction from './ContextMenuActions/DownloadAction.jsx';\nimport OpenInNewTabAction from './ContextMenuActions/OpenInNewTabAction.jsx';\n\nclass ContextMenu extends Component {\n\n    render() {\n        const { acts, visible, x, y } = this.props;\n\n        return (\n            <div>\n                <Menu\n                    anchorReference=\"anchorPosition\"\n                    anchorPosition={{ top: y, left: x }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left',\n                    }}\n                    open={visible}\n                    onClose={() => { }}\n                    PaperProps={{ style: { width: 190 } }}>\n                    {acts.includes('open') && <OpenAction />}\n                    {acts.includes('openInNewTab') && <OpenInNewTabAction />}\n                    {acts.includes('download') && <DownloadAction />}\n                    {acts.includes('compress') && <ZipAction />}\n                    {acts.includes('extract') && <ExtractAction />}\n                    {acts.includes('edit') && <EditAction />}\n                    {acts.includes('copy') && <CopyAction />}\n                    {acts.includes('move') && <MoveAction />}\n                    {acts.includes('rename') && <RenameAction />}\n                    {acts.includes('remove') && <RemoveAction />}\n                </Menu>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        x: state.contextMenuPosition[0] || 0,\n        y: state.contextMenuPosition[1] || 0,\n        visible: !!state.contextMenuVisible,\n        acts: getActionsByMultipleFiles(state.selectedFiles),\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContextMenu);\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport { connect } from 'react-redux';\nimport { solidLogin, setVisibleDialogSolidLogin, refreshFileList } from '../../../Actions/Actions.js';\nimport config from '../../../config.js';\n\nclass FormDialog extends Component {\n    state = {\n      storageLocation: null,\n    };\n\n    componentWillReceiveProps(props) {\n      const { isLoggedIn, webId } = props;\n      if (isLoggedIn) {\n        const storageLocation = (new URL(webId)).origin;\n        this.setState({ storageLocation });\n      }\n    }\n\n    handleChange (event) {\n      const storageLocation = event.currentTarget.form.querySelector('input').value;\n      this.setState({ storageLocation });\n    }\n\n    handleSubmit (event) {\n        this.props.handleSubmit(event)(this.state.storageLocation);\n    }\n\n    render() {\n        let { storageLocation } = this.state;\n        const { handleClose, handleLogin, open, isLoggedIn } = this.props;\n\n        return (\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-solid-login\" fullWidth={true} maxWidth={'sm'}>\n                <form>\n                  <DialogTitle id=\"form-dialog-solid-login\">Login to your Solid pod</DialogTitle>\n                  <DialogContent>\n                    <p>Please login to your solid pod to access this app by clicking the login button below.</p>\n                    <Button color=\"primary\" type=\"submit\" onClick={handleLogin}>\n                      Login\n                    </Button>\n                    {\n                      isLoggedIn && (\n                        <div>\n                          <p>Please enter your pods storage location</p>\n                          <TextField autoFocus fullWidth margin=\"dense\" label=\"Storage Location\" type=\"text\" onChange={this.handleChange.bind(this)} value={storageLocation} />\n                        </div>\n                      )\n                    }\n                  </DialogContent>\n                  <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\" type=\"button\">\n                      Cancel\n                    </Button>\n                    <Button color=\"primary\" type=\"submit\" onClick={this.handleSubmit.bind(this)} disabled={!isLoggedIn}>\n                      Enter your Pod\n                    </Button>\n                  </DialogActions>\n                </form>\n            </Dialog>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        open: state.visibleDialogSolidLogin,\n        webId: state.webId,\n        isLoggedIn: state.isLoggedIn\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClose: event => {\n            dispatch(setVisibleDialogSolidLogin(false));\n        },\n        handleLogin: event => {\n            event.preventDefault();\n            dispatch(solidLogin());\n        },\n        handleSubmit: event => (storageLocation) => {\n            event.preventDefault();\n            config.setHost(storageLocation);\n            dispatch(setVisibleDialogSolidLogin(false));\n            dispatch(refreshFileList());\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog);\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { connect } from 'react-redux';\nimport { solidLogout, setVisibleDialogSolidLogout } from '../../../Actions/Actions.js';\n\nclass FormDialog extends Component {\n\n    render() {\n        const { handleClose, handleLogout, open } = this.props;\n\n        return (\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-solid-logout\" fullWidth={true} maxWidth={'sm'}>\n                <form>\n                  <DialogTitle id=\"form-dialog-solid-logout\">Logout from your Solid pod</DialogTitle>\n                  <DialogContent>\n                    <p>Please confirm logging out by clicking the Logout button below</p>\n                  </DialogContent>\n                  <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\" type=\"button\">\n                      Cancel\n                    </Button>\n                    <Button color=\"primary\" type=\"submit\" onClick={handleLogout}>\n                      Logout\n                    </Button>\n                  </DialogActions>\n                </form>\n            </Dialog>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        open: state.visibleDialogSolidLogout\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClose: event => {\n            dispatch(setVisibleDialogSolidLogout(false));\n        },\n        handleLogout: event => {\n            event.preventDefault();\n            dispatch(solidLogout());\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog);\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { connect } from 'react-redux';\nimport { setVisibleDialogContent } from '../../../Actions/Actions.js';\n\nclass FormDialog extends Component {\n\n    state = {\n        lastBlobUrl: null,\n        content: '...',\n        loading: false\n    };\n\n    componentDidUpdate() {\n        if (this.props.blobUrl !== this.state.lastBlobUrl) {\n            this.setState({\n                lastBlobUrl: this.props.blobUrl\n            });\n            this.setState({\n                loading: true\n            });\n        }\n    }\n\n    render() {\n        const { handleClose, open } = this.props;\n        return (\n          <div style={{marginLeft:'1em'}}>\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-content\" fullWidth={true} maxWidth={'sm'}>\n              <DialogTitle id=\"form-dialog-content\">Viewing file </DialogTitle>\n              <DialogContent>\n                <img src={this.props.blobUrl} alt=\"\" style={{maxWidth: '100%'}}/>\n              </DialogContent>\n              <DialogActions>\n                <Button onClick={handleClose} color=\"primary\" type=\"button\">\n                  Close\n                </Button>\n              </DialogActions>\n            </Dialog>\n          </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        open: state.visibleDialogContent,\n        blobUrl: state.fileContentBlobUrl\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClose: (event) => {\n            dispatch(setVisibleDialogContent(false));\n        },\n        handleOpen: (event) => {\n            dispatch(setVisibleDialogContent(true));\n        },\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog);\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { connect } from 'react-redux';\nimport { setVisibleDialogMedia } from '../../../Actions/Actions.js';\nimport config from '../../../config.js';\nimport Plyr from 'react-plyr';\nimport 'plyr/dist/plyr.css';\n\nclass FormDialog extends Component {\n    render() {\n        const { fileName, url, provider, type, handleClose, open } = this.props;\n\n        return (\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-display-media\" fullWidth={true} maxWidth={'lg'}>\n                <DialogTitle id=\"form-dialog-display-media\">Display Media</DialogTitle>\n                <DialogContent>\n                    <p>Playing {fileName}</p>\n                    <Plyr type={type} provider={provider} url={url} />\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\" type=\"button\">\n                        Close\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    const open = state.visibleDialogMedia;\n\n    if (state.selectedFiles.length) {\n        const fileName = state.selectedFiles[0].name;\n        const path = state.path;\n        const url = `${config.getHost()}/${path.length ? (path.join('/') + '/') : ''}${fileName}`;\n        const provider = config.isVideoFilePattern.test(fileName) ? 'html5' : 'audio';\n        const type = config.isVideoFilePattern.test(fileName) ? 'video' : 'audio';\n\n        return {\n            fileName,\n            url,\n            provider,\n            type,\n            open\n        };\n    }\n    else {\n        return {\n            open\n        };\n    }\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClose: event => {\n            dispatch(setVisibleDialogMedia(false));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog);\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { connect } from 'react-redux';\nimport { setVisibleDialogEdit, updateTextFile } from '../../../Actions/Actions.js';\n\nclass FormDialog extends Component {\n\n    state = {\n        lastBlobUrl: null,\n        content: null,\n        loading: false\n    };\n\n    componentDidUpdate() {\n        if (this.props.blobUrl !== this.state.lastBlobUrl) {\n            this.setState({\n                lastBlobUrl: this.props.blobUrl\n            });\n            this.setState({\n                loading: true\n            });\n\n            this.props.blobUrl && fetch(this.props.blobUrl).then(r => {\n                return r.text();\n            }).then(t => {\n                this.setState({\n                    content: t\n                });\n                this.setState({\n                    loading: false\n                });\n            });\n        }\n    }\n\n    handleSave (event) {\n        event.preventDefault();\n        const content = event.currentTarget.form.querySelector('textarea').value;\n\n        this.props.handleSave(event)(this.props.fileName, content);\n    }\n\n    render() {\n        const { handleClose, open } = this.props;\n        const textAreaStyle = {\n            width: '100%',\n            minHeight: '300px'\n        };\n        const textArea = <textarea style={textAreaStyle} defaultValue={this.state.content || ''} />;\n\n        return (\n            <div>\n              <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-edit\" fullWidth={true} maxWidth={'sm'}>\n                <form>\n                  <DialogTitle id=\"form-dialog-edit\">Editing file </DialogTitle>\n                  <DialogContent>\n                    <DialogContentText>\n                      {this.state.loading ? 'Loading...' : textArea}\n                    </DialogContentText>\n                  </DialogContent>\n                  <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\" type=\"button\">\n                      Close\n                    </Button>\n                    <Button color=\"primary\" onClick={this.handleSave.bind(this)} type=\"submit\">\n                      Update\n                    </Button>\n                  </DialogActions>\n                </form>\n              </Dialog>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        open: state.visibleDialogEdit,\n        fileName: state.selectedFiles.length ? state.selectedFiles[0].name : '',\n        blobUrl: state.fileContentBlobUrl\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClose: (event) => {\n            dispatch(setVisibleDialogEdit(false));\n        },\n        handleOpen: (event) => {\n            dispatch(setVisibleDialogEdit(true));\n        },\n        handleSave: (event) => (fileName, content) => {\n            dispatch(updateTextFile(fileName, content));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog);\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { connect } from 'react-redux';\nimport { createNewFolder, setVisibleDialogCreateFolder } from '../../../Actions/Actions.js';\n\nclass FormDialog extends Component {\n\n    render() {\n        const { handleClose, handleSave, value, open } = this.props;\n\n        return (\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-create-folder\" fullWidth={true} maxWidth={'sm'}>\n                <form>\n                  <DialogTitle id=\"form-dialog-create-folder\">Create folder</DialogTitle>\n                  <DialogContent>\n                    <TextField autoFocus fullWidth margin=\"dense\" label=\"Folder name\" type=\"text\" value={value} />\n                  </DialogContent>\n                  <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\" type=\"button\">\n                      Cancel\n                    </Button>\n                    <Button color=\"primary\" type=\"submit\" onClick={handleSave}>\n                      Save\n                    </Button>\n                  </DialogActions>\n                </form>\n            </Dialog>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        open: state.visibleDialogCreateFolder\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClose: event => {\n            dispatch(setVisibleDialogCreateFolder(false));\n        },\n        handleSave: event => {\n            event.preventDefault();\n            const folderName = event.currentTarget.form.querySelector('input').value;\n            dispatch(createNewFolder(folderName));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog);\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { connect } from 'react-redux';\nimport { createFile, setVisibleDialogCreateFile } from '../../../Actions/Actions.js';\n\nclass FormDialog extends Component {\n\n    render() {\n        const { handleClose, handleCreate, value, open } = this.props;\n\n        return (\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-create-file\" fullWidth={true} maxWidth={'sm'}>\n                <form>\n                  <DialogTitle id=\"form-dialog-create-file\">Create file</DialogTitle>\n                  <DialogContent>\n                    <TextField autoFocus fullWidth margin=\"dense\" label=\"File name\" type=\"text\" value={value} />\n                  </DialogContent>\n                  <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\" type=\"button\">\n                      Cancel\n                    </Button>\n                    <Button color=\"primary\" type=\"submit\" onClick={handleCreate}>\n                      Create\n                    </Button>\n                  </DialogActions>\n                </form>\n            </Dialog>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        open: state.visibleDialogCreateFile\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClose: event => {\n            dispatch(setVisibleDialogCreateFile(false));\n        },\n        handleCreate: event => {\n            event.preventDefault();\n            const fileName = event.currentTarget.form.querySelector('input').value;\n            dispatch(createFile(fileName));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog);\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { connect } from 'react-redux';\nimport { renameFile, renameFolder, setVisibleDialogRename } from '../../../Actions/Actions.js';\n\nclass FormDialog extends Component {\n\n    state = {\n        value: ''\n    };\n\n    componentWillReceiveProps (props) {\n        this.setState({value: props.realName});\n    }\n\n    handleChange (event) {\n        this.setState({value: event.currentTarget.form.querySelector('input').value});\n    }\n\n    handleSave (event) {\n        this.props.handleSave(event)(this.props.realName, this.state.value, this.props.type);\n    }\n\n    render() {\n        const { value } = this.state;\n        const { handleClose, open } = this.props;\n\n        return (\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-create-folder\" fullWidth={true} maxWidth={'sm'}>\n                <form>\n                  <DialogTitle id=\"form-dialog-create-folder\">Rename</DialogTitle>\n                  <DialogContent>\n                    <TextField autoFocus fullWidth margin=\"dense\" label=\"Item name\" type=\"text\" onChange={this.handleChange.bind(this)} value={value} />\n                  </DialogContent>\n                  <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\" type=\"button\">\n                      Cancel\n                    </Button>\n                    <Button color=\"primary\" type=\"submit\" onClick={this.handleSave.bind(this)}>\n                      Save\n                    </Button>\n                  </DialogActions>\n                </form>\n            </Dialog>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        open: state.visibleDialogRename,\n        realName: state.selectedFiles.length ? state.selectedFiles[0].name : '',\n        type: state.selectedFiles.length ? state.selectedFiles[0].type : ''\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClose: event => {\n            dispatch(setVisibleDialogRename(false));\n        },\n        handleSave: event => (realName, newName, type) => {\n            event.preventDefault();\n            if (type === 'dir')\n                dispatch(renameFolder(realName, newName));\n            else\n               dispatch(renameFile(realName, newName));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { \n    setSelectedFolderSublist, enterToDirectorySublist \n} from '../../../Actions/Actions.js';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport FolderIcon from '@material-ui/icons/Folder';\nimport FileIcon from '@material-ui/icons/InsertDriveFile';\nimport blue from '@material-ui/core/colors/blue';\nimport '../File.css';\n\nconst styles = theme => ({\n});\n\n\nclass FileSublist extends Component {\n    render() {\n        const { type, name, handleClick, isSelected, handleDoubleClick } = this.props;\n        const avatarStyle = {\n            backgroundColor: isSelected ? blue['A200'] : null\n        };\n        return (\n            <div className=\"File\" onClick={handleClick} data-selected={isSelected} onDoubleClick={handleDoubleClick}>\n                <ListItem>\n                    <ListItemAvatar>\n                        <Avatar style={avatarStyle}>\n                            { type === 'dir' ? <FolderIcon /> : <FileIcon />}\n                        </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText primary={name} secondary=\"\" />\n                </ListItem>\n            </div>\n        );\n    }\n}\n\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        filePath: [...state.path, ownProps.name],\n        isSelected: state.selectedFolderSublist && (state.selectedFolderSublist.name === ownProps.name)\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        /**\n         * @param {Object} event\n         * @returns {undefined}\n         */\n        handleDoubleClick: (event) => {\n            dispatch(enterToDirectorySublist(ownProps.name));\n            dispatch(setSelectedFolderSublist(null));\n        },\n\n        /**\n         * @param {Object} event\n         * @returns {undefined}\n         */\n        handleClick: (event) => {\n            event.stopPropagation(); \n            dispatch(setSelectedFolderSublist(ownProps));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(FileSublist));\n\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport FileSublist from '../../File//FileSublist/FileSublist.jsx'; \nimport Loader from '../../Loader/Loader.jsx'; \nimport FileListEmptyMessage from '../FileListEmptyMessage';\nimport './FileListSublist.css'; \n\nclass FileListSublist extends Component {\n    render() {\n        const { fileList, loadingSublist } = this.props;\n        \n        const fileListComponent = fileList.map((file, key) => {\n            return <FileSublist type={file.type} name={file.name} key={key} />\n        });\n\n        return <div className=\"FileListSublist\">\n            { loadingSublist ? \n                <Loader /> : \n                fileListComponent.length ? fileListComponent : <FileListEmptyMessage />\n            }\n        </div>\n    }\n}\n\nconst mapStateToProps = (state) => {\n    const filteredList = state.fileListSublist\n        .filter(file => file.type === 'dir')\n        .filter(file => state.path.join('').trim() === state.pathSublist.join('').trim() ? \n            !state.selectedFiles.find(f => f.name === file.name) : true\n        );\n    return {\n        fileList: filteredList,\n        loadingSublist: state.loadingSublist,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FileListSublist);","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { connect } from 'react-redux';\nimport { setVisibleDialogMove, setSelectedFolderSublist, enterToPreviousDirectorySublist, moveItems } from '../../../Actions/Actions.js';\nimport FileListSublist from '../../FileList/FileListSublist/FileListSublist.jsx'; \nimport KeyboardArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft';\n\nclass FormDialog extends Component {\n\n    render() {\n        const { \n            selectedPath, handleClose, handleSave, open, \n            selectedFiles, canGoBack, canMove, handleGoBack \n        } = this.props;\n\n        return (\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-move\" fullWidth={true} maxWidth={'sm'}>\n                <form>\n                    <DialogTitle id=\"form-dialog-move\">\n                        Move files to <small style={{color: 'grey'}}>{ selectedPath.join('/') }</small>\n                    </DialogTitle>\n                    <DialogContent>\n                        <FileListSublist />\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={handleGoBack} color=\"primary\" type=\"button\" disabled={!canGoBack}>\n                            <KeyboardArrowLeftIcon /> Go back directory\n                        </Button>\n\n                        <Button onClick={handleClose} color=\"primary\" type=\"button\">\n                            Cancel\n                        </Button>\n                        <Button color=\"primary\" onClick={(e) => handleSave(e, selectedFiles)} disabled={!canMove} type=\"submit\">\n                            Move\n                        </Button>\n                    </DialogActions>\n                </form>\n            </Dialog>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    // prevent moving to same folder\n    const canMove = state.path.join('') !== state.pathSublist.join('') + (state.selectedFolderSublist ? state.selectedFolderSublist.name : '');\n\n    return {\n        open: state.visibleDialogMove,\n        selectedFolderSublist: state.selectedFolderSublist,\n        selectedPath: state.selectedFolderSublist ? [...state.pathSublist, state.selectedFolderSublist.name] : [],\n        selectedFiles: state.selectedFiles,\n        pathSublist: state.pathSublist,\n        canGoBack: state.pathSublist.length,\n        canMove: state.selectedFolderSublist && canMove\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClose: (event) => {\n            dispatch(setSelectedFolderSublist(null));\n            dispatch(setVisibleDialogMove(false));\n        },\n        handleSave: (event, selectedFiles) => {\n            dispatch(moveItems(selectedFiles));\n        },\n        handleGoBack: (event) => {\n            dispatch(setSelectedFolderSublist(null));\n            dispatch(enterToPreviousDirectorySublist());\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog);\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { connect } from 'react-redux';\nimport { setVisibleDialogCopy, setSelectedFolderSublist, enterToPreviousDirectorySublist, copyItems } from '../../../Actions/Actions.js';\nimport FileListSublist from '../../FileList/FileListSublist/FileListSublist.jsx'; \nimport KeyboardArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft';\n\nclass FormDialog extends Component {\n\n    render() {\n        const { \n            selectedPath, handleClose, handleSave, open, \n            canGoBack, canCopy, selectedFiles, handleGoBack \n        } = this.props;\n\n        return (\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-copy\" fullWidth={true} maxWidth={'sm'}>\n                <form>\n                    <DialogTitle id=\"form-dialog-copy\">\n                        Copy files to <small style={{color: 'grey'}}>{ selectedPath.join('/') }</small>\n                    </DialogTitle>\n                    <DialogContent>\n                        <FileListSublist />\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={handleGoBack} color=\"primary\" type=\"button\" disabled={!canGoBack}>\n                            <KeyboardArrowLeftIcon /> Go back directory\n                        </Button>\n\n                        <Button onClick={handleClose} color=\"primary\" type=\"button\">\n                            Cancel\n                        </Button>\n                        <Button color=\"primary\" onClick={(e) => handleSave(e, selectedFiles)} disabled={!canCopy} type=\"submit\">\n                            Copy\n                        </Button>\n                    </DialogActions>\n                </form>\n            </Dialog>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    // prevent copying to same folder\n    const canCopy = state.path.join('') !== state.pathSublist.join('') + (state.selectedFolderSublist ? state.selectedFolderSublist.name : '');\n\n    return {\n        open: state.visibleDialogCopy,\n        selectedFolderSublist: state.selectedFolderSublist,\n        selectedPath: state.selectedFolderSublist ? [...state.pathSublist, state.selectedFolderSublist.name] : [],\n        canGoBack: state.pathSublist.length,\n        canCopy: state.selectedFolderSublist && canCopy,\n        selectedFiles: state.selectedFiles\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClose: (event) => {\n            dispatch(setSelectedFolderSublist(null));\n            dispatch(setVisibleDialogCopy(false));\n        },\n        handleSave: (event, selectedFiles) => {\n            dispatch(copyItems(selectedFiles));\n        },\n        handleGoBack: (event) => {\n            dispatch(setSelectedFolderSublist(null));\n            dispatch(enterToPreviousDirectorySublist());\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport FileIcon from '@material-ui/icons/InsertDriveFile';\nimport { getHumanFileSize } from '../../Api/ApiHandler';\n\nfunction UploadFileList(props) {\n    const { files } = props;\n    const list = files.map((f, i) =>\n        <ListItem dense key={i}>\n            <ListItemIcon>\n                <FileIcon />\n            </ListItemIcon>\n            <ListItemText primary={`${f.name} (${getHumanFileSize(f.size)})`} />\n        </ListItem>\n    );\n\n    return (\n        <div>\n            <List component=\"nav\">\n                {list}\n            </List>\n        </div>\n    );\n}\n\nUploadFileList.propTypes = {\n    files: PropTypes.array.isRequired\n};\n\nexport default UploadFileList;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport UploadFileList from './UploadFileList';\n\nclass FileUploader extends Component {\n\n    handleReset(event) {\n        this.refs.inputfile.value = '';\n        this.props.handleReset(event);\n    }\n\n    render() {\n        const { fileUploadList, handleSelectedFiles } = this.props;\n        const styles = {\n            inputfile: {\n                // TODO: Change this to display none as soon, as the label button works\n                // display: 'none'\n            }, inputreset: {\n                display: fileUploadList.length ? 'inline-flex' : 'none'\n            }\n        }\n\n        return (\n            <div>\n                <label htmlFor=\"button-file\">\n                    <input style={styles.inputfile} id=\"button-file\" ref=\"inputfile\" multiple type=\"file\" onChange={handleSelectedFiles} />\n                    {/*<Button component=\"span\" variant=\"contained\" color=\"primary\">\n                        Select Files\n                    </Button>*/}\n                </label>\n\n                <Button style={styles.inputreset} component=\"span\" type=\"reset\" onClick={this.handleReset.bind(this)}>\n                    Clear\n                </Button>\n\n                <UploadFileList files={fileUploadList} />\n            </div>\n        );\n    }\n}\n\nFileUploader.propTypes = {\n    fileUploadList: PropTypes.array.isRequired,\n    handleReset: PropTypes.func.isRequired,\n    handleSelectedFiles: PropTypes.func.isRequired,\n};\n\nexport default FileUploader;\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { connect } from 'react-redux';\nimport { resetFileUploader, uploadFiles, setFileUploadList } from '../../../Actions/Actions.js';\nimport FileUploader from '../../FileUploader/FileUploader.jsx';\n\nclass FormDialog extends Component {\n\n    render() {\n        const { handleClose, handleReset, handleUpload, open, canUpload, fileUploadProgress, fileUploadList, handleSelectedFiles } = this.props;\n\n        return (\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-upload\" fullWidth={true} maxWidth={'sm'}>\n                <form>\n                    <DialogTitle id=\"form-dialog-upload\">\n                        Upload files\n                    </DialogTitle>\n                    <DialogContent>\n                        <FileUploader handleUpload={handleUpload} fileUploadList={fileUploadList} handleSelectedFiles={handleSelectedFiles} handleReset={handleReset}/>\n                        {canUpload ? <LinearProgress variant=\"determinate\" value={fileUploadProgress} /> : null }\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={handleClose} color=\"primary\" type=\"button\">\n                            Cancel\n                        </Button>\n                        <Button color=\"primary\" onClick={handleUpload} disabled={!canUpload} type=\"submit\">\n                            Upload\n                        </Button>\n                    </DialogActions>\n                </form>\n            </Dialog>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        open: state.visibleDialogUploadFile,\n        canUpload: state.fileUploadList.length,\n        fileUploadList: state.fileUploadList,\n        fileUploadProgress: state.fileUploadProgress\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClose: (event) => {\n            dispatch(resetFileUploader());\n        },\n        handleUpload: (event) => {\n            event.preventDefault();\n            const files = event.currentTarget.form.querySelector('input[type=file]').files;\n            dispatch(uploadFiles(files));\n        },\n        handleSelectedFiles: (event) => {\n            dispatch(setFileUploadList(\n                [...event.target.files].map(f => ({name: f.name, size: f.size}))\n            ));\n        },\n        handleReset: (event) => {\n            dispatch(setFileUploadList([]));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog);\n","import React from 'react';\nimport DialogSolidLogin from './SolidLogin/SolidLogin.jsx';\nimport DialogSolidLogout from './SolidLogout/SolidLogout.jsx';\nimport DialogContent from './Content/Content.jsx';\nimport DialogMedia from './Media/Media.jsx';\nimport DialogEdit from './Edit/Edit.jsx';\nimport DialogCreateFolder from './CreateFolder/CreateFolder.jsx';\nimport DialogCreateFile from './CreateFile/CreateFile.jsx';\nimport DialogRename from './Rename/Rename.jsx';\nimport DialogMove from './Move/Move.jsx';\nimport DialogCopy from './Copy/Copy.jsx';\nimport DialogUploadFile from './UploadFile/UploadFile.jsx';\n\nfunction Dialogs(props) {\n    return (\n        <div className=\"Dialogs\">\n            <DialogSolidLogin />\n            <DialogSolidLogout />\n            <DialogContent />\n            <DialogMedia />\n            <DialogEdit />\n            <DialogCreateFolder />\n            <DialogCreateFile />\n            <DialogMove />\n            <DialogCopy />\n            <DialogRename />\n            <DialogUploadFile />\n        </div>\n    );\n}\n\nexport default Dialogs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { connect } from 'react-redux';\n\nconst styles = theme => ({\n  close: {\n    padding: theme.spacing.unit / 2,\n  },\n});\n\nclass DynamicSnackbar extends React.Component {\n  render() {\n    const { classes, errorMsg, handleClose, open, notificationDuration } = this.props;\n    return (\n      <div>\n        <Snackbar\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'left',\n          }}\n          open={open}\n          autoHideDuration={notificationDuration}\n          onClose={handleClose}\n          ContentProps={{\n            'aria-describedby': 'message-id',\n          }}\n          message={<span id=\"message-id\">{errorMsg}</span>}\n          action={[\n            <IconButton key=\"close\" aria-label=\"Close\" color=\"inherit\" className={classes.close} onClick={handleClose} >\n              <CloseIcon />\n            </IconButton>,\n          ]}\n        />\n      </div>\n    );\n  }\n}\n\nDynamicSnackbar.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        open: !!state.errorMsg,\n        errorMsg: state.errorMsg,\n        notificationDuration: state.notificationDuration || 60000\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClose: (event) => {\n            dispatch({\n                type: 'SET_ERROR_MSG',\n                value: null\n            });\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(DynamicSnackbar));\n\n","import React, { Component } from 'react';\nimport FileList from './Components/FileList/FileList.jsx';\nimport Navbar from './Components/Navbar/Navbar.jsx';\nimport ContextMenu from './Components/ContextMenu/ContextMenu.jsx';\nimport Dialogs from './Components/Dialogs/Dialogs.jsx';\n\nimport { MuiThemeProvider as MaterialUI, createMuiTheme } from '@material-ui/core/styles';\nimport blue from '@material-ui/core/colors/blue';\nimport { connect } from 'react-redux';\nimport { setContextMenuVisible, setVisibleDialogSolidLogin } from './Actions/Actions.js';\nimport DynamicSnackbar from './Components/Notification/DynamicSnackbar.jsx'; \n\nconst theme = createMuiTheme({\n    palette: {\n        primary: blue,\n    },\n    typography: {\n        useNextVariants: true,\n    }\n});\n\nclass App extends Component {\n\n    componentDidMount() {\n        this.props.init();\n    };\n\n    render() {\n        return (\n            <MaterialUI theme={theme}>\n                <div onClick={this.props.handleHideContextMenu} onContextMenu={this.props.handleHideContextMenu}>\n                    <Navbar />\n                    <FileList />\n                    <ContextMenu />\n                    <DynamicSnackbar />\n                    <Dialogs />\n                </div>\n            </MaterialUI>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        init: () => {\n            dispatch(setVisibleDialogSolidLogin(true));\n        },\n\n        handleHideContextMenu: (event) => {\n            if (! (event.target.tagName === 'INPUT' || /label/i.test(event.target.className))) {\n                event.preventDefault();\n            }\n            dispatch(setContextMenuVisible(false));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport thunk from 'redux-thunk';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux'\nimport MainReducer from './Reducers/MainReducer'\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\nimport './index.css';\n\nconst store = createStore(MainReducer, applyMiddleware(thunk));\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>, \n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}