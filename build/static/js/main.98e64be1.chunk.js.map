{"version":3,"sources":["../node_modules/n3/lib sync /^/.//N3.*$","Reducers/MainReducer.js","serviceWorker.js","config.js","Api/folderUtils.js","Api/Api.js","Api/ApiHandler.js","Actions/Actions.js","Components/File/File.jsx","Components/FileList/FileListEmptyMessage.jsx","Components/Loader/Loader.jsx","Components/FileList/FileList.jsx","Components/ContextMenu/ContextMenuActions/CreateFolderAction.jsx","Components/ContextMenu/ContextMenuActions/CreateFileAction.jsx","Components/ContextMenu/ContextMenuActions/UploadFileAction.jsx","Components/ContextMenu/ContextMenuActions/SolidLogoutAction.jsx","Components/Navbar/ThreeDotsMenu.jsx","Components/Breadcrumb/BreadcrumbText.jsx","Components/Navbar/Navbar.jsx","Components/ContextMenu/ContextMenuActions/OpenAction.jsx","Components/ContextMenu/ContextMenuActions/RemoveAction.jsx","Components/ContextMenu/ContextMenuActions/MoveAction.jsx","Components/ContextMenu/ContextMenuActions/CopyAction.jsx","Components/ContextMenu/ContextMenuActions/EditAction.jsx","Components/ContextMenu/ContextMenuActions/RenameAction.jsx","Components/ContextMenu/ContextMenuActions/DownloadAction.jsx","Components/ContextMenu/ContextMenuActions/OpenInNewTabAction.jsx","Components/ContextMenu/ContextMenu.jsx","Components/Dialogs/SolidLogin/SolidLogin.jsx","Components/Dialogs/SolidLogout/SolidLogout.jsx","Components/Dialogs/Content/Content.jsx","Components/Dialogs/Edit/Edit.jsx","Components/Dialogs/CreateFolder/CreateFolder.jsx","Components/Dialogs/CreateFile/CreateFile.jsx","Components/Dialogs/Rename/Rename.jsx","Components/File/FileSublist/FileSublist.jsx","Components/FileList/FileListSublist/FileListSublist.jsx","Components/Dialogs/Move/Move.jsx","Components/Dialogs/Copy/Copy.jsx","Components/FileUploader/UploadFileList.jsx","Components/FileUploader/FileUploader.jsx","Components/Dialogs/UploadFile/UploadFile.jsx","Components/Dialogs/Dialogs.jsx","Components/Notification/DynamicSnackbar.jsx","App.js","index.js"],"names":["map","./N3Lexer","./N3Lexer.js","./N3Parser","./N3Parser.js","./N3Store","./N3Store.js","./N3StreamParser","./N3StreamParser.js","./N3StreamWriter","./N3StreamWriter.js","./N3Util","./N3Util.js","./N3Writer","./N3Writer.js","webpackContext","req","id","webpackContextResolve","__webpack_require__","e","Error","code","keys","Object","resolve","module","exports","defaultState","path","pathSublist","host","isLoggedIn","webId","fileList","fileListSublist","fileListFilter","contextMenuVisible","contextMenuPosition","contextMenuPositionElement","selectedFiles","selectedFolderSublist","loading","loadingSublist","errorMsg","visibleDialogSolidLogin","visibleDialogSolidLogout","visibleDialogCreateFolder","visibleDialogCreateFile","visibleDialogUploadFile","visibleDialogContent","visibleDialogEdit","visibleDialogMove","visibleDialogCopy","visibleDialogRename","fileContentBlobUrl","fileUploadProgress","fileUploadList","MainReducer","state","arguments","length","undefined","action","type","assign","value","concat","toConsumableArray","sort","a","b","name","toLowerCase","filter","f","i","self","ff","indexOf","find","parseInt","URL","revokeObjectURL","createObjectURL","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","getHost","setHost","newHost","slice","isEditableFilePattern","isImageFilePattern","isExtractableFilePattern","actions","create_folder","move","copy","copy_folder","compress","extract","edit","remove","upload","upload_by_chunks","preview_images","folderType","fileType","getFolderItems","graph","subj","files","folders","each","rdflib","forEach","item","newItem","url","folderNode","isAnInstanceOfClass","types","index","getFileType","stats","subjectName","subjectNode","mod","size","mtime","modified","any","getStats","label","decodeURIComponent","replace","push","text2graph","_x","_x2","_x3","_text2graph","apply","this","_callee","text","contentType","regenerator_default","wrap","_context","prev","next","abrupt","Promise","reject","guessFileType","err","stop","ext","fetchItem","_fetchItem","itemName","_args","buildUrl","solidAuth","assertSuccessfulResponse","readFolder","_readFolder","_callee2","folderName","response","folderRDF","folderItems","_args2","_context2","sent","folderUtils","_callee3","destination","itemNames","_context3","copyItems","removeItems","_callee4","oldName","newName","_context4","copyFile","removeItem","_callee5","oldFolderName","newFolderName","_context5","copyFolder","removeFolderRecursively","_x12","_x13","_x14","_copyItems","_callee6","_ref","promises","_context6","_ref2","includes","_ref3","_ref4","_ref5","all","Response","_x15","_x16","_x17","_x18","_copyFile","_callee7","originPath","originName","destinationPath","destinationName","destinationUrl","itemResponse","content","_context7","headers","get","t0","blob","method","body","_x19","_x20","_x21","_x22","_copyFolder","_callee8","_ref6","_context8","createFolder","_ref7","_ref8","_callee9","_context9","Array","from","file","updateItem","_x25","_x26","_createFolder","_callee10","_context10","itemExists","createItem","_x27","_x28","_x29","_x30","_updateItem","_callee11","_context11","_callee12","baseUrl","request","_context12","link","slug","Content-Type","_x35","_x36","_removeItems","_callee13","_context13","_x37","_x38","_removeItem","_callee14","_context14","status","_x39","_x40","_removeFolderRecursively","_callee15","_context15","removeFolderContents","_x41","_x42","_removeFolderContents","_callee16","folderPath","_ref9","_context16","_ref10","_ref11","_x43","_x44","_itemExists","_callee17","_context17","ok","logFetchError","asyncToGenerator","mark","errorMessage","group","message","stack","JSON","stringify","groupEnd","fixPath","getItemList","API","getFileBlob","filename","renameFile","fileName","newFileName","_x6","_x7","_x8","_renameFile","renameFolder","_x9","_x10","_x11","_renameFolder","moveItems","filenames","_x4","_x5","_moveItems","uploadFiles","_x23","_x24","_upload","updateTextFile","getActionsByMultipleFiles","acts","fileActs","compressible","test","editable","extractable","getActionsByFile","removeAction","splice","getHumanFileSize","bytes","Math","pow","toFixed","solidLogin","dispatch","getState","setLoading","solidPopupLogin","setWebId","setIsLoggedIn","r","toString","session","popupUri","refreshFileList","setSelectedFiles","APIHandler","join","setFileList","refreshFileListSublist","setLoadingSublist","setSelectedFolderSublist","setFileListSublist","getFileContent","setFileContent","setVisibleDialogContent","downloadFile","msSaveOrOpenBlob","document","createElement","href","download","appendChild","click","setTimeout","removeChild","promptDownload","getFileContentForEdit","setVisibleDialogEdit","createNewFolder","createFolderName","folder","trim","setVisibleDialogCreateFolder","_getState15","setVisibleDialogCopy","setSelectedFileFromLastTo","lastFile","_getState16","lastPreviouslySelected","pop","lastPreviouslySelectedIndex","lastSelectedIndex","toAdd","element","initSubList","setPathSublist","resetFileUploader","setFileUploadProgress","setVisibleDialogUploadFile","setFileUploadList","enterToPreviousDirectorySublist","setPath","enterToDirectory","directory","setFileListFilter","search","setContextMenuVisible","visible","setVisibleDialogSolidLogin","setVisibleDialogSolidLogout","setVisibleDialogCreateFile","setVisibleDialogRename","setVisibleDialogMove","percentage","File","_this$props","props","isSelected","handleClick","handleDoubleClick","handleContextMenu","avatarStyle","backgroundColor","blue","realSize","react_default","className","onClick","onDoubleClick","onContextMenu","data-selected","ListItem_default","ListItemAvatar_default","Avatar_default","style","Folder_default","InsertDriveFile_default","ListItemText_default","primary","decodeURI","secondary","Component","connect","ownProps","filePath","event","preventDefault","stopPropagation","x","clientX","touches","pageX","y","clientY","pageY","shiftKey","setContextMenuPosition","ctrlKey","FileListEmptyMessage","withStyles","theme","progress","margin","spacing","unit","classes","Grid_default","container","justify","CircularProgress_default","color","FileList","fileListComponent","key","Components_File_File","Loader_Loader","Components_FileList_FileListEmptyMessage","toLocaleLowerCase","callback","handleClose","MenuItem_default","ListItemIcon_default","CreateNewFolder_default","Typography_default","variant","CloudUpload_default","Clear_default","ThreeDotsMenu","anchorEl","_this","setState","currentTarget","marginLeft","IconButton_default","aria-label","aria-owns","aria-haspopup","MoreVert_default","Menu_default","open","onClose","ContextMenuActions_CreateFolderAction","ContextMenuActions_CreateFileAction","ContextMenuActions_UploadFileAction","ContextMenuActions_SolidLogoutAction","React","BreadcrumbText","handleClickPath","rootTitle","handleGoBack","canGoBack","separator","rootPath","data-index","lastPath","directories","dir","Button_default","display","KeyboardArrowLeft_default","paths","defineProperty","breakpoints","up","root","width","marginBottom","grow","flexGrow","menuButton","marginRight","title","position","borderRadius","shape","fade","palette","common","white","&:hover","searchIcon","height","pointerEvents","alignItems","justifyContent","inputRoot","inputInput","paddingTop","paddingRight","paddingBottom","paddingLeft","transition","transitions","create","&:focus","handleChange","newPath","enterToPreviousDirectoryByIndex","AppBar_default","Toolbar_default","noWrap","Components_Breadcrumb_BreadcrumbText","Search_default","InputBase_default","placeholder","onChange","input","Navbar_ThreeDotsMenu","OpenInBrowser_default","Delete_default","HowToVote_default","FileCopy_default","WrapText_default","CloudDownload_default","Link_default","ContextMenu","anchorReference","anchorPosition","top","left","transformOrigin","vertical","horizontal","PaperProps","ContextMenuActions_OpenAction","ContextMenuActions_OpenInNewTabAction","ContextMenuActions_DownloadAction","EditAction","ContextMenuActions_CopyAction","ContextMenuActions_MoveAction","RenameAction","ContextMenuActions_RemoveAction","FormDialog","storageLocation","origin","form","querySelector","handleSubmit","handleLogin","Dialog_default","aria-labelledby","fullWidth","maxWidth","DialogTitle_default","DialogContent_default","TextField_default","autoFocus","bind","DialogActions_default","handleLogout","lastBlobUrl","blobUrl","src","alt","handleOpen","_this2","fetch","t","handleSave","textArea","minHeight","defaultValue","DialogContentText_default","handleCreate","itemList","encodeURI","createFile","realName","FileSublist","FileListSublist","File_FileSublist_FileSublist","selectedPath","canMove","FileList_FileListSublist_FileListSublist","disabled","_getState14","canCopy","UploadFileList","list","dense","List_default","component","FileUploader","refs","inputfile","handleReset","handleSelectedFiles","styles","inputreset","htmlFor","ref","multiple","FileUploader_UploadFileList","handleUpload","canUpload","Components_FileUploader_FileUploader","LinearProgress_default","target","Dialogs","SolidLogin","SolidLogout","Content","Edit","CreateFolder","CreateFile","Move","Copy","Rename","UploadFile","DynamicSnackbar","notificationDuration","Snackbar_default","anchorOrigin","autoHideDuration","ContentProps","aria-describedby","close","Close_default","padding","createMuiTheme","typography","useNextVariants","App","init","core_styles","handleHideContextMenu","Navbar","Components_FileList_FileList","Components_ContextMenu_ContextMenu","Notification_DynamicSnackbar","Dialogs_Dialogs","tagName","store","createStore","applyMiddleware","thunk","ReactDOM","render","react_redux_es","src_App","getElementById","process","addEventListener","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.98e64be1.chunk.js","sourcesContent":["var map = {\n\t\"./N3Lexer\": 104,\n\t\"./N3Lexer.js\": 104,\n\t\"./N3Parser\": 105,\n\t\"./N3Parser.js\": 105,\n\t\"./N3Store\": 135,\n\t\"./N3Store.js\": 135,\n\t\"./N3StreamParser\": 136,\n\t\"./N3StreamParser.js\": 136,\n\t\"./N3StreamWriter\": 146,\n\t\"./N3StreamWriter.js\": 146,\n\t\"./N3Util\": 106,\n\t\"./N3Util.js\": 106,\n\t\"./N3Writer\": 110,\n\t\"./N3Writer.js\": 110\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 223;","export const defaultState = {\n    path: [],\n    pathSublist: [],\n    host: null,\n    isLoggedIn: false,\n    webId: null,\n    fileList: [],\n    fileListSublist: [],\n    fileListFilter: null,\n    contextMenuVisible: null,\n    contextMenuPosition: [],\n    contextMenuPositionElement: null,\n    selectedFiles: [],\n    selectedFolderSublist: null,\n    loading: false,\n    loadingSublist: false,\n    errorMsg: null,\n    visibleDialogSolidLogin: true,\n    visibleDialogSolidLogout: false,\n    visibleDialogCreateFolder: false,\n    visibleDialogCreateFile: false,\n    visibleDialogUploadFile: false,\n    visibleDialogContent: false,\n    visibleDialogEdit: false,\n    visibleDialogMove: false,\n    visibleDialogCopy: false,\n    visibleDialogRename: false,\n    fileContentBlobUrl: null,\n    fileUploadProgress: 0,\n    fileUploadList: []\n};\n\n/**\n * Main content reducer\n * @param {Object} state\n * @param {Object} action\n * @returns {Object}\n */\nconst MainReducer = (state = defaultState, action) => {\n    switch (action.type) {\n        case 'SET_PATH':\n            return Object.assign({}, state, {\n                path: action.value\n            });\n        case 'SET_PATH_SUB_LIST':\n            return Object.assign({}, state, {\n                pathSublist: action.value\n            });\n        case 'SET_HOST':\n            return Object.assign({}, state, {\n                host: action.value\n            });\n        case 'SET_IS_LOGGED_IN':\n            return Object.assign({}, state, {\n                isLoggedIn: action.value\n            });\n        case 'SET_WEB_ID':\n            return Object.assign({}, state, {\n                webId: action.value\n            });\n        case 'ENTER_TO_DIRECTORY':\n            return Object.assign({}, state, {\n                path: [...state.path, action.value]\n            });\n        case 'ENTER_TO_DIRECTORY_SUB_LIST':\n            return Object.assign({}, state, {\n                pathSublist: [...state.pathSublist, action.value]\n            });\n        case 'SET_FILE_LIST':\n            return Object.assign({}, state, {\n                fileList: action.value.sort((a, b) => a.type < b.type ? -1 : a.name.toLowerCase() > b.name.toLowerCase())\n            });\n        case 'SET_FILE_LIST_SUB_LIST':\n            return Object.assign({}, state, {\n                fileListSublist: action.value.sort((a, b) => a.type < b.type ? -1 : a.name.toLowerCase() > b.name.toLowerCase())\n            });\n        case 'SET_FILE_LIST_FILTER':\n            return Object.assign({}, state, { \n                fileListFilter: action.value\n            });\n        case 'SET_CONTEXT_MENU_VISIBLE':\n            return Object.assign({}, state, { \n                contextMenuVisible: action.value\n            });\n        case 'SET_CONTEXT_MENU_POSITION':\n            return Object.assign({}, state, { \n                contextMenuPosition: action.value\n            });\n        case 'SET_CONTEXT_MENU_POSITION_ELEMENT':\n            return Object.assign({}, state, { \n                contextMenuPositionElement: action.value\n            });\n        case 'SET_SELECTED_FILES':\n            return Object.assign({}, state, {\n                selectedFiles: (action.value).filter((f, i, self) => self.map(ff => ff.name).indexOf(f.name) === i)\n            });\n        case 'SET_SELECTED_FOLDER_SUB_LIST':\n            return Object.assign({}, state, {\n                selectedFolderSublist: action.value\n            });\n\n        case 'TOGGLE_SELECTED_FILE':\n            return Object.assign({}, state, {\n                selectedFiles: state.selectedFiles.find(f => f.name === action.value.name) ?\n                    state.selectedFiles.filter(f => f.name !== action.value.name) :\n                    [...state.selectedFiles, action.value]\n            });\n        case 'SET_FILE_UPLOAD_PROGRESS':\n            return Object.assign({}, state, {\n                fileUploadProgress: parseInt(action.value || 0)\n            });\n        case 'SET_LOADING':\n            return Object.assign({}, state, { \n                loading: action.value\n            });\n        case 'SET_LOADING_SUB_LIST':\n            return Object.assign({}, state, { \n                loadingSublist: action.value\n            });\n        case 'SET_ERROR_MSG':\n            return Object.assign({}, state, { \n                errorMsg: action.value\n            });\n\n        case 'SET_VISIBLE_DIALOG_SOLID_LOGIN':\n            return Object.assign({}, state, { \n                visibleDialogSolidLogin: !!action.value\n            });\n\n        case 'SET_VISIBLE_DIALOG_SOLID_LOGOUT':\n            return Object.assign({}, state, { \n                visibleDialogSolidLogout: !!action.value\n            });\n\n        case 'SET_VISIBLE_DIALOG_CREATE_FOLDER':\n            return Object.assign({}, state, { \n                visibleDialogCreateFolder: !!action.value\n            });\n\n        case 'SET_VISIBLE_DIALOG_CREATE_FILE':\n            return Object.assign({}, state, { \n                visibleDialogCreateFile: !!action.value\n            });\n            \n        case 'SET_VISIBLE_DIALOG_UPLOAD_FILE':\n            return Object.assign({}, state, { \n                visibleDialogUploadFile: !!action.value\n            });\n\n        case 'SET_VISIBLE_DIALOG_CONTENT':\n            return Object.assign({}, state, { \n                visibleDialogContent: !!action.value\n            });\n\n        case 'SET_VISIBLE_DIALOG_EDIT':\n            return Object.assign({}, state, { \n                visibleDialogEdit: !!action.value\n            });\n\n        case 'SET_VISIBLE_DIALOG_MOVE':\n            return Object.assign({}, state, { \n                visibleDialogMove: !!action.value\n            });\n        case 'SET_VISIBLE_DIALOG_COPY':\n            return Object.assign({}, state, { \n                visibleDialogCopy: !!action.value\n            });\n        case 'SET_VISIBLE_DIALOG_RENAME':\n            return Object.assign({}, state, { \n                visibleDialogRename: !!action.value\n            });\n        case 'SET_FILE_UPLOAD_LIST':\n            return Object.assign({}, state, {\n                fileUploadList: action.value\n            });\n\n        case 'SET_FILE_CONTENT':\n            /**\n             * Removing old blob url\n             */\n            state.fileContentBlobUrl && URL.revokeObjectURL(state.fileContentBlobUrl);\n            return Object.assign({}, state, { \n                fileContentBlobUrl: action.value ? URL.createObjectURL(action.value) : null\n            });\n\n        default:\n            return state;\n    }\n};\n\nexport default MainReducer;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","let host = null;\n\nexport default {\n    getHost() {\n        return host;\n    },\n    setHost(newHost) {\n        host = newHost;\n        while (host.slice(-1) === '/')\n            host = host.slice(0, -1);\n    },\n\n    isEditableFilePattern: /\\.(txt|diff?|patch|svg|asc|cnf|cfg|conf|html?|cfm|cgi|aspx?|ini|pl|py|md|css|cs|jsx?|jsp|log|htaccess|htpasswd|gitignore|gitattributes|env|json|atom|eml|rss|markdown|sql|xml|xslt?|sh|rb|as|bat|cmd|cob|for|ftn|frm|frx|inc|lisp|scm|coffee|php[3-6]?|java|c|cbl|go|h|scala|vb|tmpl|lock|go|yml|yaml|tsv|lst|ttl)$/i,\n    isImageFilePattern: /\\.(jpe?g|gif|bmp|png|svg|tiff?)$/i,\n    isExtractableFilePattern: /\\.(gz|tar|rar|g?zip)$/i,\n\n    actions: {\n        create_folder: true,\n        move: true,\n        copy: true,\n        copy_folder: true,\n        compress: true,\n        extract: true,\n        edit: true,\n        remove: true,\n        upload: true,\n        upload_by_chunks: true,\n        preview_images: true,\n    }\n};\n","// Based on https://github.com/jeff-zucker/solid-file-client/blob/master/src/folderUtils.js\nimport * as rdflib from 'rdflib';\n\nconst folderType = 'dir';\nconst fileType = 'file';\n\nexport function getStats(graph, subjectName) {\n    const subjectNode = rdflib.sym(subjectName);\n    const mod = rdflib.sym('http://purl.org/dc/terms/modified');\n    const size = rdflib.sym('http://www.w3.org/ns/posix/stat#size');\n    const mtime = rdflib.sym('http://www.w3.org/ns/posix/stat#mtime');\n    let modified = graph.any(subjectNode, mod, undefined);\n    if (typeof (modified) === \"undefined\") return false;\n    else modified = modified.value;\n    return {\n        modified: modified,\n        size: graph.any(subjectNode, size, undefined).value,\n        mtime: graph.any(subjectNode, mtime, undefined).value,\n    };\n}\n\n/** A type used internally to indicate we are handling a folder */\n/**\n * @param {rdflib.IndexedFormula} graph a rdflib.graph() database instance\n * @param {string} url location of the folder\n * @returns {string} content mime-type of a file, If it's a folder, return 'folder', 'unknown' for not sure\n */\nexport function getFileType(graph, url) {\n    const folderNode = rdflib.sym(url);\n    const isAnInstanceOfClass = rdflib.sym('http://www.w3.org/1999/02/22-rdf-syntax-ns#type');\n    const types = graph.each(folderNode, isAnInstanceOfClass, undefined);\n    for (const index in types) {\n        const contentType = types[index].value;\n        if (contentType.match('ldp#BasicContainer'))\n            return folderType;\n        else\n            return fileType;\n    }\n    return 'unknown';\n}\nexport function getFolderItems(graph, subj) {\n    const files = [];\n    const folders = [];\n    graph.each(\n        rdflib.sym(subj),\n        rdflib.sym('http://www.w3.org/ns/ldp#contains'),\n        undefined\n    ).forEach(item => {\n        let newItem = {}\n        newItem.type = getFileType(graph, item.value)\n        const stats = getStats(graph, item.value)\n        newItem.modified = stats.modified\n        newItem.size = stats.size\n        newItem.mtime = stats.mtime\n        newItem.label = decodeURIComponent(item.value).replace(/.*\\//, '')\n\n        if (newItem.type === folderType) {\n            item.value = item.value.replace(/[/]+/g, '/');\n            item.value = item.value.replace(/https:/, 'https:/');\n            const name = item.value.replace(/\\/$/, '')\n            newItem.name = name.replace(/.*\\//, '')\n            newItem.url = item.value\n\n            folders.push(newItem);\n        }\n        else {\n            newItem.url = item.value\n            newItem.name = item.value.replace(/.*\\//, '')\n\n            files.push(newItem);\n        }\n    });\n\n    return { files, folders };\n}\n\n/**\n * @param {string} text RDF text that can be passed to $rdf.parse()\n * @param {*} content the request body\n * @param {string} contentType Content-Type of the request\n * @returns {$rdf.IndexedFormula} a $rdf.graph() database instance with parsed RDF\n */\nexport async function text2graph(text, url, contentType) {\n    return new Promise((resolve, reject) => {\n        contentType = contentType || guessFileType(url)\n        var graph = rdflib.graph();\n        try {\n            rdflib.parse(text, graph, url, contentType);\n            resolve(graph);\n        } catch (err) {\n            reject(err)\n        }\n    })\n}\n\n/*cjs*/ function guessFileType(url) {\n    const ext = url.replace(/.*\\./, '');\n    if (ext.match(/\\/$/)) return folderType;\n    if (ext.match(/(md|markdown)/)) return 'text/markdown';\n    if (ext.match(/html/)) return 'text/html';\n    if (ext.match(/xml/)) return 'text/xml';\n    if (ext.match(/ttl/)) return 'text/turtle';\n    if (ext.match(/n3/)) return 'text/n3';\n    if (ext.match(/rq/)) return 'application/sparql';\n    if (ext.match(/css/)) return 'text/css';\n    if (ext.match(/txt/)) return 'text/plain';\n    if (ext.match(/json/)) return 'application/json';\n    if (ext.match(/js/)) return 'application/javascript';\n    if (ext.match(/(png|gif|jpeg|tif)/)) return 'image';\n    if (ext.match(/(mp3|aif|ogg)/)) return 'audio';\n    if (ext.match(/(avi|mp4|mpeg)/)) return 'video';\n    /* default */ return 'text/turtle';\n}","import config from './../config.js';\nimport * as folderUtils from './folderUtils.js';\nimport * as solidAuth from 'solid-auth-client';\n\n/**\n * @typedef {Object} FolderItems\n * @property {Array<{Object}>} files\n * @property {Array<{Object}>} folders\n */\n\n\n/**\n * Fetch API to get item\n * @param {String} path\n * @param {String} itemName\n * @returns {Response}\n */\nexport async function fetchItem(path, itemName = '') {\n    const url = buildUrl(path, itemName);\n    return solidAuth.fetch(url)\n        .then(assertSuccessfulResponse);\n};\n\n\n/**\n * Fetch API to retrieve object containing a files and folders array\n * @param {String} path\n * @param {String} folderName\n * @returns {Promise<FolderItems>}\n */\nexport async function readFolder(path, folderName = '') {\n    const url = buildUrl(path, folderName);\n\n    const response = await fetchItem(path, folderName);\n    const folderRDF = await response.text();\n    const graph = await folderUtils.text2graph(folderRDF, url, 'text/turtle');\n    const folderItems = folderUtils.getFolderItems(graph, url);\n\n    return folderItems;\n}\n\n\n/**\n * Fetch API to move items\n * @param {String} path\n * @param {String} destination\n * @param {Array<String>} itemNames\n * @returns {Response}\n */\nexport async function moveItems(path, destination, itemNames) {\n    await copyItems(path, destination, itemNames);\n    return removeItems(path, itemNames);\n};\n\n\n/**\n * Fetch API to rename a file\n * @param {String} path\n * @param {String} oldName\n * @param {String} newName\n * @returns {Response}\n */\nexport async function renameFile(path, oldName, newName) {\n    await copyFile(path, oldName, path, newName);\n    return removeItem(path, oldName);\n};\n\n\n/**\n * Fetch API to rename a folder\n * @param {String} path\n * @param {String} oldFolderName\n * @param {String} newFolderName\n * @returns {Response}\n */\nexport async function renameFolder(path, oldFolderName, newFolderName) {\n    await copyFolder(path, oldFolderName, path, newFolderName);\n    return removeFolderRecursively(path, oldFolderName);\n};\n\n\n/**\n * Fetch API to copy files\n * @param {String} path\n * @param {String} destination\n * @param {Array} itemNames\n * @returns {Response}\n */\nexport async function copyItems(path, destination, itemNames) {\n    let { files, folders } = await readFolder(path);\n\n    files = files.filter(({ name }) => itemNames.includes(name));\n    folders = folders.filter(({ name }) => itemNames.includes(name));\n\n    const promises = [\n        ...files.map(({ name }) => copyFile(path, name, destination, name)),\n        ...folders.map(({ name }) => copyFolder(path, name, destination, name))\n    ];\n\n    await Promise.all(promises);\n    return new Response();\n};\n\n\n/**\n * Fetch API to copy a file\n * @param {String} originPath\n * @param {String} originName\n * @param {String} destinationPath\n * @param {String} destinationName\n * @returns {Response}\n */\nexport async function copyFile(originPath, originName, destinationPath, destinationName) {\n    const destinationUrl = buildUrl(destinationPath, destinationName);\n\n    const itemResponse = await fetchItem(originPath, originName);\n    const content = (itemResponse.headers.get('Content-Type') === 'application/json') ?\n        await itemResponse.text()\n        : await itemResponse.blob();\n\n    return solidAuth.fetch(destinationUrl, {\n        method: 'PUT',\n        body: content\n    }).then(assertSuccessfulResponse);\n}\n\n\n/**\n * Fetch API to copy a folder recursively\n * @param {String} originPath \n * @param {String} originName \n * @param {String} destinationPath \n * @param {String} destinationName \n * @return {Response}\n */\nexport async function copyFolder(originPath, originName, destinationPath, destinationName) {\n    // TODO: Combine these two promises for better performance\n    await createFolder(destinationPath, destinationName);\n    const { files, folders } = await readFolder(originPath, originName);\n\n    const promises = [\n        ...files.map(({ name }) => copyFile(`${originPath}/${originName}`, name, `${destinationPath}/${destinationName}`, name)),\n        ...folders.map(({ name }) => copyFolder(`${originPath}/${originName}`, name, `${destinationPath}/${destinationName}`, name))\n    ];\n\n    await Promise.all(promises);\n    return new Response();\n}\n\n\n/**\n * Fetch API to upload files\n * @param {String} path\n * @param {FileList} fileList\n * @returns {Response}\n */\nexport async function upload(path, fileList) {\n    const promises = Array.from(fileList).map(file => updateItem(path, file.name, file));\n    await Promise.all(promises);\n    return new Response();\n};\n\n\n/**\n * Fetch API to create a folder\n * @param {String} path\n * @param {String} folderName\n * @returns {Response}\n */\nexport async function createFolder(path, folderName) {\n    if (await itemExists(path, folderName))\n        return new Response();\n\n    return createItem(path, folderName, '', 'dir');\n}\n\n\n/**\n * Fetch API to create update or create an item\n * @param {String} path\n * @param {String} itemName\n * @param {String} content\n * @param {String} contentType\n * @returns {Response}\n */\nexport async function updateItem(path, itemName, content, contentType) {\n    await removeItem(path, itemName);\n    return createItem(path, itemName, content, contentType);\n}\n\n\n/**\n * Fetch API to create create an item\n * @param {String} path\n * @param {String} itemName\n * @param {String} content\n * @param {String} contentType\n * @returns {Response}\n */\nasync function createItem(path, itemName, content, contentType) {\n    const baseUrl = `${config.getHost()}${path}`;\n    const link = (contentType === 'dir') ?\n        '<http://www.w3.org/ns/ldp#BasicContainer>; rel=\"type\"'\n        : '<http://www.w3.org/ns/ldp#Resource>; rel=\"type\"';\n\n    const request = {\n        method: 'POST',\n        headers: {\n            link,\n            slug: itemName,\n            'Content-Type': contentType\n        },\n        body: content\n    };\n\n    return solidAuth.fetch(baseUrl, request)\n        .then(assertSuccessfulResponse);\n}\n\n\n/**\n * Fetch API to remove multiple items\n * @param {String} path\n * @param {Array} itemNames\n * @returns {Response}\n */\nexport async function removeItems(path, itemNames) {\n    await Promise.all(itemNames.map(itemName => removeItem(path, itemName)));\n    return new Response();\n};\n\n\n/**\n * Fetch API to remove one item\n * @param {String} path \n * @param {String} itemName \n * @returns {Response}\n */\nexport async function removeItem(path, itemName) {\n    const url = buildUrl(path, itemName);\n\n    const response = await solidAuth.fetch(url, { method: 'DELETE' });\n    if (response.status === 409) {\n        return removeFolderRecursively(path, itemName);\n    }\n    assertSuccessfulResponse(response);\n    return response;\n}\n\n\n/**\n * Fetch API to remove contents and folder itself recursively\n * @param {String} path \n * @param {String} folderName\n * @returns {Response}\n */\nexport async function removeFolderRecursively(path, folderName) {\n    await removeFolderContents(path, folderName);\n    return removeItem(path, folderName);\n}\n\n\n/**\n * Fetch API to remove contents of one folder recursively\n * @param {String} path \n * @param {String} folderName\n * @returns {Response}\n */\nexport async function removeFolderContents(path, folderName) {\n    const folderPath = `${path}/${folderName}`;\n\n    const { files, folders } = await readFolder(path, folderName);\n    const promises = [\n        ...files.map(({ name }) => removeItem(folderPath, name)),\n        ...folders.map(({ name }) => removeFolderRecursively(folderPath, name))\n    ];\n    await Promise.all(promises);\n    return new Response();\n}\n\n\n/**\n * Fetch API to create update or create an item\n * @param {String} path\n * @param {String} itemName\n * @returns {Promise<Boolean>}\n */\nexport async function itemExists(path, itemName) {\n    try {\n        await fetchItem(path, itemName);\n        return true;\n    }\n    catch (error) {\n        if (error instanceof Response && error.status === 404)\n            return false;\n\n        throw error;\n    }\n}\n\n\n/**\n * Build up an url from a path relative to the storage location and an itemName\n * @param {String} path \n * @param {Sting} itemName \n * @return {String}\n */\nfunction buildUrl(path, itemName = '') {\n    let url = `${config.getHost()}${path}/${itemName}`;\n    while (url.slice(-1) === '/')\n        url = url.slice(0, -1);\n\n    return url;\n}\n\n\n/**\n * Throw response if fetch response was unsuccessful\n * @param {Response} response\n * @returns {Response}\n */\nconst assertSuccessfulResponse = (response) => {\n    if (!response.ok)\n        throw response;\n    return response;\n};","import * as API from './Api.js';\nimport config from './../config.js';\n\n\n/**\n * Log a fetch response error and throw it again\n * @param {*} error \n */\nconst logFetchError = async (error) => {\n    let errorMessage = '';\n\n    console.group('handleFetchError');\n    if (error instanceof Response) {\n        errorMessage = await error.text();\n\n        console.error(`url: ${error.url}`);\n        console.error(`status: ${error.status}`);\n    }\n    else if (error instanceof Error) {\n        errorMessage = error.message;\n        console.error(error.stack);\n    }\n    else if (typeof error === 'string') {\n        errorMessage = error;\n    }\n    else {\n        errorMessage = JSON.stringify(error);\n    }\n    console.error(`errorMessage: ${errorMessage}`);\n    console.error(`error: ${error}`);\n    console.groupEnd();\n\n    throw new Error(errorMessage);\n}\n\n/**\n * Clean path string removing double slashes and prepending a slash\n * @param {String} path\n * @returns {String}\n */\nconst fixPath = (path) => {\n    return ('/' + path).replace(/\\/\\//g, '/');\n};\n\n/**\n * Wrap API response for retrieving item list\n * @param {String} path\n * @returns {Promise<API.FolderItems>}\n */\nexport const getItemList = (path) => {\n    path = fixPath(path);\n    return API.readFolder(path)\n        .then(({ files, folders }) => [...files, ...folders])\n        .catch(logFetchError);\n};\n\n/**\n * Wrap API response for retrieving file content\n * @param {String} path\n * @param {String} filename\n * @returns {Promise<Blob>}\n */\nexport const getFileBlob = (path, filename) => {\n    path = fixPath(path);\n    return API.fetchItem(path, filename)\n        .then(response => response.blob())\n        .catch(logFetchError);\n};\n\n\n/**\n * Wrap API response for renaming a file\n * @param {String} path\n * @param {String} fileName\n * @param {String} newFileName\n * @returns {Promise<Response>}\n */\nexport const renameFile = (path, fileName, newFileName) => {\n    path = fixPath(path);\n    return API.renameFile(path, fileName, newFileName)\n        .catch(logFetchError)\n};\n\n\n/**\n * Wrap API response for renaming a folder\n * @param {String} path\n * @param {String} folderName\n * @param {String} newFolderName\n * @returns {Promise<Response>}\n */\nexport const renameFolder = (path, folderName, newFolderName) => {\n    path = fixPath(path);\n    return API.renameFolder(path, folderName, newFolderName)\n        .catch(logFetchError)\n};\n\n/**\n * Wrap API response for creating a folder\n * @param {String} path\n * @param {String} folder\n * @returns {Promise<Response>}\n */\nexport const createFolder = (path, folder) => {\n    path = fixPath(path);\n    if (!(folder || '').trim()) {\n        return Promise.reject('Invalid folder name');\n    }\n    return API.createFolder(path, folder)\n        .catch(logFetchError)\n};\n\n/**\n * Wrap API response for removing a file or folder\n * @param {String} path\n * @param {Array<String>} filenames\n * @returns {Promise<Response>}\n */\nexport const removeItems = (path, filenames) => {\n    path = fixPath(path);\n    if (!filenames.length) {\n        return Promise.reject('No files to remove');\n    }\n    return API.removeItems(path, filenames)\n        .catch(logFetchError)\n};\n\n/**\n * Wrap API response for moving a file or folder\n * @param {String} path\n * @param {String} destination\n * @param {Array<String>} filenames\n * @returns {Promise<Response>}\n */\nexport const moveItems = (path, destination, filenames) => {\n    path = fixPath(path);\n    destination = fixPath(destination);\n    if (!filenames.length) {\n        return Promise.reject('No files to move');\n    }\n    return API.moveItems(path, destination, filenames)\n        .catch(logFetchError)\n};\n\n/**\n * Wrap API response for copying a file or folder\n * @param {String} path\n * @param {String} destination\n * @param {Array<String>} filenames\n * @returns {Promise<Response>}\n */\nexport const copyItems = (path, destination, filenames) => {\n    path = fixPath(path);\n    destination = fixPath(destination);\n    if (!filenames.length) {\n        return Promise.reject('No files to copy');\n    }\n    return API.copyItems(path, destination, filenames)\n        .catch(logFetchError)\n};\n\n/**\n * Wrap API response for uploading files\n * @param {String} path\n * @param {Object<FileList>} fileList\n * @returns {Promise<Response>}\n */\nexport const uploadFiles = (path, fileList) => {\n    path = fixPath(path);\n\n    if (!fileList.length) {\n        return Promise.reject('No files to upload');\n    }\n    return API.upload(path, fileList)\n        .catch(logFetchError)\n};\n\n/**\n * Wrap API response for uploading a text file\n * @param {String} path\n * @param {String} fileName\n * @param {String} content\n * @returns {Promise<Response>}\n */\nexport const updateTextFile = (path, fileName, content) => {\n    path = fixPath(path);\n\n    return API.updateItem(path, fileName, content)\n        .catch(logFetchError);\n};\n\n\n/**\n * Calculate available actions for a file\n * @param {Object} file\n * @returns {Array<String>}\n */\nexport const getActionsByFile = (file, acts = []) => {\n    if (file.type === 'dir') {\n        acts.push('open');\n\n        typeof file.compressible !== 'undefined' ?\n            file.compressible && acts.push('compress') :\n            acts.push('compress');\n    }\n\n    if (file.type === 'file') {\n        acts.push('download');\n        config.isImageFilePattern.test(file.name) && acts.push('open');\n\n        typeof file.editable !== 'undefined' ?\n            file.editable && acts.push('edit') :\n            config.isEditableFilePattern.test(file.name) && acts.push('edit');\n\n        typeof file.extractable !== 'undefined' ?\n            file.extractable && acts.push('extract') :\n            config.isExtractableFilePattern.test(file.name) && acts.push('extract');\n    }\n\n    acts.push('openInNewTab');\n    acts.push('copy');\n    acts.push('move');\n    acts.push('rename');\n    acts.push('perms');\n    acts.push('remove');\n\n    return acts;\n}\n\n/**\n * Calculate available actions for selected files, only leaving common actions\n * @param {Array<Object>} files\n * @returns {Array<String>}\n */\nexport const getActionsByMultipleFiles = (files, acts = []) => {\n    files.forEach(file => {\n        const fileActs = getActionsByFile(file);\n        // intersects previous actions with the following to leave only common actions\n        acts = acts.length ?\n            acts.filter(value => -1 !== fileActs.indexOf(value)) \n            : fileActs;\n    });\n\n    if (files.length > 1) {\n        const removeAction = name => acts.splice(acts.indexOf(name), acts.indexOf(name) > -1);\n        removeAction('open');\n        removeAction('openInNewTab');\n        removeAction('edit');\n        removeAction('compress');\n        removeAction('download');\n        removeAction('rename');\n\n        acts.push('compress');\n    }\n    return acts;\n}\n\n/**\n * Calculate file size by bytes in human readable format\n * @param {Number} bytes\n * @returns {String}\n */\nexport const getHumanFileSize = (bytes) => {\n    const e = (Math.log(bytes) / Math.log(1e3)) | 0;\n    return +(bytes / Math.pow(1e3, e)).toFixed(2) + ' ' + ('kMGTPEZY'[e - 1] || '') + 'B';\n};","import * as APIHandler from '../Api/ApiHandler.js';\nimport * as solidAuth from 'solid-auth-client';\nimport config from '../config.js';\n\n\nexport const solidLogin = () => (dispatch, getState) => {\n    dispatch(setLoading(true));\n\n    solidPopupLogin().then(webId => {\n        dispatch(setWebId(webId));\n        dispatch(setIsLoggedIn(true));\n        dispatch(setLoading(false));\n    }).catch(r => {\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoading(false));\n    });\n};\n\nasync function solidPopupLogin() {\n    let session = await solidAuth.currentSession();\n    if (!session) {\n        let popupUri = 'https://solid.community/common/popup.html';\n        session = await solidAuth.popupLogin({ popupUri });\n    }\n    return(session.webId);\n}\n\n\nexport const solidLogout = () => (dispatch, getState) => {\n    dispatch(setLoading(true));\n\n    solidAuth.logout().then(() => {\n        // TODO: Add reset method\n        dispatch(setPath([]));\n        dispatch(setPathSublist([]));\n        dispatch(setFileList([]));\n        dispatch(setSelectedFiles([]));\n        dispatch(setVisibleDialogSolidLogout(false));\n        dispatch(setVisibleDialogSolidLogin(true));\n        dispatch(setLoading(false));\n    }).catch(r => {\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoading(false));\n    });\n};\n\n\n/**\n * Request API to get file list for the selected path then refresh UI\n * @returns {Function}\n */\nexport const uploadFiles = (fileList) => (dispatch, getState) => {\n    const { path } = getState();\n    dispatch(setLoading(true));\n    dispatch(setSelectedFiles([]));\n    dispatch(setFileUploadProgress(50));\n\n    APIHandler.uploadFiles(path.join('/'), fileList).then(r => {\n        dispatch(setFileUploadProgress(100));\n        setTimeout(f => {\n            dispatch(resetFileUploader());\n        }, 300);\n        dispatch(refreshFileList());\n    }).catch(r => {\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoading(false));\n    });\n};\n\n\nexport const createFile = (fileName) => (dispatch, getState) => {\n    const { path } = getState();\n    dispatch(setLoading(true));\n\n    APIHandler.updateTextFile(path.join('/'), fileName, '').then(r => {\n        dispatch(setVisibleDialogCreateFile(false));\n        dispatch(refreshFileList());\n\n        APIHandler.getItemList(path.join('/')).then(itemList => {\n            const file = itemList.find(item => item.name === fileName || item.name === encodeURI(fileName));\n            dispatch(setSelectedFiles([file]));\n            dispatch(setLoading(false));\n            dispatch(setVisibleDialogEdit(true));\n        });\n    });\n};\n\n\nexport const updateTextFile = (fileName, content) => (dispatch, getState) => {\n    const { path } = getState();\n    dispatch(setLoading(true));\n\n    APIHandler.updateTextFile(path.join('/'), fileName, content).then(r => {\n        dispatch(setVisibleDialogEdit(false));\n        dispatch(refreshFileList());\n        dispatch(setLoading(false));\n    }).catch(r => {\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoading(false));\n    });\n}\n\n/**\n * Request API to get file list for the selected path then refresh UI\n * @returns {Function}\n */\nexport const refreshFileList = () => (dispatch, getState) => {\n    const { path } = getState();\n    dispatch(setLoading(true));\n    dispatch(setSelectedFiles([]));\n    APIHandler.getItemList(path.join('/')).then(r => {\n        dispatch(setLoading(false));\n        dispatch(setFileList(r));\n    }).catch(r => {\n        dispatch(setFileList([]));\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoading(false));\n    });\n};\n\n\n/**\n * Request API to get file list for the selected path then refresh UI\n * @returns {Function}\n */\nexport const refreshFileListSublist = () => (dispatch, getState) => {\n    const { pathSublist } = getState();\n    dispatch(setLoadingSublist(true));\n    dispatch(setSelectedFolderSublist(null));\n\n    APIHandler.getItemList(pathSublist.join('/')).then(r => {\n        dispatch(setLoadingSublist(false));\n        dispatch(setFileListSublist(r));\n    }).catch(r => {\n        dispatch(setFileListSublist([]));\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoadingSublist(false));\n    });\n};\n\n\n/**\n * Request API to get file content then dispatch defined events\n * @param {String} fileName\n * @returns {Function}\n */\nexport const getFileContent = (fileName) => (dispatch, getState) => {\n    const { path } = getState();\n\n    dispatch(setLoading(true));\n    dispatch(setFileContent(null));\n    dispatch(setVisibleDialogContent(true));\n    APIHandler.getFileBlob(path.join('/'), fileName).then(blob => {\n        dispatch(setFileContent(blob));\n        dispatch(setLoading(false));\n    }).catch(r => {\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoading(false));\n    });\n};\n\n/**\n * Request API to rename file then dispatch defined events\n * @param {String} fileName\n * @returns {Function}\n */\nexport const renameFile = (fileName, newFileName) => (dispatch, getState) => {\n    const { path } = getState();\n    dispatch(setLoading(true));\n    APIHandler.renameFile(path.join('/'), fileName, newFileName).then(blob => {\n        dispatch(setVisibleDialogRename(false));\n        dispatch(setLoading(false));\n        dispatch(refreshFileList());\n    }).catch(r => {\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoading(false));\n    });\n};\n\n/**\n * Request API to rename file then dispatch defined events\n * @param {String} folderName\n * @param {String} newFolderName\n * @returns {Function}\n */\nexport const renameFolder = (folderName, newFolderName) => (dispatch, getState) => {\n    const { path } = getState();\n    dispatch(setLoading(true));\n    APIHandler.renameFolder(path.join('/'), folderName, newFolderName).then(blob => {\n        dispatch(setVisibleDialogRename(false));\n        dispatch(setLoading(false));\n        dispatch(refreshFileList());\n    }).catch(r => {\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoading(false));\n    });\n};\n\n/**\n * Request API to get download file then dispatch defined events\n * @param {String} fileName\n * @returns {Function}\n */\nexport const downloadFile = (fileName) => (dispatch, getState) => {\n    const { path } = getState();\n    dispatch(setLoading(true));\n    APIHandler.getFileBlob(path.join('/'), fileName).then(blob => {\n        promptDownload(blob, fileName);\n        dispatch(setLoading(false));\n    }).catch(r => {\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoading(false));\n    });\n};\n\n// code from https://stackoverflow.com/a/30832210/6548154\nfunction promptDownload(file, fileName) {\n    if (window.navigator.msSaveOrOpenBlob) // IE10+\n        window.navigator.msSaveOrOpenBlob(file, fileName);\n    else { // Others\n        const a = document.createElement(\"a\");\n        const url = URL.createObjectURL(file);\n        a.href = url;\n        a.download = fileName;\n        document.body.appendChild(a);\n        a.click();\n        setTimeout(() => {\n            document.body.removeChild(a);\n            window.URL.revokeObjectURL(url);  \n        }, 0);\n    }\n}\n\n\nexport const openInNewTab = (fileName) => (dispatch, getState) => {\n    const { path } = getState();\n    const url = `${config.getHost()}/${path.length ? (path.join('/') + '/') : ''}${fileName}`;\n    window.open(url, '_blank');\n};\n\n\n/**\n * Request API to get file content then dispatch defined events\n * @param {String} fileName\n * @returns {Function}\n */\nexport const getFileContentForEdit = (fileName) => (dispatch, getState) => {\n    const { path } = getState();\n    dispatch(setLoading(true));\n    dispatch(setFileContent(null));\n    dispatch(setVisibleDialogEdit(true));\n    APIHandler.getFileBlob(path.join('/'), fileName).then(blob => {\n        dispatch(setFileContent(blob));\n        dispatch(setLoading(false));\n    }).catch(r => {\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoading(false));\n    });\n};\n\n\n/**\n * Request API to create a folder then dispatch defined events\n * @param {String} createFolderName\n * @returns {Function}\n */\nexport const createNewFolder = (createFolderName) => (dispatch, getState) => {\n    const { path } = getState();\n    dispatch(setLoading(true));\n\n    APIHandler.createFolder(path.join('/'), createFolderName).then(r => {\n        dispatch(setVisibleDialogCreateFolder(false));\n        dispatch(setLoading(false));\n        dispatch(refreshFileList());\n    }).catch(r => {\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoading(false));\n    });\n};\n\n\n/**\n * Request API to remove an item then dispatch defined events\n * @param {Array} filenames\n * @returns {Function}\n */\nexport const removeItems = (files) => (dispatch, getState) => {\n    const { path } = getState();\n    const filenames = files.map(f => f.name);\n\n    dispatch(setLoading(true));\n    APIHandler.removeItems(path.join('/'), filenames).then(r => {\n        dispatch(setLoading(false));\n        dispatch(refreshFileList());\n    }).catch(r => {\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoading(false));\n    });\n};\n\n\n/**\n * Request API to move an item then dispatch defined events\n * @param {Array} filenames\n * @returns {Function}\n */\nexport const moveItems = (files) => (dispatch, getState) => {\n    const { path, pathSublist, selectedFolderSublist } = getState();\n    const destination = pathSublist.join('/') + '/' + selectedFolderSublist.name;\n    const filenames = files.map(f => f.name);\n\n    dispatch(setLoading(true));\n    APIHandler.moveItems(path.join('/'), destination, filenames).then(r => {\n        dispatch(setLoading(false));\n        dispatch(setVisibleDialogMove(false));\n        dispatch(refreshFileList());\n    }).catch(r => {\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoading(false));\n    });\n};\n\n\n/**\n * Request API to copy an item then dispatch defined events\n * @param {Array} filenames\n * @returns {Function}\n */\nexport const copyItems = (files) => (dispatch, getState) => {\n    const { path, pathSublist, selectedFolderSublist } = getState();\n    const destination = pathSublist.join('/') + '/' + selectedFolderSublist.name;\n    const filenames = files.map(f => f.name);\n\n    dispatch(setLoading(true));\n    APIHandler.copyItems(path.join('/'), destination, filenames).then(r => {\n        dispatch(setLoading(false));\n        dispatch(setVisibleDialogCopy(false));\n        dispatch(refreshFileList());\n    }).catch(r => {\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoading(false));\n    });\n};\n\n/**\n * This handles multiple selection by using shift key\n * @param {Object} lastFile\n * @returns {Function}\n */\nexport const setSelectedFileFromLastTo = (lastFile) => (dispatch, getState) => {\n    const { fileList, selectedFiles } = getState();\n\n    const lastPreviouslySelected = [...selectedFiles].pop();\n    const lastPreviouslySelectedIndex = fileList.indexOf(fileList.find(f => f.name === lastPreviouslySelected.name))\n    const lastSelectedIndex = fileList.indexOf(fileList.find(f => f.name === lastFile.name))\n\n    let toAdd = [];\n    if (lastSelectedIndex > lastPreviouslySelectedIndex) {\n        toAdd = fileList.filter((index, element) => {\n            return fileList.indexOf(index) <= lastSelectedIndex && fileList.indexOf(index) >= lastPreviouslySelectedIndex\n        });\n    } else {\n        toAdd = fileList.filter((index, element) => {\n            return fileList.indexOf(index) >= lastSelectedIndex && fileList.indexOf(index) <= lastPreviouslySelectedIndex\n        });\n    }\n    dispatch(setSelectedFiles([...selectedFiles, ...toAdd]));\n};\n\n\n/**\n * @returns {Function}\n */\nexport const initSubList = () => (dispatch, getState) => {\n    const { path } = getState();\n    dispatch(setSelectedFolderSublist(null));\n    dispatch(setFileListSublist([]));    \n    dispatch(setPathSublist([...path]));\n    dispatch(refreshFileListSublist());\n};\n\nexport const resetFileUploader = () => (dispatch, getState) => {\n    dispatch(setFileUploadProgress(0));\n    dispatch(setVisibleDialogUploadFile(false));\n    dispatch(setFileUploadList([]));\n};\n\nexport const enterToPreviousDirectory = () => (dispatch, getState) => {\n    const { path } = getState();\n    dispatch(setPath(path.slice(0, -1)));\n    dispatch(setFileListFilter(null));\n    dispatch(refreshFileList());\n};\n\nexport const enterToPreviousDirectoryByIndex = (index) => (dispatch, getState) => {\n    const { path } = getState();\n    const newPath = [...path].slice(0, ++index);\n    dispatch(setPath(newPath));\n    dispatch(refreshFileList());\n    dispatch(setFileListFilter(null));\n};\n\nexport const enterToPreviousDirectorySublist = () => (dispatch, getState) => {\n    const { pathSublist } = getState();\n    dispatch(setPathSublist(pathSublist.slice(0, -1)));\n    dispatch(refreshFileListSublist());\n};\n\nexport const setPath = (path) => {\n    return {\n        type: 'SET_PATH',\n        value: path\n    };\n};\n\nexport const setPathSublist = (path) => {\n    return {\n        type: 'SET_PATH_SUB_LIST',\n        value: path\n    };\n};\n\nexport const setHost = (host) => {\n    return {\n        type: 'SET_HOST',\n        value: host\n    };\n};\n\nexport const setIsLoggedIn = (isLoggedIn) => {\n    return {\n        type: 'SET_IS_LOGGED_IN',\n        value: isLoggedIn\n    };\n};\n\nexport const setWebId = (webId) => {\n    return {\n        type: 'SET_WEB_ID',\n        value: webId\n    };\n};\n\nexport const enterToDirectory = (directory) => (dispatch, getState) => {\n    dispatch({\n        type: 'ENTER_TO_DIRECTORY',\n        value: directory\n    });\n    dispatch(setFileListFilter(null));\n    dispatch(refreshFileList());\n};\n\nexport const enterToDirectorySublist = (directory) => (dispatch, getState) => {\n    dispatch({\n        type: 'ENTER_TO_DIRECTORY_SUB_LIST',\n        value: directory\n    });\n    dispatch(refreshFileListSublist());\n};\n\nexport const setFileList = (fileList) => {\n    return {\n        type: 'SET_FILE_LIST',\n        value: fileList\n    };\n};\n\nexport const setFileListSublist = (fileList) => {\n    return {\n        type: 'SET_FILE_LIST_SUB_LIST',\n        value: fileList\n    };\n};\n\nexport const setSelectedFiles = (files) => {\n    return {\n        type: 'SET_SELECTED_FILES',\n        value: files\n    };\n};\n\nexport const setSelectedFolderSublist = (file) => {\n    return {\n        type: 'SET_SELECTED_FOLDER_SUB_LIST',\n        value: file\n    };\n};\n\nexport const setFileListFilter = (search) => {\n    return {\n        type: 'SET_FILE_LIST_FILTER',\n        value: search\n    };\n};\n\nexport const setContextMenuVisible = (visible) => {\n    return {\n        type: 'SET_CONTEXT_MENU_VISIBLE',\n        value: !!visible\n    };\n};\n\nexport const setContextMenuPosition = (x, y) => {\n    return {\n        type: 'SET_CONTEXT_MENU_POSITION',\n        value: [x, y]\n    };\n};\n\nexport const setContextMenuPositionElement = (element) => {\n    return {\n        type: 'SET_CONTEXT_MENU_POSITION_ELEMENT',\n        value: element\n    };\n};\n\nexport const toggleSelectedFile = (file) => {\n    return {\n        type: 'TOGGLE_SELECTED_FILE',\n        value: file\n    };\n};\n\nexport const rightClickOnFile = (file) => (dispatch, getState) => {\n    const { selectedFiles } = getState();\n    const isSelected = selectedFiles.indexOf(selectedFiles.find(f => f.name === file.name)) !== -1;\n\n    !isSelected && dispatch(setSelectedFiles([file]));\n};\n\nexport const setLoading = (value) => {\n    return {\n        type: 'SET_LOADING',\n        value: value\n    };\n};\n\nexport const setLoadingSublist = (value) => {\n    return {\n        type: 'SET_LOADING_SUB_LIST',\n        value: value\n    };\n};\n\nexport const setVisibleDialogSolidLogin = (visible) => {\n    return {\n        type: 'SET_VISIBLE_DIALOG_SOLID_LOGIN',\n        value: !!visible\n    };\n};\n\nexport const setVisibleDialogSolidLogout = (visible) => {\n    return {\n        type: 'SET_VISIBLE_DIALOG_SOLID_LOGOUT',\n        value: !!visible\n    };\n};\n\nexport const setVisibleDialogCreateFolder = (visible) => {\n    return {\n        type: 'SET_VISIBLE_DIALOG_CREATE_FOLDER',\n        value: !!visible\n    };\n};\n\nexport const setVisibleDialogCreateFile = (visible) => {\n    return {\n        type: 'SET_VISIBLE_DIALOG_CREATE_FILE',\n        value: !!visible\n    };\n};\n\nexport const setVisibleDialogUploadFile = (visible) => {\n    return {\n        type: 'SET_VISIBLE_DIALOG_UPLOAD_FILE',\n        value: !!visible\n    };\n};\n\nexport const setVisibleDialogRename = (visible) => {\n    return {\n        type: 'SET_VISIBLE_DIALOG_RENAME',\n        value: !!visible\n    };\n};\n\nexport const setVisibleDialogMove = (visible) => {\n    return {\n        type: 'SET_VISIBLE_DIALOG_MOVE',\n        value: !!visible\n    };\n};\n\nexport const setVisibleDialogCopy = (visible) => {\n    return {\n        type: 'SET_VISIBLE_DIALOG_COPY',\n        value: !!visible\n    };\n};\n\nexport const setVisibleDialogContent = (visible) => {\n    return {\n        type: 'SET_VISIBLE_DIALOG_CONTENT',\n        value: !!visible\n    };\n};\n\nexport const setVisibleDialogEdit = (visible) => {\n    return {\n        type: 'SET_VISIBLE_DIALOG_EDIT',\n        value: !!visible\n    };\n};\n\nexport const setFileContent = (blob) => {\n   return {\n        type: 'SET_FILE_CONTENT',\n        value: blob\n    };\n};\n\nexport const setFileUploadProgress = (percentage) => {\n   return {\n        type: 'SET_FILE_UPLOAD_PROGRESS',\n        value: percentage\n    };\n};\n\nexport const setFileUploadList = (files) => {\n   return {\n        type: 'SET_FILE_UPLOAD_LIST',\n        value: files\n    };\n};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport {\n    enterToDirectory, setContextMenuVisible, toggleSelectedFile, setContextMenuPosition,\n    setSelectedFileFromLastTo, getFileContent, getFileContentForEdit, \n    rightClickOnFile, setSelectedFiles\n} from '../../Actions/Actions.js';\nimport './File.css';\n\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport FolderIcon from '@material-ui/icons/Folder';\nimport FileIcon from '@material-ui/icons/InsertDriveFile';\nimport blue from '@material-ui/core/colors/blue';\nimport config from '../../config.js';\nimport { getHumanFileSize } from '../../Api/ApiHandler';\n\nclass File extends Component {\n    render() {\n        const { isSelected, type, name, size, handleClick, handleDoubleClick, handleContextMenu } = this.props;\n        const avatarStyle = {\n            backgroundColor: isSelected ? blue['A200'] : null\n        };\n        const realSize = typeof size !== 'undefined' && type !== 'dir' ? getHumanFileSize(size) : null;\n        return (\n            <div className=\"File\" onClick={handleClick} onDoubleClick={handleDoubleClick} onContextMenu={handleContextMenu} data-selected={isSelected}>\n                <ListItem>\n                    <ListItemAvatar>\n                        <Avatar style={avatarStyle}>\n                            { type === 'dir' ? <FolderIcon /> : <FileIcon />}\n                        </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText className=\"filename\" primary={decodeURI(name)} secondary={realSize} />\n                </ListItem>\n            </div>\n        );\n    }\n}\n\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        filePath: [...state.path, ownProps.name],\n        isSelected: !!state.selectedFiles.find(f => f.name === ownProps.name)\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        /**\n         * @param {Object} event\n         * @returns {undefined}\n         */\n        handleDoubleClick: (event) => {\n            if (ownProps.type === 'file') {\n                if (config.isEditableFilePattern.test(ownProps.name) || ownProps.editable) {\n                    dispatch(getFileContentForEdit(ownProps.name));\n                } else if (config.isImageFilePattern.test(ownProps.name)) {\n                    dispatch(getFileContent(ownProps.name));\n                }\n                return;\n            }\n\n            dispatch(enterToDirectory(ownProps.name));\n        },\n\n        /**\n         * @param {Object} event\n         * @returns {undefined}\n         */\n        handleContextMenu: (event) => {\n            event.preventDefault();\n            event.stopPropagation();\n\n            const x = event.clientX || (event.touches && event.touches[0].pageX);\n            const y = event.clientY || (event.touches && event.touches[0].pageY);\n\n            if (event.shiftKey) {\n                dispatch(setSelectedFileFromLastTo(ownProps));\n            } else {\n                dispatch(rightClickOnFile(ownProps));\n            }\n            \n            dispatch(setContextMenuVisible(true));\n            dispatch(setContextMenuPosition(x, y));\n        },\n\n        /**\n         * @param {Object} event\n         * @returns {undefined}\n         */\n        handleClick: (event) => {\n            event.stopPropagation();\n\n            if (event.ctrlKey) {\n                dispatch(toggleSelectedFile(ownProps));\n            } else if (event.shiftKey) {\n                dispatch(setSelectedFileFromLastTo(ownProps));\n            } else {\n                dispatch(setSelectedFiles([ownProps]));\n            }\n        }\n    };\n};\n\nFile.propTypes = {\n    name: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    size: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number\n    ]),\n    editable: PropTypes.oneOfType([\n        PropTypes.bool, PropTypes.number\n    ])\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(File);\n\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './FileListEmptyMessage.css';\n\nclass FileListEmptyMessage extends Component {\n    render() {\n        return (\n            <div className=\"FileListEmptyMessage\">\n                No files in this folder\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n    };\n};\n\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FileListEmptyMessage);\n\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Grid from '@material-ui/core/Grid';\n\nconst styles = theme => ({\n  progress: {\n    margin: theme.spacing.unit * 10,\n  },\n});\n\nfunction Loader(props) {\n    const { classes } = props;\n    return (\n        <Grid container justify=\"center\">\n            <CircularProgress className={classes.progress} color=\"secondary\" />\n        </Grid>\n    );\n}\n\nLoader.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Loader);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport File from '../File/File.jsx'; \nimport FileListEmptyMessage from './FileListEmptyMessage';\nimport Loader from '../Loader/Loader.jsx'; \nimport './FileList.css';\n\nclass FileList extends Component {\n    render() {\n        const { fileList, loading } = this.props;\n        \n        const fileListComponent = fileList.map((file, key) => {\n            return <File type={file.type} name={file.name} editable={file.editable} size={file.size} key={key} />\n        });\n\n        return <div className=\"FileList\">\n            { loading ? \n                <Loader /> : \n                fileListComponent.length ? fileListComponent : <FileListEmptyMessage />\n            }\n        </div>\n    }\n}\n\n\nconst mapStateToProps = (state) => {\n    const filteredList = state.fileList.filter(\n        file => state.fileListFilter ? file.name.toLocaleLowerCase().match(state.fileListFilter.toLocaleLowerCase()) : true\n    );\n    return {\n        fileList: filteredList,\n        loading: state.loading\n    };\n};\n\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        handleClick: (event) => {\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FileList);\n\n\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { connect } from 'react-redux';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from '@material-ui/core/Typography';\nimport CreateNewFolderIcon from '@material-ui/icons/CreateNewFolder';\nimport { setVisibleDialogCreateFolder } from '../../../Actions/Actions.js';\n\nfunction CreateFolderAction(props) {\n    const {handleClick, handleClose} = props;\n\n    const handleCloseAfter = (callback) => (event) => {\n        callback();\n        handleClose();\n    };\n\n    return (\n        <MenuItem onClick={handleCloseAfter(handleClick)}>\n            <ListItemIcon>\n                <CreateNewFolderIcon />\n            </ListItemIcon>\n            <Typography variant=\"inherit\">\n                Create folder\n            </Typography>\n        </MenuItem>        \n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClick: (event) => {\n            dispatch(setVisibleDialogCreateFolder(true));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateFolderAction);\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { connect } from 'react-redux';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from '@material-ui/core/Typography';\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\nimport { setVisibleDialogCreateFile } from '../../../Actions/Actions.js';\n\nfunction CreateFileAction(props) {\n    const {handleClick, handleClose} = props;\n\n    const handleCloseAfter = (callback) => (event) => {\n        callback();\n        handleClose();\n    };\n\n    return (\n        <MenuItem onClick={handleCloseAfter(handleClick)}>\n            <ListItemIcon>\n                <InsertDriveFileIcon />\n            </ListItemIcon>\n            <Typography variant=\"inherit\">\n                Create file\n            </Typography>\n        </MenuItem>        \n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClick: (event) => {\n            dispatch(setVisibleDialogCreateFile(true));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateFileAction);\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { connect } from 'react-redux';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from '@material-ui/core/Typography';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport { setVisibleDialogUploadFile } from '../../../Actions/Actions.js';\n\nfunction UploadFileAction(props) {\n    const {handleClick, handleClose} = props;\n\n    const handleCloseAfter = (callback) => (event) => {\n        callback();\n        handleClose();\n    };\n\n    return (\n        <MenuItem onClick={handleCloseAfter(handleClick)}>\n            <ListItemIcon>\n                <CloudUploadIcon />\n            </ListItemIcon>\n            <Typography variant=\"inherit\">\n                Upload files\n            </Typography>\n        </MenuItem>        \n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClick: (event) => {\n            dispatch(setVisibleDialogUploadFile(true));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UploadFileAction);\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { connect } from 'react-redux';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from '@material-ui/core/Typography';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport { setVisibleDialogSolidLogout } from '../../../Actions/Actions.js';\n\nfunction SolidLogoutAction(props) {\n    const {handleClick, handleClose} = props;\n\n    const handleCloseAfter = (callback) => (event) => {\n        callback();\n        handleClose();\n    };\n\n    return (\n        <MenuItem onClick={handleCloseAfter(handleClick)}>\n            <ListItemIcon>\n                <ClearIcon />\n            </ListItemIcon>\n            <Typography variant=\"inherit\">\n                Logout\n            </Typography>\n        </MenuItem>        \n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClick: (event) => {\n            dispatch(setVisibleDialogSolidLogout(true));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SolidLogoutAction);\n","import React from 'react';\nimport Menu from '@material-ui/core/Menu';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport { connect } from 'react-redux';\nimport CreateFolderAction from '../ContextMenu/ContextMenuActions/CreateFolderAction.jsx';\nimport CreateFileAction from '../ContextMenu/ContextMenuActions/CreateFileAction.jsx';\nimport UploadFileAction from '../ContextMenu/ContextMenuActions/UploadFileAction.jsx';\nimport SolidLogoutAction from '../ContextMenu/ContextMenuActions/SolidLogoutAction.jsx';\n\nclass ThreeDotsMenu extends React.Component {\n  state = {\n    anchorEl: null,\n  };\n\n  handleClick = event => {\n    this.setState({ anchorEl: event.currentTarget });\n  };\n\n  handleClose = () => {\n    this.setState({ anchorEl: null });\n  };\n\n  render() {\n    const { anchorEl } = this.state;\n    return (\n      <div style={{marginLeft:'1em'}}>\n        <IconButton color=\"inherit\" \n          aria-label=\"More\"\n          aria-owns={Boolean(anchorEl) ? 'long-menu' : undefined}\n          aria-haspopup=\"true\"\n          onClick={this.handleClick}>\n          <MoreVertIcon />\n        </IconButton>\n\n        <Menu anchorEl={anchorEl} open={Boolean(anchorEl)} onClose={this.handleClose}>\n          <CreateFolderAction handleClose={this.handleClose} />\n          <CreateFileAction handleClose={this.handleClose} />\n          <UploadFileAction handleClose={this.handleClose} />\n          <SolidLogoutAction handleClose={this.handleClose} />\n        </Menu>\n      </div>\n    );\n  }\n}\n\n\nconst mapStateToProps = (state) => {\n    return {\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ThreeDotsMenu);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport KeyboardArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft';\nimport Button from '@material-ui/core/Button';\nimport './BreadcrumbText.css';\n\nconst styles = theme => ({\n  lastPath: {\n    display: 'block',\n    [theme.breakpoints.up('sm')]: {\n      display: 'none'\n    }\n  },\n  paths: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    }\n  }\n});\n\nclass BreadcrumbText extends Component {\n\n    render() {\n        const { classes, handleClickPath, path, rootTitle, handleGoBack, canGoBack } = this.props;\n\n        const separator = <span>&gt;</span>;\n        const rootPath = <span onClick={(e) => handleClickPath(e, -1, path)} data-index={0}>\n            { rootTitle } { path.length ? separator : '' }\n        </span>;\n        const lastPath = [...path].pop() || rootTitle;\n\n        const directories = path.map((dir, index) => {\n            return <span key={index} data-index={index} onClick={(e) => handleClickPath(e, index, path)}>\n                <span>{dir}</span> { path.length -1 !== index ? separator : '' }&nbsp;\n            </span>\n        });\n\n        return (\n            <div className=\"BreadcrumbText\">\n                <div className={classes.lastPath}>\n                    <Button onClick={handleGoBack} color=\"inherit\" type=\"button\" style={{display: canGoBack ? 'inline-flex' : 'none'}}>\n                        <KeyboardArrowLeftIcon />\n                    </Button>\n                    {lastPath}\n                </div>\n                <div className={classes.paths}>{rootPath} {directories}</div>\n            </div>\n        );\n    }\n}\n\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n    };\n};\n\nconst mapStateToProps = (state) => {\n    return {\n    };\n};\n\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(BreadcrumbText));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport { fade } from '@material-ui/core/styles/colorManipulator';\nimport { withStyles } from '@material-ui/core/styles';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { connect } from 'react-redux';\nimport { setFileListFilter, enterToPreviousDirectoryByIndex } from '../../Actions/Actions.js';\nimport ThreeDotsMenu from './ThreeDotsMenu.jsx';\nimport BreadcrumbText from '../Breadcrumb/BreadcrumbText.jsx';\nimport { enterToPreviousDirectory } from '../../Actions/Actions.js';\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    marginBottom: '4.3em'\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20,\n  },\n  title: {\n    display: 'block', // was none\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginLeft: 0,\n    width: '100%',\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing.unit,\n      width: 'auto',\n      display: 'block'\n    },\n  },\n  searchIcon: {\n    width: theme.spacing.unit * 9,\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n    width: '100%',\n  },\n  inputInput: {\n    paddingTop: theme.spacing.unit,\n    paddingRight: theme.spacing.unit,\n    paddingBottom: theme.spacing.unit,\n    paddingLeft: theme.spacing.unit * 10,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: 100,\n      '&:focus': {\n        width: 200,\n      },\n    },\n  },\n});\n\nfunction SearchAppBar(props) {\n  const { classes, path, handleClickPath, handleGoBack, canGoBack } = props;\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"fixed\">\n        <Toolbar>\n          <Typography className={classes.title} variant=\"h6\" color=\"inherit\" noWrap>\n            <BreadcrumbText \n                path={path} \n                handleClickPath={handleClickPath} \n                handleGoBack={handleGoBack}\n                canGoBack={canGoBack}\n                rootTitle=\"Solid Filemanager\"\n            />\n          </Typography>\n          <div className={classes.grow} />\n\n          <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <InputBase\n              placeholder=\"Search…\"\n              value={props.value}\n              onChange={props.handleChange}\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n            />\n          </div>\n          <ThreeDotsMenu />\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\nSearchAppBar.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\n\nconst mapStateToProps = (state) => {\n    return {\n        value: state.fileListFilter || '',\n        path: state.path,\n        canGoBack: state.path.length\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        handleChange: (event) => {\n            dispatch(setFileListFilter(event.currentTarget.value));\n        },\n        handleGoBack: (event) => {\n            dispatch(enterToPreviousDirectory());\n        },\n        /**\n         * @param {Object} event\n         * @param {Number} index\n         * @param {Array} path\n         * @returns {undefined}\n         */        \n        handleClickPath: (event, index) => {\n            dispatch(enterToPreviousDirectoryByIndex(index));\n            event.preventDefault();\n        }\n    };\n};\n\n\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(SearchAppBar));\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { connect } from 'react-redux';\nimport { getFileContent, enterToDirectory } from '../../../Actions/Actions.js';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from '@material-ui/core/Typography';\nimport OpenInBrowserIcon from '@material-ui/icons/OpenInBrowser';\n\nfunction OpenAction(props) {\n    const {handleClick, selectedFiles} = props;\n    return (\n        <MenuItem onClick={(e) => handleClick(e, selectedFiles)}>\n            <ListItemIcon>\n                <OpenInBrowserIcon />\n            </ListItemIcon>\n            <Typography variant=\"inherit\">\n                Open\n            </Typography>\n        </MenuItem>        \n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        selectedFiles: state.selectedFiles\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClick: (event, selectedFiles) => {\n            if (selectedFiles[0].type === 'dir') {\n                dispatch(enterToDirectory(selectedFiles[0].name));\n                return;\n            }\n            dispatch(getFileContent(selectedFiles[0].name));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OpenAction);\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { connect } from 'react-redux';\nimport { removeItems } from '../../../Actions/Actions.js';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from '@material-ui/core/Typography';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nfunction RemoveAction(props) {\n    const {handleClick, selectedFiles} = props;\n    return (\n        <MenuItem onClick={(e) => handleClick(e, selectedFiles)}>\n            <ListItemIcon>\n                <DeleteIcon />\n            </ListItemIcon>\n            <Typography variant=\"inherit\">\n                Remove\n            </Typography>\n        </MenuItem>        \n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        selectedFiles: state.selectedFiles\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClick: (event, selectedFiles) => {\n            dispatch(removeItems(selectedFiles));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RemoveAction);\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { connect } from 'react-redux';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from '@material-ui/core/Typography';\nimport HowToVoteIcon from '@material-ui/icons/HowToVote';\nimport { initSubList, setVisibleDialogMove } from '../../../Actions/Actions.js';\n\nfunction MoveAction(props) {\n    const {handleClick, selectedFiles} = props;\n\n    return (\n        <MenuItem onClick={(e) => handleClick(e, selectedFiles)}>\n            <ListItemIcon>\n                <HowToVoteIcon />\n            </ListItemIcon>\n            <Typography variant=\"inherit\">\n                Move\n            </Typography>\n        </MenuItem>        \n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        selectedFiles: state.selectedFiles\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClick: (event, selectedFiles) => {\n            dispatch(initSubList());\n            dispatch(setVisibleDialogMove(true));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MoveAction);\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { connect } from 'react-redux';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from '@material-ui/core/Typography';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport { initSubList, setVisibleDialogCopy } from '../../../Actions/Actions.js';\n\nfunction CopyAction(props) {\n    const {handleClick, selectedFiles} = props;\n\n    return (\n        <MenuItem onClick={(e) => handleClick(e, selectedFiles)}>\n            <ListItemIcon>\n                <FileCopyIcon />\n            </ListItemIcon>\n            <Typography variant=\"inherit\">\n                Copy\n            </Typography>\n        </MenuItem>        \n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        selectedFiles: state.selectedFiles\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClick: (event, selectedFiles) => {\n            dispatch(initSubList());\n            dispatch(setVisibleDialogCopy(true));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CopyAction);\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { connect } from 'react-redux';\nimport { getFileContentForEdit } from '../../../Actions/Actions.js';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from '@material-ui/core/Typography';\nimport OpenInBrowserIcon from '@material-ui/icons/OpenInBrowser';\n\nfunction OpenAction(props) {\n    const {handleClick, selectedFiles} = props;\n    return (\n        <MenuItem onClick={(e) => handleClick(e, selectedFiles)}>\n            <ListItemIcon>\n                <OpenInBrowserIcon />\n            </ListItemIcon>\n            <Typography variant=\"inherit\">\n                Edit\n            </Typography>\n        </MenuItem>        \n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        selectedFiles: state.selectedFiles\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClick: (event, selectedFiles) => {\n            dispatch(getFileContentForEdit(selectedFiles[0].name));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OpenAction);\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { connect } from 'react-redux';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from '@material-ui/core/Typography';\nimport WrapTextIcon from '@material-ui/icons/WrapText';\nimport { setVisibleDialogRename } from '../../../Actions/Actions.js';\n\nfunction MoveAction(props) {\n    const {handleClick, selectedFiles} = props;\n\n    return (\n        <MenuItem onClick={(e) => handleClick(e, selectedFiles)}>\n            <ListItemIcon>\n                <WrapTextIcon />\n            </ListItemIcon>\n            <Typography variant=\"inherit\">\n                Rename\n            </Typography>\n        </MenuItem>        \n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        selectedFiles: state.selectedFiles\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClick: (event, selectedFiles) => {\n            dispatch(setVisibleDialogRename(true));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MoveAction);\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { connect } from 'react-redux';\nimport { downloadFile } from '../../../Actions/Actions.js';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from '@material-ui/core/Typography';\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\n\nfunction DownloadAction(props) {\n    const {handleClick, selectedFiles} = props;\n    return (\n        <MenuItem onClick={(e) => handleClick(e, selectedFiles)}>\n            <ListItemIcon>\n                <CloudDownloadIcon   />\n            </ListItemIcon>\n            <Typography variant=\"inherit\">\n                Download\n            </Typography>\n        </MenuItem>        \n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        selectedFiles: state.selectedFiles\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClick: (event, selectedFiles) => {\n            dispatch(downloadFile(selectedFiles[0].name));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DownloadAction);\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { connect } from 'react-redux';\nimport { openInNewTab } from '../../../Actions/Actions.js';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from '@material-ui/core/Typography';\nimport LinkIcon from '@material-ui/icons/Link';\n\nfunction OpenInNewTabAction(props) {\n    const {handleClick, selectedFiles} = props;\n    return (\n        <MenuItem onClick={(e) => handleClick(e, selectedFiles)}>\n            <ListItemIcon>\n                <LinkIcon   />\n            </ListItemIcon>\n            <Typography variant=\"inherit\">\n                Open in new Tab\n            </Typography>\n        </MenuItem>        \n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        selectedFiles: state.selectedFiles\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClick: (event, selectedFiles) => {\n            dispatch(openInNewTab(selectedFiles[0].name));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OpenInNewTabAction);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './ContextMenu.css';\nimport Menu from '@material-ui/core/Menu';\nimport { getActionsByMultipleFiles } from '../../Api/ApiHandler.js';\nimport OpenAction from './ContextMenuActions/OpenAction.jsx';\nimport RemoveAction from './ContextMenuActions/RemoveAction.jsx';\nimport MoveAction from './ContextMenuActions/MoveAction.jsx';\nimport CopyAction from './ContextMenuActions/CopyAction.jsx';\nimport EditAction from './ContextMenuActions/EditAction.jsx';\nimport RenameAction from './ContextMenuActions/RenameAction.jsx';\nimport DownloadAction from './ContextMenuActions/DownloadAction.jsx';\nimport OpenInNewTabAction from './ContextMenuActions/OpenInNewTabAction.jsx';\n\nclass ContextMenu extends Component {\n\n    render() {\n        const { acts, visible, x, y } = this.props;\n\n        return (\n            <div>\n                <Menu\n                    anchorReference=\"anchorPosition\"\n                    anchorPosition={{ top: y, left: x }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left',\n                    }}\n                    open={visible}\n                    onClose={() => { }}\n                    PaperProps={{ style: { width: 190 } }}>\n                    {acts.includes('open') && <OpenAction />}\n                    {acts.includes('openInNewTab') && <OpenInNewTabAction />}\n                    {acts.includes('download') && <DownloadAction />}\n                    {acts.includes('edit') && <EditAction />}\n                    {acts.includes('copy') && <CopyAction />}\n                    {acts.includes('move') && <MoveAction />}\n                    {acts.includes('rename') && <RenameAction />}\n                    {acts.includes('remove') && <RemoveAction />}\n                </Menu>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        x: state.contextMenuPosition[0] || 0,\n        y: state.contextMenuPosition[1] || 0,\n        visible: !!state.contextMenuVisible,\n        acts: getActionsByMultipleFiles(state.selectedFiles),\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContextMenu);\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport { connect } from 'react-redux';\nimport { solidLogin, setVisibleDialogSolidLogin, refreshFileList } from '../../../Actions/Actions.js';\nimport config from '../../../config.js';\n\nclass FormDialog extends Component {\n    state = {\n      storageLocation: null,\n    };\n\n    componentWillReceiveProps(props) {\n      const { isLoggedIn, webId } = props;\n      if (isLoggedIn) {\n        const storageLocation = (new URL(webId)).origin;\n        this.setState({ storageLocation });\n      }\n    }\n\n    handleChange (event) {\n      const storageLocation = event.currentTarget.form.querySelector('input').value;\n      this.setState({ storageLocation });\n    }\n\n    handleSubmit (event) {\n        this.props.handleSubmit(event)(this.state.storageLocation);\n    }\n\n    render() {\n        let { storageLocation } = this.state;\n        const { handleClose, handleLogin, open, isLoggedIn } = this.props;\n\n        return (\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-solid-login\" fullWidth={true} maxWidth={'sm'}>\n                <form>\n                  <DialogTitle id=\"form-dialog-solid-login\">Login to your Solid pod</DialogTitle>\n                  <DialogContent>\n                    <p>Please login to your solid pod to access this app by clicking the login button below.</p>\n                    <Button color=\"primary\" type=\"submit\" onClick={handleLogin}>\n                      Login\n                    </Button>\n                    {\n                      isLoggedIn && (\n                        <div>\n                          <p>Please enter your pods storage location</p>\n                          <TextField autoFocus fullWidth margin=\"dense\" label=\"Storage Location\" type=\"text\" onChange={this.handleChange.bind(this)} value={storageLocation} />\n                        </div>\n                      )\n                    }\n                  </DialogContent>\n                  <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\" type=\"button\">\n                      Cancel\n                    </Button>\n                    <Button color=\"primary\" type=\"submit\" onClick={this.handleSubmit.bind(this)}>\n                      Enter your Pod\n                    </Button>\n                  </DialogActions>\n                </form>\n            </Dialog>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        open: state.visibleDialogSolidLogin,\n        webId: state.webId,\n        isLoggedIn: state.isLoggedIn\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClose: event => {\n            dispatch(setVisibleDialogSolidLogin(false));\n        },\n        handleLogin: event => {\n            event.preventDefault();\n            dispatch(solidLogin());\n        },\n        handleSubmit: event => (storageLocation) => {\n            event.preventDefault();\n            config.setHost(storageLocation);\n            dispatch(setVisibleDialogSolidLogin(false));\n            dispatch(refreshFileList());\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog);\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { connect } from 'react-redux';\nimport { solidLogout, setVisibleDialogSolidLogout } from '../../../Actions/Actions.js';\n\nclass FormDialog extends Component {\n\n    render() {\n        const { handleClose, handleLogout, open } = this.props;\n\n        return (\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-solid-logout\" fullWidth={true} maxWidth={'sm'}>\n                <form>\n                  <DialogTitle id=\"form-dialog-solid-logout\">Logout from your Solid pod</DialogTitle>\n                  <DialogContent>\n                    <p>Please confirm logging out by clicking the Logout button below</p>\n                  </DialogContent>\n                  <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\" type=\"button\">\n                      Cancel\n                    </Button>\n                    <Button color=\"primary\" type=\"submit\" onClick={handleLogout}>\n                      Logout\n                    </Button>\n                  </DialogActions>\n                </form>\n            </Dialog>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        open: state.visibleDialogSolidLogout\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClose: event => {\n            dispatch(setVisibleDialogSolidLogout(false));\n        },\n        handleLogout: event => {\n            event.preventDefault();\n            dispatch(solidLogout());\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog);\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { connect } from 'react-redux';\nimport { setVisibleDialogContent } from '../../../Actions/Actions.js';\n\nclass FormDialog extends Component {\n\n    state = {\n        lastBlobUrl: null,\n        content: '...',\n        loading: false\n    };\n\n    componentDidUpdate() {\n        if (this.props.blobUrl !== this.state.lastBlobUrl) {\n            this.setState({\n                lastBlobUrl: this.props.blobUrl\n            });\n            this.setState({\n                loading: true\n            });\n        }\n    }\n\n    render() {\n        const { handleClose, open } = this.props;\n        return (\n          <div style={{marginLeft:'1em'}}>\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-content\" fullWidth={true} maxWidth={'sm'}>\n              <DialogTitle id=\"form-dialog-content\">Viewing file </DialogTitle>\n              <DialogContent>\n                <img src={this.props.blobUrl} alt=\"\" style={{maxWidth: '100%'}}/>\n              </DialogContent>\n              <DialogActions>\n                <Button onClick={handleClose} color=\"primary\" type=\"button\">\n                  Close\n                </Button>\n              </DialogActions>\n            </Dialog>\n          </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        open: state.visibleDialogContent,\n        blobUrl: state.fileContentBlobUrl\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClose: (event) => {\n            dispatch(setVisibleDialogContent(false));\n        },\n        handleOpen: (event) => {\n            dispatch(setVisibleDialogContent(true));\n        },\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog);\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { connect } from 'react-redux';\nimport { setVisibleDialogEdit, updateTextFile } from '../../../Actions/Actions.js';\n\nclass FormDialog extends Component {\n\n    state = {\n        lastBlobUrl: null,\n        content: null,\n        loading: false\n    };\n\n    componentDidUpdate() {\n        if (this.props.blobUrl !== this.state.lastBlobUrl) {\n            this.setState({\n                lastBlobUrl: this.props.blobUrl\n            });\n            this.setState({\n                loading: true\n            });\n\n            this.props.blobUrl && fetch(this.props.blobUrl).then(r => {\n                return r.text();\n            }).then(t => {\n                this.setState({\n                    content: t\n                });\n                this.setState({\n                    loading: false\n                });\n            });\n        }\n    }\n\n    handleSave (event) {\n        event.preventDefault();\n        const content = event.currentTarget.form.querySelector('textarea').value;\n\n        this.props.handleSave(event)(this.props.fileName, content);\n    }\n\n    render() {\n        const { handleClose, open } = this.props;\n        const textAreaStyle = {\n            width: '100%',\n            minHeight: '300px'\n        };\n        const textArea = <textarea style={textAreaStyle} defaultValue={this.state.content || ''} />;\n\n        return (\n            <div>\n              <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-edit\" fullWidth={true} maxWidth={'sm'}>\n                <form>\n                  <DialogTitle id=\"form-dialog-edit\">Editing file </DialogTitle>\n                  <DialogContent>\n                    <DialogContentText>\n                      {this.state.loading ? 'Loading...' : textArea}\n                    </DialogContentText>\n                  </DialogContent>\n                  <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\" type=\"button\">\n                      Close\n                    </Button>\n                    <Button color=\"primary\" onClick={this.handleSave.bind(this)} type=\"submit\">\n                      Update\n                    </Button>\n                  </DialogActions>\n                </form>\n              </Dialog>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        open: state.visibleDialogEdit,\n        fileName: state.selectedFiles.length ? state.selectedFiles[0].name : '',\n        blobUrl: state.fileContentBlobUrl\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClose: (event) => {\n            dispatch(setVisibleDialogEdit(false));\n        },\n        handleOpen: (event) => {\n            dispatch(setVisibleDialogEdit(true));\n        },\n        handleSave: (event) => (fileName, content) => {\n            dispatch(updateTextFile(fileName, content));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog);\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { connect } from 'react-redux';\nimport { createNewFolder, setVisibleDialogCreateFolder } from '../../../Actions/Actions.js';\n\nclass FormDialog extends Component {\n\n    render() {\n        const { handleClose, handleSave, value, open } = this.props;\n\n        return (\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-create-folder\" fullWidth={true} maxWidth={'sm'}>\n                <form>\n                  <DialogTitle id=\"form-dialog-create-folder\">Create folder</DialogTitle>\n                  <DialogContent>\n                    <TextField autoFocus fullWidth margin=\"dense\" label=\"Folder name\" type=\"text\" value={value} />\n                  </DialogContent>\n                  <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\" type=\"button\">\n                      Cancel\n                    </Button>\n                    <Button color=\"primary\" type=\"submit\" onClick={handleSave}>\n                      Save\n                    </Button>\n                  </DialogActions>\n                </form>\n            </Dialog>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        open: state.visibleDialogCreateFolder\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClose: event => {\n            dispatch(setVisibleDialogCreateFolder(false));\n        },\n        handleSave: event => {\n            event.preventDefault();\n            const folderName = event.currentTarget.form.querySelector('input').value;\n            dispatch(createNewFolder(folderName));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog);\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { connect } from 'react-redux';\nimport { createFile, setVisibleDialogCreateFile } from '../../../Actions/Actions.js';\n\nclass FormDialog extends Component {\n\n    render() {\n        const { handleClose, handleCreate, value, open } = this.props;\n\n        return (\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-create-file\" fullWidth={true} maxWidth={'sm'}>\n                <form>\n                  <DialogTitle id=\"form-dialog-create-file\">Create file</DialogTitle>\n                  <DialogContent>\n                    <TextField autoFocus fullWidth margin=\"dense\" label=\"File name\" type=\"text\" value={value} />\n                  </DialogContent>\n                  <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\" type=\"button\">\n                      Cancel\n                    </Button>\n                    <Button color=\"primary\" type=\"submit\" onClick={handleCreate}>\n                      Create\n                    </Button>\n                  </DialogActions>\n                </form>\n            </Dialog>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        open: state.visibleDialogCreateFile\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClose: event => {\n            dispatch(setVisibleDialogCreateFile(false));\n        },\n        handleCreate: event => {\n            event.preventDefault();\n            const fileName = event.currentTarget.form.querySelector('input').value;\n            dispatch(createFile(fileName));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog);\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { connect } from 'react-redux';\nimport { renameFile, renameFolder, setVisibleDialogRename } from '../../../Actions/Actions.js';\n\nclass FormDialog extends Component {\n\n    state = {\n        value: ''\n    };\n\n    componentWillReceiveProps (props) {\n        this.setState({value: props.realName});\n    }\n\n    handleChange (event) {\n        this.setState({value: event.currentTarget.form.querySelector('input').value});\n    }\n\n    handleSave (event) {\n        this.props.handleSave(event)(this.props.realName, this.state.value, this.props.type);\n    }\n\n    render() {\n        const { value } = this.state;\n        const { handleClose, open } = this.props;\n\n        return (\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-create-folder\" fullWidth={true} maxWidth={'sm'}>\n                <form>\n                  <DialogTitle id=\"form-dialog-create-folder\">Rename</DialogTitle>\n                  <DialogContent>\n                    <TextField autoFocus fullWidth margin=\"dense\" label=\"Item name\" type=\"text\" onChange={this.handleChange.bind(this)} value={value} />\n                  </DialogContent>\n                  <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\" type=\"button\">\n                      Cancel\n                    </Button>\n                    <Button color=\"primary\" type=\"submit\" onClick={this.handleSave.bind(this)}>\n                      Save\n                    </Button>\n                  </DialogActions>\n                </form>\n            </Dialog>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        open: state.visibleDialogRename,\n        realName: state.selectedFiles.length ? state.selectedFiles[0].name : '',\n        type: state.selectedFiles.length ? state.selectedFiles[0].type : ''\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClose: event => {\n            dispatch(setVisibleDialogRename(false));\n        },\n        handleSave: event => (realName, newName, type) => {\n            event.preventDefault();\n            if (type === 'dir')\n                dispatch(renameFolder(realName, newName));\n            else\n               dispatch(renameFile(realName, newName));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { \n    setSelectedFolderSublist, enterToDirectorySublist \n} from '../../../Actions/Actions.js';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport FolderIcon from '@material-ui/icons/Folder';\nimport FileIcon from '@material-ui/icons/InsertDriveFile';\nimport blue from '@material-ui/core/colors/blue';\nimport '../File.css';\n\nconst styles = theme => ({\n});\n\n\nclass FileSublist extends Component {\n    render() {\n        const { type, name, handleClick, isSelected, handleDoubleClick } = this.props;\n        const avatarStyle = {\n            backgroundColor: isSelected ? blue['A200'] : null\n        };\n        return (\n            <div className=\"File\" onClick={handleClick} data-selected={isSelected} onDoubleClick={handleDoubleClick}>\n                <ListItem>\n                    <ListItemAvatar>\n                        <Avatar style={avatarStyle}>\n                            { type === 'dir' ? <FolderIcon /> : <FileIcon />}\n                        </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText primary={name} secondary=\"\" />\n                </ListItem>\n            </div>\n        );\n    }\n}\n\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        filePath: [...state.path, ownProps.name],\n        isSelected: state.selectedFolderSublist && (state.selectedFolderSublist.name === ownProps.name)\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        /**\n         * @param {Object} event\n         * @returns {undefined}\n         */\n        handleDoubleClick: (event) => {\n            dispatch(enterToDirectorySublist(ownProps.name));\n            dispatch(setSelectedFolderSublist(null));\n        },\n\n        /**\n         * @param {Object} event\n         * @returns {undefined}\n         */\n        handleClick: (event) => {\n            event.stopPropagation(); \n            dispatch(setSelectedFolderSublist(ownProps));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(FileSublist));\n\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport FileSublist from '../../File//FileSublist/FileSublist.jsx'; \nimport Loader from '../../Loader/Loader.jsx'; \nimport FileListEmptyMessage from '../FileListEmptyMessage';\nimport './FileListSublist.css'; \n\nclass FileListSublist extends Component {\n    render() {\n        const { fileList, loadingSublist } = this.props;\n        \n        const fileListComponent = fileList.map((file, key) => {\n            return <FileSublist type={file.type} name={file.name} key={key} />\n        });\n\n        return <div className=\"FileListSublist\">\n            { loadingSublist ? \n                <Loader /> : \n                fileListComponent.length ? fileListComponent : <FileListEmptyMessage />\n            }\n        </div>\n    }\n}\n\nconst mapStateToProps = (state) => {\n    const filteredList = state.fileListSublist\n        .filter(file => file.type === 'dir')\n        .filter(file => state.path.join('').trim() === state.pathSublist.join('').trim() ? \n            !state.selectedFiles.find(f => f.name === file.name) : true\n        );\n    return {\n        fileList: filteredList,\n        loadingSublist: state.loadingSublist,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FileListSublist);","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { connect } from 'react-redux';\nimport { setVisibleDialogMove, setSelectedFolderSublist, enterToPreviousDirectorySublist, moveItems } from '../../../Actions/Actions.js';\nimport FileListSublist from '../../FileList/FileListSublist/FileListSublist.jsx'; \nimport KeyboardArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft';\n\nclass FormDialog extends Component {\n\n    render() {\n        const { \n            selectedPath, handleClose, handleSave, open, \n            selectedFiles, canGoBack, canMove, handleGoBack \n        } = this.props;\n\n        return (\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-move\" fullWidth={true} maxWidth={'sm'}>\n                <form>\n                    <DialogTitle id=\"form-dialog-move\">\n                        Move files to <small style={{color: 'grey'}}>{ selectedPath.join('/') }</small>\n                    </DialogTitle>\n                    <DialogContent>\n                        <FileListSublist />\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={handleGoBack} color=\"primary\" type=\"button\" disabled={!canGoBack}>\n                            <KeyboardArrowLeftIcon /> Go back directory\n                        </Button>\n\n                        <Button onClick={handleClose} color=\"primary\" type=\"button\">\n                            Cancel\n                        </Button>\n                        <Button color=\"primary\" onClick={(e) => handleSave(e, selectedFiles)} disabled={!canMove} type=\"submit\">\n                            Move\n                        </Button>\n                    </DialogActions>\n                </form>\n            </Dialog>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    // prevent moving to same folder\n    const canMove = state.path.join('') !== state.pathSublist.join('') + (state.selectedFolderSublist ? state.selectedFolderSublist.name : '');\n\n    return {\n        open: state.visibleDialogMove,\n        selectedFolderSublist: state.selectedFolderSublist,\n        selectedPath: state.selectedFolderSublist ? [...state.pathSublist, state.selectedFolderSublist.name] : [],\n        selectedFiles: state.selectedFiles,\n        pathSublist: state.pathSublist,\n        canGoBack: state.pathSublist.length,\n        canMove: state.selectedFolderSublist && canMove\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClose: (event) => {\n            dispatch(setSelectedFolderSublist(null));\n            dispatch(setVisibleDialogMove(false));\n        },\n        handleSave: (event, selectedFiles) => {\n            dispatch(moveItems(selectedFiles));\n        },\n        handleGoBack: (event) => {\n            dispatch(setSelectedFolderSublist(null));\n            dispatch(enterToPreviousDirectorySublist());\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog);\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { connect } from 'react-redux';\nimport { setVisibleDialogCopy, setSelectedFolderSublist, enterToPreviousDirectorySublist, copyItems } from '../../../Actions/Actions.js';\nimport FileListSublist from '../../FileList/FileListSublist/FileListSublist.jsx'; \nimport KeyboardArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft';\n\nclass FormDialog extends Component {\n\n    render() {\n        const { \n            selectedPath, handleClose, handleSave, open, \n            canGoBack, canCopy, selectedFiles, handleGoBack \n        } = this.props;\n\n        return (\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-copy\" fullWidth={true} maxWidth={'sm'}>\n                <form>\n                    <DialogTitle id=\"form-dialog-copy\">\n                        Copy files to <small style={{color: 'grey'}}>{ selectedPath.join('/') }</small>\n                    </DialogTitle>\n                    <DialogContent>\n                        <FileListSublist />\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={handleGoBack} color=\"primary\" type=\"button\" disabled={!canGoBack}>\n                            <KeyboardArrowLeftIcon /> Go back directory\n                        </Button>\n\n                        <Button onClick={handleClose} color=\"primary\" type=\"button\">\n                            Cancel\n                        </Button>\n                        <Button color=\"primary\" onClick={(e) => handleSave(e, selectedFiles)} disabled={!canCopy} type=\"submit\">\n                            Copy\n                        </Button>\n                    </DialogActions>\n                </form>\n            </Dialog>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    // prevent copying to same folder\n    const canCopy = state.path.join('') !== state.pathSublist.join('') + (state.selectedFolderSublist ? state.selectedFolderSublist.name : '');\n\n    return {\n        open: state.visibleDialogCopy,\n        selectedFolderSublist: state.selectedFolderSublist,\n        selectedPath: state.selectedFolderSublist ? [...state.pathSublist, state.selectedFolderSublist.name] : [],\n        canGoBack: state.pathSublist.length,\n        canCopy: state.selectedFolderSublist && canCopy,\n        selectedFiles: state.selectedFiles\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClose: (event) => {\n            dispatch(setSelectedFolderSublist(null));\n            dispatch(setVisibleDialogCopy(false));\n        },\n        handleSave: (event, selectedFiles) => {\n            dispatch(copyItems(selectedFiles));\n        },\n        handleGoBack: (event) => {\n            dispatch(setSelectedFolderSublist(null));\n            dispatch(enterToPreviousDirectorySublist());\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport FileIcon from '@material-ui/icons/InsertDriveFile';\nimport { getHumanFileSize } from '../../Api/ApiHandler';\n\nfunction UploadFileList(props) {\n    const { files } = props;\n    const list = files.map((f, i) =>\n        <ListItem dense key={i}>\n            <ListItemIcon>\n                <FileIcon />\n            </ListItemIcon>\n            <ListItemText primary={`${f.name} (${getHumanFileSize(f.size)})`} />\n        </ListItem>\n    );\n\n    return (\n        <div>\n            <List component=\"nav\">\n                {list}\n            </List>\n        </div>\n    );\n}\n\nUploadFileList.propTypes = {\n    files: PropTypes.array.isRequired\n};\n\nexport default UploadFileList;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport UploadFileList from './UploadFileList';\n\nclass FileUploader extends Component {\n\n    handleReset(event) {\n        this.refs.inputfile.value = '';\n        this.props.handleReset(event);\n    }\n\n    render() {\n        const { fileUploadList, handleSelectedFiles } = this.props;\n        const styles = {\n            inputfile: {\n                // TODO: Change this to display none as soon, as the label button works\n                // display: 'none'\n            }, inputreset: {\n                display: fileUploadList.length ? 'inline-flex' : 'none'\n            }\n        }\n\n        return (\n            <div>\n                <label htmlFor=\"button-file\">\n                    <input style={styles.inputfile} id=\"button-file\" ref=\"inputfile\" multiple type=\"file\" onChange={handleSelectedFiles} />\n                    {/*<Button component=\"span\" variant=\"contained\" color=\"primary\">\n                        Select Files\n                    </Button>*/}\n                </label>\n\n                <Button style={styles.inputreset} component=\"span\" type=\"reset\" onClick={this.handleReset.bind(this)}>\n                    Clear\n                </Button>\n\n                <UploadFileList files={fileUploadList} />\n            </div>\n        );\n    }\n}\n\nFileUploader.propTypes = {\n    fileUploadList: PropTypes.array.isRequired,\n    handleReset: PropTypes.func.isRequired,\n    handleSelectedFiles: PropTypes.func.isRequired,\n};\n\nexport default FileUploader;\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { connect } from 'react-redux';\nimport { resetFileUploader, uploadFiles, setFileUploadList } from '../../../Actions/Actions.js';\nimport FileUploader from '../../FileUploader/FileUploader.jsx';\n\nclass FormDialog extends Component {\n\n    render() {\n        const { handleClose, handleReset, handleUpload, open, canUpload, fileUploadProgress, fileUploadList, handleSelectedFiles } = this.props;\n\n        return (\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-upload\" fullWidth={true} maxWidth={'sm'}>\n                <form>\n                    <DialogTitle id=\"form-dialog-upload\">\n                        Upload files\n                    </DialogTitle>\n                    <DialogContent>\n                        <FileUploader handleUpload={handleUpload} fileUploadList={fileUploadList} handleSelectedFiles={handleSelectedFiles} handleReset={handleReset}/>\n                        {canUpload ? <LinearProgress variant=\"determinate\" value={fileUploadProgress} /> : null }\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={handleClose} color=\"primary\" type=\"button\">\n                            Cancel\n                        </Button>\n                        <Button color=\"primary\" onClick={handleUpload} disabled={!canUpload} type=\"submit\">\n                            Upload\n                        </Button>\n                    </DialogActions>\n                </form>\n            </Dialog>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        open: state.visibleDialogUploadFile,\n        canUpload: state.fileUploadList.length,\n        fileUploadList: state.fileUploadList,\n        fileUploadProgress: state.fileUploadProgress\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClose: (event) => {\n            dispatch(resetFileUploader());\n        },\n        handleUpload: (event) => {\n            event.preventDefault();\n            const files = event.currentTarget.form.querySelector('input[type=file]').files;\n            dispatch(uploadFiles(files));\n        },\n        handleSelectedFiles: (event) => {\n            dispatch(setFileUploadList(\n                [...event.target.files].map(f => ({name: f.name, size: f.size}))\n            ));\n        },\n        handleReset: (event) => {\n            dispatch(setFileUploadList([]));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog);\n","import React from 'react';\nimport DialogSolidLogin from './SolidLogin/SolidLogin.jsx';\nimport DialogSolidLogout from './SolidLogout/SolidLogout.jsx';\nimport DialogContent from './Content/Content.jsx';\nimport DialogEdit from './Edit/Edit.jsx';\nimport DialogCreateFolder from './CreateFolder/CreateFolder.jsx';\nimport DialogCreateFile from './CreateFile/CreateFile.jsx';\nimport DialogRename from './Rename/Rename.jsx';\nimport DialogMove from './Move/Move.jsx';\nimport DialogCopy from './Copy/Copy.jsx';\nimport DialogUploadFile from './UploadFile/UploadFile.jsx';\n\nfunction Dialogs(props) {\n    return (\n        <div className=\"Dialogs\">\n            <DialogSolidLogin />\n            <DialogSolidLogout />\n            <DialogContent />\n            <DialogEdit />\n            <DialogCreateFolder />\n            <DialogCreateFile />\n            <DialogMove />\n            <DialogCopy />\n            <DialogRename />\n            <DialogUploadFile />\n        </div>\n    );\n}\n\nexport default Dialogs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { connect } from 'react-redux';\n\nconst styles = theme => ({\n  close: {\n    padding: theme.spacing.unit / 2,\n  },\n});\n\nclass DynamicSnackbar extends React.Component {\n  render() {\n    const { classes, errorMsg, handleClose, open, notificationDuration } = this.props;\n    return (\n      <div>\n        <Snackbar\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'left',\n          }}\n          open={open}\n          autoHideDuration={notificationDuration}\n          onClose={handleClose}\n          ContentProps={{\n            'aria-describedby': 'message-id',\n          }}\n          message={<span id=\"message-id\">{errorMsg}</span>}\n          action={[\n            <IconButton key=\"close\" aria-label=\"Close\" color=\"inherit\" className={classes.close} onClick={handleClose} >\n              <CloseIcon />\n            </IconButton>,\n          ]}\n        />\n      </div>\n    );\n  }\n}\n\nDynamicSnackbar.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        open: !!state.errorMsg,\n        errorMsg: state.errorMsg,\n        notificationDuration: state.notificationDuration || 60000\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClose: (event) => {\n            dispatch({\n                type: 'SET_ERROR_MSG',\n                value: null\n            });\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(DynamicSnackbar));\n\n","import React, { Component } from 'react';\nimport FileList from './Components/FileList/FileList.jsx';\nimport Navbar from './Components/Navbar/Navbar.jsx';\nimport ContextMenu from './Components/ContextMenu/ContextMenu.jsx';\nimport Dialogs from './Components/Dialogs/Dialogs.jsx';\n\nimport { MuiThemeProvider as MaterialUI, createMuiTheme } from '@material-ui/core/styles';\nimport blue from '@material-ui/core/colors/blue';\nimport { connect } from 'react-redux';\nimport { setContextMenuVisible, refreshFileList } from './Actions/Actions.js';\nimport DynamicSnackbar from './Components/Notification/DynamicSnackbar.jsx'; \n\nconst theme = createMuiTheme({\n    palette: {\n        primary: blue,\n    },\n    typography: {\n        useNextVariants: true,\n    }\n});\n\nclass App extends Component {\n\n    componentDidMount() {\n        this.props.init();\n    };\n\n    render() {\n        return (\n            <MaterialUI theme={theme}>\n                <div onClick={this.props.handleHideContextMenu} onContextMenu={this.props.handleHideContextMenu}>\n                    <Navbar />\n                    <FileList />\n                    <ContextMenu />\n                    <DynamicSnackbar />\n                    <Dialogs />\n                </div>\n            </MaterialUI>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        init: () => {\n            // dispatch(refreshFileList());\n        },\n\n        handleHideContextMenu: (event) => {\n            if (! (event.target.tagName === 'INPUT' || /label/i.test(event.target.className))) {\n                event.preventDefault();\n            }\n            dispatch(setContextMenuVisible(false));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport thunk from 'redux-thunk';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux'\nimport MainReducer from './Reducers/MainReducer'\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\nimport './index.css';\n\nconst store = createStore(MainReducer, applyMiddleware(thunk));\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>, \n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}